{
    "openapi": "3.0.3",
    "info": {
        "title": "Bitcoin - Mempool Monitoring API",
        "description": "Maestro's Bitcoin Mempool Monitoring API offers core indexer endpoints with mempool awareness, providing real-time visibility into unconfirmed transactions, enabling developers to build responsive, fee-optimized, and mempool-aware applications without managing their own node infrastructure.\n\n#### Key Features:\n- **Real-Time Transaction Monitoring:** Track unconfirmed transactions instantly as they enter the mempool, providing immediate insights for enhanced user experience.\n- **Optimal Fee Estimation:** Analyze current mempool conditions to help users set appropriate transaction fees, ensuring timely confirmations and cost efficiency.\n- **Network Health Analysis:** Monitor mempool size and state to detect network congestion and anomalies, aiding in informed decision-making regarding transaction timing.\n- **Custom Transaction Selection for Miners:** Utilize mempool data to prioritize transactions with higher fees, maximizing profits during block construction.\n\n#### Key Benefits for Developers:\nDevelopers can enhance their applications and improve user experience through real-time blockchain insights and optimized transaction processing.",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.txt"
        },
        "version": "v0.1.0"
    },
    "servers": [
        {
            "url": "https://xbt-mainnet.gomaestro-api.org/v0",
            "description": "Bitcoin Mainnet"
        },
        {
            "url": "https://xbt-testnet.gomaestro-api.org/v0",
            "description": "Bitcoin Testnet"
        }
    ],
    "paths": {
        "/mempool/addresses/{address}/balance": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Satoshi Balance by Address (Mempool-aware)",
                "description": "Returns the total balance in satoshis held at the specified address or script pubkey by summing all unspent outputs (UTXOs).\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_satoshi_balance_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tb1qphcdyah2e4vtpxn56hsz3p6kapg90pl4x525kc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTimestampedSatoshis"
                                },
                                "example": "{\n    \"data\": \"695100\",\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"000000000000000000012c80ffd2f0bd17f1f92a0bb4c098236d7108f727bfe5\",\n            \"block_height\": 874584\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 874585,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 8,\n                \"max\": 504\n            }\n        }]\n    }\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "404": {
                        "description": "Requested entity not found on-chain"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/addresses/{address}/runes": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Runes by Address (Mempool-aware)",
                "description": "Provides a list of all Rune assets held by the specified address. It returns both total and available balances, allowing for token inventory management and portfolio tracking.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_runes_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tb1qphcdyah2e4vtpxn56hsz3p6kapg90pl4x525kc"
                    },
                    {
                        "name": "mempool_blocks_limit",
                        "in": "query",
                        "description": "Limit the number of estimated mempool blocks to be reflected in the data (default: as many as available)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTimestampedRuneQuantities"
                                },
                                "example": "{\n    \"data\": {\n        \"867138:1861\": \"230000\"\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    }\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/addresses/{address}/runes/utxos": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Rune UTxOs by Address (mempool-aware)",
                "description": "Lists all UTXOs at the address or script pubkey that contains Rune tokens, with optional refinement based on Rune type or metadata. Helpful for spend analysis or wallet state audits.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_rune_utxos_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": ""
                    },
                    {
                        "name": "rune",
                        "in": "query",
                        "description": "Return only UTxOs containing a specific Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "example": "840000:3"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "The property by which response items should be sorted. Supported values: height (height of block which produced the UTxO - default), amount (amount of runes in UTxO)",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/OrderBy"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only UTxOs created on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only UTxOs created on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolPaginatedRuneUtxoByAddress"
                                },
                                "example": "{\n    \"data\": [{\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 3,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }, {\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 4,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }, {\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 5,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"0000000000000000000119bd8dffd7d8285a69744011aa98f0d9091b0555ca46\",\n            \"block_height\": 897627\n        },\n        \"mempool_timestamp\": \"2025-05-21 00:47:53\",\n        \"estimated_blocks\": [{\n            \"block_height\": 897628,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 5,\n                \"max\": 202\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/addresses/{address}/utxos": {
            "get": {
                "tags": ["Addresses"],
                "summary": "UTxOs by Address (Mempool-aware)",
                "description": "Retrieves all UTXOs associated with a Bitcoin address or script pubkey. Ideal for wallet views, dust filtering, or balance calculations. Can be tailored to exclude certain categories of UTXOs such as those used in metaprotocols.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_utxos_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tb1qphcdyah2e4vtpxn56hsz3p6kapg90pl4x525kc"
                    },
                    {
                        "name": "filter_dust",
                        "in": "query",
                        "description": "Ignore UTxOs containing less than 100000 sats",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "filter_dust_threshold",
                        "in": "query",
                        "description": "Ignore UTxOs containing less than specified satoshis",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "exclude_metaprotocols",
                        "in": "query",
                        "description": "Exclude UTxOs involved in metaprotocols (currently only runes and inscriptions will be discovered, more metaprotocols may be supported in future)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted (by height at which UTxO was produced)",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only UTxOs created on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only UTxOs created on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "mempool_blocks_limit",
                        "in": "query",
                        "description": "Limit the number of estimated mempool blocks to be reflected in the data (default: as many as available)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolPaginatedUtxo"
                                },
                                "example": "{\n    \"data\": [{\n        \"txid\": \"e60e70271cce70df4cc1f9d0217d7cc9cbced26f0526c6ba946945cd155b49e4\",\n        \"vout\": 0,\n        \"address\": \"bc1pkh05juaxqc3d388klrjq8msszzzfr33nnn5kt2na00jja3mue89q5wxvew\",\n        \"script_pubkey\": \"5120b5df4973a60622d89cf6f8e403ee10108491c6339ce965aa7d7be52ec77cc9ca\",\n        \"satoshis\": \"546\",\n        \"height\": 867154,\n        \"mempool\": false,\n        \"runes\": [{\n            \"rune_id\": \"867138:1861\",\n            \"amount\": \"2000\"\n        }],\n        \"inscriptions\": []\n    }, {\n        \"txid\": \"9f00f52bc6e9d95797e5597ea50427258ba873df059b13a319f0868ca9da1265\",\n        \"vout\": 0,\n        \"address\": \"bc1pkh05juaxqc3d388klrjq8msszzzfr33nnn5kt2na00jja3mue89q5wxvew\",\n        \"script_pubkey\": \"5120b5df4973a60622d89cf6f8e403ee10108491c6339ce965aa7d7be52ec77cc9ca\",\n        \"satoshis\": \"546\",\n        \"height\": 867155,\n        \"mempool\": true,\n        \"runes\": [{\n            \"rune_id\": \"867138:1861\",\n            \"amount\": \"44000\"\n        }],\n        \"inscriptions\": [{\n            \"offset\": 0,\n            \"inscription_id\": \"47bb5438d366863b25b4b1782af0d0cf0a89a922adce5da81253790d3e651501i0\"\n        }]\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/assets/runes/{rune}/holders": {
            "get": {
                "tags": ["Runes"],
                "summary": "Holders by Rune (Mempool-aware)",
                "description": "Lists all addresses currently holding a given Rune, with corresponding balances. Helps visualize token distribution and adoption.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_holders_by_rune",
                "parameters": [
                    {
                        "name": "rune",
                        "in": "path",
                        "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "2519999:31"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolPaginatedRuneHolder"
                                },
                                "example": "{\n    \"data\": [{\n        \"address\": \"bc1q764zfcx3uw0dcvcdh7nnwm5fvsml0c2tgn942v\",\n        \"script_pubkey\": \"0014f6aa24e0d1e39edc330dbfa7376e896437f7e14b\",\n        \"balance\": \"9000000.000000000000000000\"\n    }, {\n        \"address\": \"bc1pqfhj6tlxgpvc72mvn9hh0z666k45fpxgsej92d9q08sfe572mhlqca68ld\",\n        \"script_pubkey\": \"5120026f2d2fe640598f2b6c996f778b5ad5ab4484c886645534a079e09cd3caddfe\",\n        \"balance\": \"420000.000000000000000000\"\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/fee_rates": {
            "get": {
                "tags": ["General"],
                "summary": "Mempool Block Fee Rates",
                "description": "Statistics regarding fee rates of transactions within estimated mempool blocks.",
                "operationId": "fee_rates",
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTimestampedFeeRates"
                                },
                                "example": "{\n    \"data\": [{\n        \"block_height\": 874585,\n        \"sats_per_vb\": {\n            \"min\": 1,\n            \"median\": 8,\n            \"max\": 504\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"000000000000000000012c80ffd2f0bd17f1f92a0bb4c098236d7108f727bfe5\",\n            \"block_height\": 874584\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 874585,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 8,\n                \"max\": 504\n            }\n        }]\n    }\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/transactions/{tx_hash}/metaprotocols": {
            "get": {
                "tags": ["Transactions"],
                "summary": "Transaction Info with Metaprotocols (Mempool-aware)",
                "description": "Returns an enhanced view of the transaction, including info about metaprotocols in both inputs and outputs. Useful for deep inspection tools.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "tx_info_with_metaprotocols",
                "parameters": [
                    {
                        "name": "tx_hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1b07f02356aed6ddca37db8226c6292f2953d55ea741d7f58d44427976e7d4ee"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTimestampedTxInfoMetaprotocols"
                                },
                                "example": "{\n    \"data\": {\n        \"height\": 900962,\n        \"volume\": \"3666788\",\n        \"fees\": \"508\",\n        \"sats_per_vb\": 2,\n        \"metaprotocols\": [\n          \"runes\"\n        ],\n        \"inputs\": [{\n            \"txid\": \"ed6273c6ff9259ec6a68dff0b21ddc4499e2e6d9837981f8c5089ac4935f6cf5\",\n            \"vout\": 0,\n            \"address\": \"bc1qyvtvxfyz60mmudgsmtxxpf22jl040ejmpj5mqnwv9lwr30jzmygqhr9tv8\",\n            \"script_pubkey\": \"00202316c32482d3f7be3510dacc60a54a97df57e65b0ca9b04dcc2fdc38be42d910\",\n            \"satoshis\": \"3666696\",\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"txid\": \"a115a1818805fa06a80eaa57287c0c3f57d5993c1f0d3f771523b4d11711d31f\",\n            \"vout\": 1,\n            \"address\": \"bc1pn2w92qyh7mwpf9rzmnvjnc0whswft243n0ntj50lurpnsjwwfy9sjur75v\",\n            \"script_pubkey\": \"51209a9c550097f6dc149462dcd929e1eebc1c95aab19be6b951ffe0c33849ce490b\",\n            \"satoshis\": \"600\",\n            \"inscriptions\": [],\n            \"runes\": []\n        }],\n        \"outputs\": [{\n            \"address\": null,\n            \"script_pubkey\": \"6a5d0b00c0a23303ffbedbb50201\",\n            \"satoshis\": \"0\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1pdruptufwh9awfepzq506kh03392lk074n4a5cy3v8zu0ma0sjvtqhwdu85\",\n            \"script_pubkey\": \"512068f815f12eb97ae4e422051fab5df18955fb3fd59d7b4c122c38b8fdf5f09316\",\n            \"satoshis\": \"546\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qyvtvxfyz60mmudgsmtxxpf22jl040ejmpj5mqnwv9lwr30jzmygqhr9tv8\",\n            \"script_pubkey\": \"00202316c32482d3f7be3510dacc60a54a97df57e65b0ca9b04dcc2fdc38be42d910\",\n            \"satoshis\": \"3641305\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qp8j9sx6609h7llqufurxjgrwsqwt020tqzn0gs\",\n            \"script_pubkey\": \"001409e4581b5a796feffc1c4f0669206e801cb7a9eb\",\n            \"satoshis\": \"580\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qqx7h6wrl52hxwqnp8v8k072ahnr3sq8huzynww\",\n            \"script_pubkey\": \"001401bd7d387fa2ae6702613b0f67f95dbcc71800f7\",\n            \"satoshis\": \"24357\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n        }]\n    },\n    \"indexer_info\": {\n    \"chain_tip\": {\n        \"block_hash\": \"0000000000000000000148c7dbf4f8721db8912485cc6860e5b22f9b62e09870\",\n        \"block_height\": 900961\n    },\n    \"mempool_timestamp\": \"2025-06-12 17:27:29\",\n    \"estimated_blocks\": [{\n        \"block_height\": 900962,\n        \"sats_per_vb\": {\n            \"min\": 2,\n            \"median\": 4,\n            \"max\": 101\n        }\n    }]\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "404": {
                        "description": "Requested entity not found on-chain"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/mempool/transactions/{tx_hash}/outputs/{output_index}": {
            "get": {
                "tags": ["Transactions"],
                "summary": "Transaction Output Info (Mempool-aware)",
                "description": "Provides detailed information for a single transaction output, including its value, spend status, and any attached metadata such as Ordinal inscriptions, Runes, or BRC20 data.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
                "operationId": "mempool_tx_output_info",
                "parameters": [
                    {
                        "name": "tx_hash",
                        "in": "path",
                        "description": "Transaction hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "b077b8d829004197c5d71bbb755cf23914891db4768d642458c8ef245b3af7fe"
                    },
                    {
                        "name": "output_index",
                        "in": "path",
                        "description": "Transaction output index",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "0"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTimestampedTxOutMetaprotocols"
                                },
                                "example": "{\n    \"data\": {\n        \"address\": \"bc1qr46dacxy28zz5apsjrvs5jdgvs5sdcf2ed4tvl\",\n        \"script_pubkey\": \"00141d74dee0c451c42a743090d90a49a8642906e12a\",\n        \"satoshis\": \"85000\",\n        \"spending_tx\": null,\n        \"inscriptions\": [],\n        \"runes\": []\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"0000000000000000000085563bb7da463844c02d6c82bca13e3eec5411f8c8ed\",\n            \"block_height\": 897991\n        },\n        \"mempool_timestamp\": \"2025-05-23 11:43:08\",\n        \"estimated_blocks\": [{\n            \"block_height\": 897992,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 210\n            }\n        }]\n    }\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "404": {
                        "description": "Requested entity not found on-chain"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BlockSatsPerVb": {
                "type": "object",
                "description": "For transactions within a block, these are the lowest, median and highest\nsatoshis per virtual-byte values.",
                "required": ["min", "median", "max"],
                "properties": {
                    "max": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Highest sat/vB value of the transactions within the block",
                        "example": 255,
                        "minimum": 0
                    },
                    "median": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Median sat/vB value of the transactions within the block",
                        "example": 15,
                        "minimum": 0
                    },
                    "min": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Lowest sat/vB value of the transactions within the block",
                        "example": 11,
                        "minimum": 0
                    }
                }
            },
            "ChainTip": {
                "type": "object",
                "required": ["block_hash", "block_height"],
                "properties": {
                    "block_hash": {
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0000000000000000000a7f3b7b6b6e1d9a18db65a3b4a3f4f3bcb2e1f1b2d3e7"
                    },
                    "block_height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The height of the block in the blockchain",
                        "example": 707000,
                        "minimum": 0
                    }
                }
            },
            "EstimatedBlock": {
                "type": "object",
                "required": ["block_height", "sats_per_vb"],
                "properties": {
                    "block_height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of the estimated block",
                        "example": "707001",
                        "minimum": 0
                    },
                    "sats_per_vb": {
                        "$ref": "#/components/schemas/BlockSatsPerVb"
                    }
                }
            },
            "InscriptionAndOffset": {
                "type": "object",
                "required": ["offset", "inscription_id"],
                "properties": {
                    "inscription_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }
            },
            "MempoolLastUpdated": {
                "type": "object",
                "required": ["chain_tip", "estimated_blocks"],
                "properties": {
                    "chain_tip": {
                        "$ref": "#/components/schemas/ChainTip"
                    },
                    "estimated_blocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EstimatedBlock"
                        },
                        "description": "Information about any estimated blocks from the mempool that were indexed in addition to the mainchain"
                    },
                    "mempool_timestamp": {
                        "type": "string",
                        "description": "Timestamp of the indexed mempool snapshot, if any estimated blocks from the mempool have been indexed",
                        "nullable": true
                    }
                }
            },
            "MempoolPaginatedRuneHolder": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneHolder"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolPaginatedRuneUtxoByAddress": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneUtxoByAddress"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolPaginatedUtxo": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MempoolUtxo"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolTimestampedFeeRates": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EstimatedBlock"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "MempoolTimestampedRuneQuantities": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "MempoolTimestampedSatoshis": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "string"
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "MempoolTimestampedTxInfoMetaprotocols": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/MempoolTxInfoMetaprotocols"
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "MempoolTimestampedTxOutMetaprotocols": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/TxOutMetaprotocols"
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "MempoolTxInfoMetaprotocols": {
                "type": "object",
                "required": [
                    "height",
                    "volume",
                    "fees",
                    "sats_per_vb",
                    "metaprotocols",
                    "inputs",
                    "outputs"
                ],
                "properties": {
                    "fees": {
                        "type": "string",
                        "description": "Fees paid to the miner.",
                        "example": "2504"
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Block height.",
                        "example": 875075,
                        "minimum": 0
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TxInMetaprotocols"
                        },
                        "description": "List of inputs, in the same order as the transaction."
                    },
                    "metaprotocols": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metaprotocol"
                        },
                        "description": "Whether any of the transactions in the block involved metaprotocols."
                    },
                    "outputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TxOutMetaprotocols"
                        },
                        "description": "List of outputs, in the same order as the transaction."
                    },
                    "sats_per_vb": {
                        "type": "integer",
                        "format": "int64",
                        "description": "sats per vB of the transaction.",
                        "example": 15,
                        "minimum": 0
                    },
                    "volume": {
                        "type": "string",
                        "description": "Total number of satoshis that went through this transaction, minus fees.",
                        "example": "12345678"
                    }
                }
            },
            "MempoolUtxo": {
                "type": "object",
                "required": [
                    "txid",
                    "vout",
                    "script_pubkey",
                    "satoshis",
                    "height",
                    "mempool",
                    "runes",
                    "inscriptions"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "inscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionAndOffset"
                        }
                    },
                    "mempool": {
                        "type": "boolean"
                    },
                    "runes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        }
                    },
                    "satoshis": {
                        "type": "string"
                    },
                    "script_pubkey": {
                        "type": "string"
                    },
                    "txid": {
                        "type": "string"
                    },
                    "vout": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "Metaprotocol": {
                "type": "string",
                "enum": ["inscriptions", "runes", "brc20"]
            },
            "OrderBy": {
                "type": "string",
                "default": "height",
                "enum": ["height", "amount"]
            },
            "OrderParam": {
                "type": "string",
                "default": "asc",
                "enum": ["asc", "desc"]
            },
            "RuneAndAmount": {
                "type": "object",
                "required": ["rune_id", "amount"],
                "properties": {
                    "amount": {
                        "type": "string"
                    },
                    "rune_id": {
                        "type": "string"
                    }
                }
            },
            "RuneHolder": {
                "type": "object",
                "required": ["script_pubkey", "balance"],
                "properties": {
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "balance": {
                        "type": "string"
                    },
                    "script_pubkey": {
                        "type": "string"
                    }
                }
            },
            "RuneUtxoByAddress": {
                "type": "object",
                "required": [
                    "txid",
                    "vout",
                    "satoshis",
                    "confirmations",
                    "height",
                    "runes"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    },
                    "runes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        }
                    },
                    "satoshis": {
                        "type": "string"
                    },
                    "txid": {
                        "type": "string"
                    },
                    "vout": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0
                    }
                }
            },
            "TxInMetaprotocols": {
                "type": "object",
                "required": [
                    "txid",
                    "vout",
                    "script_pubkey",
                    "satoshis",
                    "inscriptions",
                    "runes"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address-encoding of the script pubkey at which the input resides.",
                        "example": "bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr",
                        "nullable": true
                    },
                    "inscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionAndOffset"
                        },
                        "description": "List of inscription IDs and their offsets in this input."
                    },
                    "runes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        },
                        "description": "List of rune IDs and their amount in this input."
                    },
                    "satoshis": {
                        "type": "string",
                        "description": "Total number of satoshis in the UTxO.",
                        "example": "1234567"
                    },
                    "script_pubkey": {
                        "type": "string",
                        "description": "Script pubkey at which the input resides.",
                        "example": "5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596"
                    },
                    "txid": {
                        "type": "string",
                        "description": "Transaction hash of the UTxO.",
                        "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5"
                    },
                    "vout": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Output index of the UTxO.",
                        "example": 0,
                        "minimum": 0
                    }
                }
            },
            "TxOutMetaprotocols": {
                "type": "object",
                "required": [
                    "script_pubkey",
                    "satoshis",
                    "inscriptions",
                    "runes"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address-encoding of the script pubkey at which the output containing the inscription resides.",
                        "example": "bc1ppth27qnr74qhusy9pmcyeaelgvsfky6qzquv9nf56gqmte59vfhqwkqguh",
                        "nullable": true
                    },
                    "inscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionAndOffset"
                        },
                        "description": "List of inscription IDs and their offsets in this input."
                    },
                    "runes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        },
                        "description": "List of rune IDs and their amount in this input."
                    },
                    "satoshis": {
                        "type": "string",
                        "description": "Total number of satoshis in the UTxO.",
                        "example": "1234567"
                    },
                    "script_pubkey": {
                        "type": "string",
                        "description": "Script pubkey at which the output containing the inscription resides.",
                        "example": "51200aeeaf0263f5417e40850ef04cf73f43209b13401038c2cd34d201b5e685626e"
                    },
                    "spending_tx": {
                        "type": "string",
                        "description": "If this output is known to have been spent, hash of the transaction that spent it.",
                        "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5",
                        "nullable": true
                    }
                }
            }
        },
        "securitySchemes": {
            "api-key": {
                "type": "apiKey",
                "in": "header",
                "name": "api-key",
                "description": "Project API Key"
            }
        }
    },
    "security": [
        {
            "api-key": []
        }
    ]
}
