{
  "openapi": "3.0.3",
  "info": {
    "title": "Bitcoin - Merged Services API",
    "version": "1.0.0",
    "description": "Maestro's Bitcoin Merged Service API is a unified OpenAPI specification that combines multiple Bitcoin-related services into one comprehensive spec. It integrates endpoints from the following core services:\n\n - **Esplora API:** Core Esplora endpoints: blocks, transactions, addresses, mempool, fees, UTXO data and more.\n\n - **Blockchain Indexer API:** Core Bitcoin endpoints with support for Bitcoin metaprotocols indexed for real-time, rollback-protected access to UTXO data such as transaction activity, address balances and block data.\n - **Event Manager API:** Programmable webhook infrastructure for tracking Bitcoin events like transactions, address activity, and related state changes via configurable triggers.\n - **Market Price API:** Real-time, rollback-protected DEX pricing data with deep network-level indexing for BTC and Rune assets.\n - **Mempool Monitoring API:** Core Bitcoin endpoints indexed with mempool awareness, providing real-time visibility into unconfirmed transactions and fees.\n - **Node RPC API:** Interaction with Bitcoin nodes for low-level operations like sending transactions and querying blockchain state.\n - **Wallet API:** Granular address-level visibility across native Bitcoin and metaprotocol assets like inscriptions and runes, enabling detailed tracking of balance changes, token activity, and historical balance changes with USD-denominated valuation over time."
  },
  "servers": [
    {
      "url": "https://xbt-mainnet.gomaestro-api.org/v0",
      "description": "Bitcoin Mainnet"
    },
    {
      "url": "https://xbt-testnet.gomaestro-api.org/v0",
      "description": "Bitcoin Testnet"
    }
  ],
  "externalDocs": {
    "description": "",
    "url": ""
  },
  "security": [
    {
      "api-key": []
    }
  ],
  "paths": {
    "/addresses/{address}/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Satoshi Activity by Address",
        "description": "Returns all transactions for a given address or script pubkey, allowing insight into when the balance increased, decreased, or remained the same. This endpoint supports customization to narrow results by time, transaction type, or ordering, enabling tailored historical views.",
        "operationId": "satoshi_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions included on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions included on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Only return transactions of a specific activity kind. Supported values: \"increase\" for transactions where satoshi balance increases, \"decrease\" for decrease, and \"self_transfer\" for transactions where satoshi balance remained the same.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Do not return self-transfer transactions - transactions in which satoshi balance did not increase or decrease.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 892671,\n        \"confirmations\": 48,\n        \"tx_hash\": \"9f2d17f672ebb9962940aba94daef140cc876f32edba5e9325c18ca17534120e\",\n        \"kind\": \"increase\",\n        \"amount\": \"4456732\"\n    }, {\n        \"height\": 892676,\n        \"confirmations\": 43,\n        \"tx_hash\": \"2c34dbe0d8dcbf4faba291e50cda1d9b6f70cccdbb2fcd23a9341d2791845998\",\n        \"kind\": \"decrease\",\n        \"amount\": \"4456732\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000c7f19aca70cdeab9d7f04a79d1c8283b66dce78796e8\",\n        \"block_height\": 892719\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/balance": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Satoshi Balance by Address",
        "description": "Returns the total balance in satoshis held at the specified address or script pubkey by summing all unspent outputs (UTXOs). This is a direct snapshot of the address's spendable funds and does not include mempool transactions.",
        "operationId": "satoshi_balance_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedSatoshis"
                },
                "example": "{\n    \"data\": \"695100\",\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000005075404edd6edc806976389a9f7e2ff71db1c2cf9b83\",\n        \"block_height\": 884991\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/balance/historical": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Historical Satoshi Balance by Address",
        "description": "Returns the historical satoshi balances, itemized by block and including USD price.",
        "operationId": "historical_satoshi_balance_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only blocks included on or after a specific height or timestamps. If this parameter is not provided, the starting point will be the first block where the address has seen its balance increase or decrease.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only blocks included on or before a specific height or timestamp",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "height_params",
            "in": "query",
            "description": "Whether the from and to integer query params should be read as timestamps or as block heights. True (the default) means from and to params should be read as block heights.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHistoricalSatBalanceByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 899903,\n        \"confirmations\": 932,\n        \"unix_timestamp\": 1749126863,\n        \"timestamp\": \"2025-06-05 12:34:23\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899904,\n        \"confirmations\": 931,\n        \"unix_timestamp\": 1749126892,\n        \"timestamp\": \"2025-06-05 12:34:52\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899905,\n        \"confirmations\": 930,\n        \"unix_timestamp\": 1749126924,\n        \"timestamp\": \"2025-06-05 12:35:24\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.56\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000014ba9b2d30d9c737423c753c5b6a27989815ed50afe04\",\n        \"block_height\": 900834\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/brc20": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "BRC20 by Address",
        "description": "Returns a collection of BRC20 tokens associated with the address, showing both the total and available (transferable) balances. This is essential for building BRC20 token wallets and dashboards.",
        "operationId": "brc20_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedBrc20Quantities"
                },
                "example": "{\n    \"data\": {\n        \"ABCD\": {\n            \"total\": \"312000.000\",\n            \"available\": \"0.123\"\n        }\n    },\n    \"last_updated\": {\n        \"block_hash\": \"000000009ed3f5385c1807ca04630b9b2273398670726f93282fd41ba88dc6b8\",\n        \"block_height\": 2413542\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/brc20/transfer_inscriptions": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "BRC20 Transfer Inscriptions by Address",
        "description": "Returns all unspent BRC20 transfer inscriptions residing at the address. This endpoint is critical for applications facilitating token transfers, as it identifies transfer-eligible inscriptions.",
        "operationId": "brc20_transfer_inscriptions_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p98p4wj9y5ppa4rkal59vrnp56tf8v6hggymud6awkf9rhdyvvc2s9jp0m3"
          },
          {
            "name": "ticker",
            "in": "query",
            "description": "BRC20 ticker string",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "oxbt"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTransferInscriptionByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"ticker\": \"oxbt\",\n        \"inscription_id\": \"1da6ca5f0c07634d3e233197997a21091f10907c942b2a8e77a4d77381ca96b8i0\",\n        \"token_amount\": \"10000000.000000000000\",\n        \"satoshis\": \"546\",\n        \"utxo_txid\": \"1da6ca5f0c07634d3e233197997a21091f10907c942b2a8e77a4d77381ca96b8\",\n        \"utxo_vout\": 0,\n        \"utxo_sat_offset\": 0,\n        \"utxo_block_height\": 851440,\n        \"utxo_confirmations\": 481\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000023f7c4b362352c7948fb6ed7775bcd558ef1c7966c0\",\n        \"block_height\": 851921\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/inscriptions": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Inscriptions by Address",
        "description": "Retrieves all inscriptions currently controlled by a specific address. Useful for wallet UIs and inscription portfolio views.",
        "operationId": "inscriptions_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"inscription_id\": \"f02da3d6bebab13d5d604be1ed73d9a9c677dadf6ca71bc5fff7d99cdead11b0i0\",\n        \"satoshis\": 546,\n        \"utxo_sat_offset\": 0,\n        \"utxo_txid\": \"e2283e7c915ef074806136e0002cbc69f5fdd2e9f70f14b0eab48cdcbe867cc1\",\n        \"utxo_vout\": 0,\n        \"utxo_block_height\": 843010,\n        \"utxo_confirmations\": 23701\n    }, {\n        \"inscription_id\": \"7d0a2dd897222913d58fc957b0429526117a0a61c964642fe93b077f328ccec1i0\",\n        \"satoshis\": 546,\n        \"utxo_sat_offset\": 0,\n        \"utxo_txid\": \"3c7c0f5c6a0d3f0ab5c8bcef0adf3be56f5aeed8b2dd1504b7a950fc4fee1f46\",\n        \"utxo_vout\": 1,\n        \"utxo_block_height\": 850976,\n        \"utxo_confirmations\": 15735\n    }, {\n        \"inscription_id\": \"360550a31c9510ed5052c4351619bf68d5ae3f218bf2e9c1092090dbcf86acb3i0\",\n        \"satoshis\": 546,\n        \"utxo_sat_offset\": 0,\n        \"utxo_txid\": \"3c7c0f5c6a0d3f0ab5c8bcef0adf3be56f5aeed8b2dd1504b7a950fc4fee1f46\",\n        \"utxo_vout\": 1,\n        \"utxo_block_height\": 850976,\n        \"utxo_confirmations\": 15735\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000ec10254178fe52253f40c1fad252e892d9aa22ee8fa7\",\n        \"block_height\": 866710\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/inscriptions/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Inscription Activity by Address",
        "description": "Returns all inscription-related transactions involving a specific address. Can be filtered by activity type (send, receive, self-transfer), narrowed to a specific inscription, and sorted chronologically. Useful for building dashboards, tracking user behavior, or filtering unwanted spam activity.",
        "operationId": "inscription_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "inscription_id",
            "in": "query",
            "description": "Return only transactions containing a specific inscription, specified by an inscription ID. In presence of activity_kind, it relates to this specific inscription. In presence of exclude_self_transfers, it is this specific inscription that should be sent or received but not self-transferred.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0"
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Filter txs by presence of specific activity kind. Supported values: send, receive, self_transfer. In presence of inscription filter, the activity kind relates to that specific inscription. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InscriptionActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Exclude txs only containing inscriptions self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of inscription filter, that specific inscription should be sent or received, not self-transferred.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 836717,\n        \"confirmations\": 60911,\n        \"tx_hash\": \"a977a36055ba3d26203c82e6ee585539cadd12c3d17b236ffb67c051320b8991\",\n        \"self_transferred\": [],\n        \"sent\": [],\n        \"received\": [{\n          \"inscription_id\": \"696936486c96124784d46dec66dd9e806280a182d1addf9763ff4bb92d0bc918i64\",\n          \"from\": {\n            \"address\": \"bc1p4at29alvmmtunc5ffcpm9n5e4rvz63hlrjcrgd2zh7d7jy24xgns2g7rw7\",\n            \"script_pubkey\": \"5120af56a2f7ecded7c9e2894e03b2ce99a8d82d46ff1cb0343542bf9be911553227\",\n            \"input_index\": 0,\n            \"sat_offset\": 0\n          },\n          \"to\": {\n            \"address\": \"bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p\",\n            \"script_pubkey\": \"512057a514f55b1c5b47ee3cef5837cd6410dec5755e9d4ffc15060d84da9899d351\",\n            \"output_vout\": 0,\n            \"sat_offset\": 0,\n            \"output_txid\": \"a977a36055ba3d26203c82e6ee585539cadd12c3d17b236ffb67c051320b8991\"\n          }\n        }]\n    }, {\n        \"height\": 836718,\n        \"confirmations\": 60910,\n        \"tx_hash\": \"7647d53756d6f03b5191baaca26d84dbe2715406912eb2543c9d19c892a29c73\",\n        \"self_transferred\": [],\n        \"sent\": [{\n            \"inscription_id\": \"696936486c96124784d46dec66dd9e806280a182d1addf9763ff4bb92d0bc918i64\",\n            \"from\": {\n                \"address\": \"bc1pjuewj3dd4kpjen4zaqxd354jnwdjunewu7ncuaqqgsr0xa4cczzseg9066\",\n                \"script_pubkey\": \"51209732e945adad832ccea2e80cd8d2b29b9b2e4f2ee7a78e74004406f376b8c085\",\n                \"input_index\": 2,\n                \"sat_offset\": 0\n            },\n            \"to\": {\n                \"address\": \"bc1pjuewj3dd4kpjen4zaqxd354jnwdjunewu7ncuaqqgsr0xa4cczzseg9066\",\n                \"script_pubkey\": \"51209732e945adad832ccea2e80cd8d2b29b9b2e4f2ee7a78e74004406f376b8c085\",\n                \"output_vout\": 1,\n                \"sat_offset\": 0,\n                \"output_txid\": \"7647d53756d6f03b5191baaca26d84dbe2715406912eb2543c9d19c892a29c73\"\n            }\n        }],\n        \"received\": []\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000119bd8dffd7d8285a69744011aa98f0d9091b0555ca46\",\n        \"block_height\": 897627\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/runes": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Runes by Address",
        "description": "Provides a list of all Rune assets held by the specified address. It returns both total and available balances, allowing for token inventory management and portfolio tracking.",
        "operationId": "runes_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedRuneQuantities"
                },
                "example": "{\n    \"data\": {\n        \"2584333:39\": \"100000.00\",\n        \"2585186:140\": \"100000.000000000000\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"0000000088bee3b517745636443c8f11aff45209449300a5d8461c336e467925\",\n        \"block_height\": 2815520\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/runes/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Rune Activity by Address",
        "description": "Return all transactions where the specified address has rune activity, with the option to filter by a specific rune kind.",
        "operationId": "rune_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "rune",
            "in": "query",
            "description": "Return only transactions containing a specific rune, specified either by the rune ID (etching block number and transaction index) or name (spaced or un-spaced). In presence of activity_kind, it relates to this specific rune. In presence of exclude_self_transfers, it is this specific rune that the queried address should see increase or decrease in balance in the tx, not just being self-transferred.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "840000:3"
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Filter txs by presence specific activity kind. Supported values: increased, decreased, self_transfer. In presence of rune filter, the activity kind relates to that specific rune. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RuneActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Exclude txs only containing runes self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of rune filter, that specific rune should be sent or received, not self-transferred.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRuneActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 875944,\n        \"confirmations\": 21684,\n        \"tx_hash\": \"6a4237d43719e0766a8333eb8531b3bae9b20e7484e6962a731773b883315da1\",\n        \"etched_rune\": null,\n        \"minted\": null,\n        \"self_transfers\": [],\n        \"increased_balances\": [{\n            \"rune_id\": \"840000:28\",\n            \"amount\": \"1453573\"\n        }],\n        \"decreased_balances\": []\n    }, {\n        \"height\": 876070,\n        \"confirmations\": 21558,\n        \"tx_hash\": \"1c2c45980432108fda7b4eb2a390bd1cae7aac62b9309f5ef3911960e50b8501\",\n        \"etched_rune\": null,\n        \"minted\": null,\n        \"self_transfers\": [{\n            \"rune_id\": \"840000:28\",\n            \"amount\": \"1453573\"\n        }],\n        \"increased_balances\": [],\n        \"decreased_balances\": []\n    }, {\n        \"height\": 876103,\n        \"confirmations\": 21525,\n        \"tx_hash\": \"cbcbac069d142c303b062dda88635e4939d69120f66d89a9da17ebd0ff806a1f\",\n        \"etched_rune\": null,\n        \"minted\": null,\n        \"self_transfers\": [],\n        \"increased_balances\": [],\n        \"decreased_balances\": [{\n            \"rune_id\": \"840000:28\",\n            \"amount\": \"207654\"\n        }]\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000119bd8dffd7d8285a69744011aa98f0d9091b0555ca46\",\n        \"block_height\": 897627\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/runes/utxos": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Rune UTxOs by Address",
        "description": "Lists all UTXOs at the address or script pubkey that contains Rune tokens, with optional refinement based on Rune type or metadata. Helpful for spend analysis or wallet state audits.",
        "operationId": "rune_utxos_by_address_v2",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "rune",
            "in": "query",
            "description": "Return only UTxOs containing a specific Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "840000:3"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "The property by which response items should be sorted. Supported values: height (height of block which produced the UTxO - default), amount (amount of runes in UTxO)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OrderBy"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRuneUtxoByAddress"
                },
                "example": "{\n    \"data\": [\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 3,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 4,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 5,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 6,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 7,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 8,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 9,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13636,\n            \"height\": 876954,\n            \"runes\": [\n                {\n                    \"rune_id\": \"876947:7\",\n                    \"amount\": \"2500000\"\n                }\n            ]\n        }\n    ],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000e0b35ac5973cb61e9994c78b83d20f75f4b8f8d54fff\",\n        \"block_height\": 890589\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/runes/{rune}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "(deprecated) Rune UTxOs by Address and Rune",
        "description": "Return all UTxOs controlled by the specified address or script pubkey which contain runes, with the option to filter by a specific rune kind.",
        "operationId": "rune_utxos_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "876947:7"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by height at which UTxO was produced)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDeprecatedRuneUtxoByAddress"
                },
                "example": "{\n    \"data\": [\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 3,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 4,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 5,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 6,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 7,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 8,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        },\n        {\n            \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n            \"vout\": 9,\n            \"satoshis\": \"546\",\n            \"confirmations\": 13634,\n            \"height\": 876954,\n            \"rune_amount\": \"2500000\"\n        }\n    ],\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000210d44d102ab68eaa052ce03fbe216d313294725bdfaf\",\n        \"block_height\": 890587\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "deprecated": true
      }
    },
    "/addresses/{address}/statistics": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Address Statistics",
        "description": "Returns all current statistics of the address: total txs the address was involved in, total unspent outputs controlled by the address, current satoshi, control of any runes and inscription balance.",
        "operationId": "address_statistics",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedAddressStatistics"
                },
                "example": "{\n    \"data\": {\n        total_txs: 50,\n        total_utxos: 25,\n        runes: true,\n        total_inscriptions: 6100,\n        sat_balance: \"12345678\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000005075404edd6edc806976389a9f7e2ff71db1c2cf9b83\",\n        \"block_height\": 884991\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/txs": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Transactions by Address",
        "description": "List of all transactions which consumed or produced a UTxO controlled by the specified address or script pubkey.",
        "operationId": "txs_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "confirmations",
            "in": "query",
            "description": "Only return transactions with at least a certain amount of confirmations",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by height at which transaction was included in a block)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions included on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions included on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInvolvedTransaction"
                },
                "example": "{\n    \"data\": [{\n        \"tx_hash\": \"1cd3a819876660e98d3d5d9e4d36ddbd1ae6f96e58de0d3977f0ef2ce6e4194a\",\n        \"height\": 5277680,\n        \"input\": true,\n        \"output\": true\n    }, {\n        \"tx_hash\": \"ad7b8037fc7551fd9e644ddd39bc0501bc6aac865284fd79dde8b732af45acd9\",\n        \"height\": 5277682,\n        \"input\": true,\n        \"output\": true\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"8ac9689a7901531013c3cd621eae8b8e75b1994f477d616a4faa2a10afd9be58\",\n        \"block_height\": 5277710\n    },\n    \"next_cursor\": \"AAAAAABQh_JgAAlg2axFrzK36N15_YRShqxqvAEFvDndTWSe_VF1_DeAe60\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/addresses/{address}/utxos": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "UTxOs by Address",
        "description": "Retrieves all UTXOs associated with a Bitcoin address or script pubkey. Ideal for wallet views, dust filtering, or balance calculations. Can be tailored to exclude certain categories of UTXOs such as those used in metaprotocols.",
        "operationId": "utxos_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "filter_dust",
            "in": "query",
            "description": "Ignore UTxOs containing less than 100000 sats",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "filter_dust_threshold",
            "in": "query",
            "description": "Ignore UTxOs containing less than specified satoshis",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "exclude_metaprotocols",
            "in": "query",
            "description": "Exclude UTxOs involved in metaprotocols (currently only runes and inscriptions will be discovered, more metaprotocols may be supported in future)",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by height at which UTxO was produced)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedUtxo"
                },
                "example": "{\n    \"data\": [{\n        \"txid\": \"cb9532641412a6fa6f329e8728a8f7554dcaa6cdaec1355bd2bd2903cd61c6eb\",\n        \"vout\": 1,\n        \"address\": \"bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8\",\n        \"script_pubkey\": \"00140df0d276eacd58b09a74d5e0288756e8505787f5\",\n        \"satoshis\": \"546\",\n        \"confirmations\": 23,\n        \"height\": 2815497,\n        \"runes\": [],\n        \"inscriptions\": []\n    }, {\n        \"txid\": \"6312095baa2a42dec6aa41888c01fd74ecce2ab139c17a0a6d01d42a89b67953\",\n        \"vout\": 1,\n        \"address\": \"bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8\",\n        \"script_pubkey\": \"00140df0d276eacd58b09a74d5e0288756e8505787f5\",\n        \"satoshis\": \"546\",\n        \"confirmations\": 20,\n        \"height\": 2815500,\n        \"runes\": [{\n            \"rune_id\": \"840000:1\",\n            \"amount\": \"1.00\"\n        }],\n        \"inscriptions\": [{\n            \"offset\": 0,\n            \"inscription_id\": \"47bb5438d366863b25b4b1782af0d0cf0a89a922adce5da81253790d3e651501i0\"\n        }]\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"0000000088bee3b517745636443c8f11aff45209449300a5d8461c336e467925\",\n        \"block_height\": 2815520\n    },\n    \"next_cursor\": \"AAAAAAAq9gxgU3m2iSrUAW0KesE5sSrO7HT9AYyIQarG3kIqqlsJEmNgAAAAAQ\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/brc20": {
      "get": {
        "tags": [
          "BRC20"
        ],
        "summary": "List BRC20",
        "description": "Retrieves a list of tickers of all deployed BRC20 assets.",
        "operationId": "list_brc20s",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBrc20Ticker"
                },
                "example": "{\n    \"data\": [\"aosi\", \"ap'q\", \"fctb\"],\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000235c5edb5c89ef52715452a2aca610949194b3361ef7d\",\n        \"block_height\": 850368\n    },\n    \"next_cursor\": \"BGZjdGI\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/brc20/{ticker}": {
      "get": {
        "tags": [
          "BRC20"
        ],
        "summary": "BRC20 Info",
        "description": "Information about a BRC20 token’s metadata and current state, including its symbol, deployment details, minting rules, total holders, and minted supply.",
        "operationId": "brc20_info",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "BRC20 ticker string",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "FCTB"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedBrc20Info"
                },
                "example": "{\n    \"data\": {\n        \"ticker\": \"fctb\",\n        \"ticker_hex\": \"66637462\",\n        \"deploy_inscription\": \"3d983a724310f511cfca0031ee2b980b474a0abe1e7e995b7e6d2873e2cbfd5fi0\",\n        \"holders\": 7,\n        \"minted_supply\": \"19420000.000000000000000000\",\n        \"terms\": {\n            \"max\": \"21000000.000000000000000000\",\n            \"limit\": \"1000000.000000000000000000\",\n            \"dec\": 18,\n            \"self_mint\": false\n        }\n    },\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000214bfa0a73e1cc7663917a933bfb1c66a6613f88dabdd\",\n        \"block_height\": 851556\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/brc20/{ticker}/holders": {
      "get": {
        "tags": [
          "BRC20"
        ],
        "summary": "BRC20 Holders",
        "description": "Retrieves a list of script pubkeys or addresses that hold the specified BRC20 asset and corresponding total balances.",
        "operationId": "brc20_holders_by_ticker",
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "description": "BRC20 ticker string",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "TUAH"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBrc20Holder"
                },
                "example": "{\n    \"data\": [{\n        \"address\": \"bc1q764zfcx3uw0dcvcdh7nnwm5fvsml0c2tgn942v\",\n        \"script_pubkey\": \"0014f6aa24e0d1e39edc330dbfa7376e896437f7e14b\",\n        \"balance\": \"9000000.000000000000000000\"\n    }, {\n        \"address\": \"bc1pqfhj6tlxgpvc72mvn9hh0z666k45fpxgsej92d9q08sfe572mhlqca68ld\",\n        \"script_pubkey\": \"5120026f2d2fe640598f2b6c996f778b5ad5ab4484c886645534a079e09cd3caddfe\",\n        \"balance\": \"420000.000000000000000000\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000002747b9e3c0097172bc23489d686e8b885a6fa89c2c4da\",\n        \"block_height\": 850534\n    },\n    \"next_cursor\": \"19FwuaejD9hE1R4ckTQKaqe0ecA\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/collections/{collection_symbol}/inscriptions": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Inscription IDs by Collection Symbol",
        "description": "List of all inscriptions in the collection represented by the queried symbol.",
        "operationId": "inscriptions_by_collection_symbol",
        "parameters": [
          {
            "name": "collection_symbol",
            "in": "path",
            "description": "Collection symbol (UTF-8)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "twick"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionsByCollectionSymbol"
                },
                "example": "{\n    \"data\": [\n        \"85a4c2531f149cd8c69a34a9139cace0bdce99e906ee5ad5a4620cdef6adfc6ci0\",\n        \"7d75fe5bea7f11823050d029d281a8b23e9660c5cc133ad3f8b36fef8c8329c0i0\",\n        \"0c80a14912bf35b9303de0758eee6e91532f539104db7f34e760ed1574170d88i0\",\n        \"7fc5d6c9ffffe461b31dc96570134b3d658da767b51225d1771ba7ccffcf6201i0\",\n        \"3204df2e4908f47939878a0681733852ed3ddffca425f25bf67746fd099c78b8i0\",\n        \"491b5144bb2b67a05360e8cbd8ff0beba2a5e3823944796aa7e2680583403184i0\",\n        \"23fa74866576bd731b69fdc900d14b4d9ce904a9be16790d7dd76ac9cf652862i0\",\n        \"70abb5f531adf694438f3b14167f885336c280277f329d6c5fe720b8f5bb20aai0\",\n        \"793a7423c399c87de15f98499656df8bdffabf452879185f452ca33a5943bfb6i0\",\n        \"ced74edbbeb7ccac032a8a218a2ee6a7068963a1c4ae9a403969cc621ffe4f2ei0\"\n    ],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001998e2059bcbb25f76fd0ef39db8ddfc5c31c5ea95f1f\",\n        \"block_height\": 876644\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/collections/{collection_symbol}/metadata": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Collection Metadata by Collection Symbol",
        "description": "Provides metadata for a given inscription collection symbol, including its name, image, supply, and external links. This is useful for rendering collection summaries or for display in marketplaces and aggregators.",
        "operationId": "collection_metadata_by_collection_symbol",
        "parameters": [
          {
            "name": "collection_symbol",
            "in": "path",
            "description": "Collection symbol (UTF-8)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "twick"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedCollectionMetadataBySymbol"
                },
                "example": "{\n    \"data\": {\n        \"symbol\": \"twick\",\n        \"name\": \"1/1 ART BY TWICK\",\n        \"imageURI\": \"https://creator-hub-prod.s3.us-east-2.amazonaws.com/ord-twick_pfp_1705357607896.jpeg\",\n        \"chain\": \"btc\",\n        \"inscriptionIcon\": \"736d7692fb2b405f7efdd05b57787a10bb0385b7dd394aa67654d62119e9d825i0\",\n        \"description\": \"A collection of 1/1 art inscribed forever on the Bitcoin Blockchain. All 1/1s are inscribed on special sats.\",\n        \"supply\": 10,\n        \"twitterLink\": \"https://twitter.com/Twickert_\",\n        \"discordLink\": \"\",\n        \"websiteLink\": \"https://www.artbytwick.com/\",\n        \"min_inscription_number\": \"31921195\",\n        \"max_inscription_number\": \"63111093\",\n        \"createdAt\": \"Sun, 17 Sep 2023 06:38:15 GMT\",\n        \"labels\": []\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001998e2059bcbb25f76fd0ef39db8ddfc5c31c5ea95f1f\",\n        \"block_height\": 876644\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/collections/{collection_symbol}/stats": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Collection Stats by Collection Symbol",
        "description": "Provides stats for a given inscription: total volume (in sats), floor price (in sats), and total listed. This is useful for rendering collection summaries or for display in marketplaces and aggregators.",
        "operationId": "collection_stats_by_collection_symbol",
        "parameters": [
          {
            "name": "collection_symbol",
            "in": "path",
            "description": "Collection symbol (UTF-8)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "twick"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedCollectionStatsBySymbol"
                },
                "example": "{\n    \"data\": {\n        \"totalVolume\": \"123456789\",\n        \"owners\": \"42\",\n        \"supply\": \"1000\",\n        \"floorPrice\": \"0.05\",\n        \"totalListed\": \"150\",\n        \"pendingTransactions\": \"3\",\n        \"inscriptionNumberMin\": \"100000\",\n        \"inscriptionNumberMax\": \"200000\",\n        \"symbol\": \"twick\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001998e2059bcbb25f76fd0ef39db8ddfc5c31c5ea95f1f\",\n        \"block_height\": 876644\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/inscriptions/{inscription_id}": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Inscription Info",
        "description": "Delivers information about a specific inscription, including its type, current location (UTXO and address), associated collection, and metadata like size and content preview (if text-based). Supports resolution of any inscription for wallet or explorer views.\nA preview of the content body is given only if its type is `\"text/plain\"`. For the whole content, use the complementary endpoint, namely `/assets/inscriptions/{inscription_id}/content_body`.",
        "operationId": "inscription_info",
        "parameters": [
          {
            "name": "inscription_id",
            "in": "path",
            "description": "Inscription ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "43cb5e2d66f5af8eb04391ef3d4048edc30a1f9edad594f83609fd7861a0f5e1i0"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedInscriptionInfo"
                },
                "example": "{\n    \"data\": {\n        \"inscription_id\": \"43cb5e2d66f5af8eb04391ef3d4048edc30a1f9edad594f83609fd7861a0f5e1i0\",\n        \"inscription_number\": 76800550,\n        \"created_at\": 867795,\n        \"current_location\": {\n            \"address\": \"bc1pyae5wn0hxwestrxg4vmwrw58stwzkhp64le0uulahj8xzp5ruz8s3m6xh7\",\n            \"script_pubkey\": \"51202773474df733b3058cc8ab36e1ba8782dc2b5c3aaff2fe73fdbc8e610683e08f\",\n            \"utxo_sat_offset\": 0,\n            \"utxo_txid\": \"471852c0dff23a9d345a4550db8a5ff1a9cd0c1ff8e91f344762fba9a1bf000f\",\n            \"utxo_vout\": 1\n        },\n        \"content_type\": \"text/html\",\n        \"content_body_preview\": null,\n        \"content_length\": 934,\n        \"collection_symbol\": \"kikalepuppete\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000018ebea33e7361bc4059eb6ff35d0a80836717accfc4a9\",\n        \"block_height\": 888637\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/inscriptions/{inscription_id}/activity": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Activity by Inscription",
        "description": "Lists all transactions that have involved the given inscription, starting from its origin (reveal transaction) and including all transfers.",
        "operationId": "activity_by_inscription",
        "parameters": [
          {
            "name": "inscription_id",
            "in": "path",
            "description": "Inscription ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of transactions per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by block height and tx index in the block)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTxByInscription"
                },
                "example": "{\n  \"data\": [\n    {\n      \"height\": 839418,\n      \"tx_index\": 1257,\n      \"tx_hash\": \"b1ef66c2d1a047cbaa6260b74daac43813924378fe08ef8545da4cb79e8fcf00\",\n      \"type\": \"transfer\",\n      \"from\": {\n        \"address\": \"bc1pjzf5qmmzt57mtxgrgh42aazhnzwk7ge59e89dl6rde5zwg8he02q9u4xrr\",\n        \"script_pubkey\": \"51209093406f625d3db5990345eaaef457989d6f23342e4e56ff436e682720f7cbd4\",\n        \"input_index\": 0,\n        \"sat_offset\": 0\n      },\n      \"to\": {\n        \"address\": \"bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr\",\n        \"script_pubkey\": \"5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596\",\n        \"output_vout\": 0,\n        \"sat_offset\": 0\n      }\n    },\n    {\n      \"height\": 839876,\n      \"tx_index\": 887,\n      \"tx_hash\": \"47c7260764af2ee17aa584d9c035f2e5429aefd96b8016cfe0e3f0bcf04869a3\",\n      \"type\": \"transfer\",\n      \"from\": {\n        \"address\": \"bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr\",\n        \"script_pubkey\": \"5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596\",\n        \"input_index\": 0,\n        \"sat_offset\": 0\n      },\n      \"to\": {\n        \"address\": \"bc1ppth27qnr74qhusy9pmcyeaelgvsfky6qzquv9nf56gqmte59vfhqwkqguh\",\n        \"script_pubkey\": \"51200aeeaf0263f5417e40850ef04cf73f43209b13401038c2cd34d201b5e685626e\",\n        \"output_vout\": 0,\n        \"sat_offset\": 0\n      }\n    }\n  ],\n  \"last_updated\": {\n    \"block_hash\": \"000000000000000000001d3fb5743dcb30e12af7b0cd9c8d95c8b1a1fdd5c8d8\",\n    \"block_height\": 839908\n  },\n  \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/inscriptions/{inscription_id}/collection": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Collection Metadata by Inscription",
        "description": "Returns metadata of a collection for a given inscription ID, including its name, image, supply and external links.",
        "operationId": "collection_metadata_by_inscription",
        "parameters": [
          {
            "name": "inscription_id",
            "in": "path",
            "description": "Inscription ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08i0"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedCollectionMetadataByInscription"
                },
                "example": "{\n    \"data\": {\n        \"symbol\": \"aaclub\",\n        \"name\": \"99999 Action Alien Club\",\n        \"imageURI\": \"https://bafkreihillpn43rubd2wffzot5ccungccpen6btcofn2kylutexkpkaymq.ipfs.nftstorage.link/\",\n        \"chain\": \"btc\",\n        \"inscriptionIcon\": \"46b576bc669c03227f273103654c46fa9b516374ed6a2b8d03cc786e95fd50f3i0\",\n        \"description\": \"Ordinal #99999 has 50 alien friends. Would you like to join his Action Alien Club?\",\n        \"supply\": 50,\n        \"twitterLink\": \"http://www.twitter.com/oxfordyazuka\",\n        \"discordLink\": \"\",\n        \"websiteLink\": \"\",\n        \"min_inscription_number\": \"90551\",\n        \"max_inscription_number\": \"114274\",\n        \"createdAt\": \"Fri, 26 May 2023 04:23:17 GMT\",\n        \"labels\": []\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001998e2059bcbb25f76fd0ef39db8ddfc5c31c5ea95f1f\",\n        \"block_height\": 876644\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/inscriptions/{inscription_id}/content_body": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Content by Inscription ID",
        "description": "Retrieves the content body byte array of an inscription. This endpoint is complementary to the `/assets/inscriptions/{inscription_id}` (Inscription Information) endpoint.",
        "operationId": "content_by_inscription_id",
        "parameters": [
          {
            "name": "inscription_id",
            "in": "path",
            "description": "Inscription ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "7d0a2dd897222913d58fc957b0429526117a0a61c964642fe93b077f328ccec1i0"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of bytes per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string: the offset in the content body, in the form of an integer. Use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedContentBody"
                },
                "example": "{\n    \"data\": {\n        \"content_body_page\": \"AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiYw==\",\n        \"total_length\": 3035,\n        \"remaining_bytes\": 2935\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000ec10254178fe52253f40c1fad252e892d9aa22ee8fa7\",\n        \"block_height\": 866710\n    },\n    \"next_cursor\": \"AAAAAAAAAGQ\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/inscriptions/{inscription_id}/metadata": {
      "get": {
        "tags": [
          "Inscriptions"
        ],
        "summary": "Token Metadata by Inscription",
        "description": "Metadata specific to inscription.",
        "operationId": "token_metadata_by_inscription",
        "parameters": [
          {
            "name": "inscription_id",
            "in": "path",
            "description": "Inscription ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08i0"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedTokenMetadataByInscription"
                },
                "example": "{\n    \"data\": {\n        \"id\": \"0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08i0\",\n        \"contentURI\": \"https://ord-mirror.magiceden.dev/content/0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08i0\",\n        \"contentType\": \"image/gif\",\n        \"contentPreviewURI\": \"https://ord-mirror.magiceden.dev/preview/0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08i0\",\n        \"genesisTransaction\": \"0001a5f7af47c79fa8acfb4fb4d4588d561a86b9f45dd1cf9120663dc74c0a08\",\n        \"genesisTransactionBlockTime\": \"Wed, 15 Feb 2023 04:54:08 GMT\",\n        \"genesisTransactionBlockHash\": \"00000000000000000006548ee473a9237f601bae4e968d04cf273089306a6ebf\",\n        \"genesisTransactionBlockHeight\": 776602,\n        \"inscriptionNumber\": 100198,\n        \"chain\": \"btc\",\n        \"meta\": {\n            \"name\": \"Action Alien #22\",\n            \"attributes\": null\n        },\n        \"location\": \"f75f3de0977213530dfea6ba4869f5229e778a549ba8f47247c6503e663adda4:1:0\",\n        \"locationBlockHeight\": 791716,\n        \"locationBlockTime\": \"Sun, 28 May 2023 02:33:26 GMT\",\n        \"locationBlockHash\": \"000000000000000000016206f6ad6b8989ae590f0b5cb5727ba786dc4f7b15ac\",\n        \"output\": \"f75f3de0977213530dfea6ba4869f5229e778a549ba8f47247c6503e663adda4:1\",\n        \"outputValue\": 10000,\n        \"owner\": \"bc1pw57nwvp0g4uz053v7z404zyqn4xykjxsxffh2tga095w5kmdtelsjh656y\",\n        \"listed\": true,\n        \"listedAt\": \"Wed, 15 Nov 2023 13:52:21 GMT\",\n        \"listedPrice\": 4400000,\n        \"listedMakerFeeBp\": 50,\n        \"listedSellerReceiveAddress\": \"bc1pw57nwvp0g4uz053v7z404zyqn4xykjxsxffh2tga095w5kmdtelsjh656y\",\n        \"listedForMint\": false,\n        \"collectionSymbol\": \"aaclub\",\n        \"collection\": {\n            \"symbol\": \"aaclub\",\n            \"name\": \"99999 Action Alien Club\",\n            \"imageURI\": \"https://bafkreihillpn43rubd2wffzot5ccungccpen6btcofn2kylutexkpkaymq.ipfs.nftstorage.link/\",\n            \"chain\": \"btc\",\n            \"inscriptionIcon\": \"46b576bc669c03227f273103654c46fa9b516374ed6a2b8d03cc786e95fd50f3i0\",\n            \"description\": \"Ordinal #99999 has 50 alien friends. Would you like to join his Action Alien Club?\",\n            \"supply\": 50,\n            \"twitterLink\": \"http://www.twitter.com/oxfordyazuka\",\n            \"discordLink\": \"\",\n            \"websiteLink\": \"\",\n            \"createdAt\": \"Fri, 26 May 2023 04:23:17 GMT\",\n            \"overrideContentType\": \"\",\n            \"disableRichThumbnailGeneration\": false,\n            \"labels\": [],\n            \"creatorTipsAddress\": \"\",\n            \"enableCollectionOffer\": true\n        },\n        \"itemType\": \"Inscription\",\n        \"sat\": 1916312270479035,\n        \"satName\": \"aguozseyvuc\",\n        \"satRarity\": \"common\",\n        \"satBlockHeight\": 756099,\n        \"satBlockTime\": \"Wed, 28 Sep 2022 17:20:31 GMT\",\n        \"satributes\": [\n            \"Common\"\n        ],\n        \"displayName\": \"Action Alien #22\",\n        \"lastSalePrice\": 200000,\n        \"updatedAt\": \"Tue, 11 Jun 2024 20:09:56 GMT\",\n        \"sacAddress\": \"\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001998e2059bcbb25f76fd0ef39db8ddfc5c31c5ea95f1f\",\n        \"block_height\": 876644\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/runes": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "List Runes",
        "description": "Lists all Rune tokens deployed, including names and IDs.",
        "operationId": "list_runes",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRuneIdAndName"
                },
                "example": "{\n    \"data\": [{\n        \"id\": \"840000:1\",\n        \"spaced_name\": \"Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z\"\n    }, {\n        \"id\": \"840000:2\",\n        \"spaced_name\": \"DECENTRALIZED\"\n    }, {\n        \"id\": \"840000:3\",\n        \"spaced_name\": \"DOG•GO•TO•THE•MOON\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000002c0cc73626b56fb3ee1ce605b0ce125cc4fb58775a0a9\",\n        \"block_height\": 840002\n    },\n    \"next_cursor\": \"AAAAAAAM0UAAAAAD\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/runes/{rune}": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "Runes Info",
        "description": "Returns full details for a specific Rune token, such as its etching (origin) transaction, supply, number of holders.",
        "operationId": "info_by_rune",
        "parameters": [
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2519999:31"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedRuneInfo"
                },
                "example": "{\n    \"data\": {\n        \"id\": \"840000:1\",\n        \"etching_cenotaph\": false,\n        \"etching_tx\": \"2bb85f4b004be6da54f766c17c1e855187327112c231ef2ff35ebad0ea67c69e\",\n        \"etching_height\": 840000,\n        \"name\": \"ZZZZZFEHUZZZZZ\",\n        \"spaced_name\": \"Z•Z•Z•Z•Z•FEHU•Z•Z•Z•Z•Z\",\n        \"symbol\": \"ᚠ\",\n        \"divisibility\": 2,\n        \"premine\": \"110000000.00\",\n        \"terms\": {\n            \"mint_txs_cap\": \"1111111\",\n            \"amount_per_mint\": \"1.00\",\n            \"start_height\": null,\n            \"end_height\": null,\n            \"start_offset\": null,\n            \"end_offset\": null\n        },\n        \"max_supply\": \"111111111.00\",\n        \"mints\": 5226,\n        \"unique_holders\": 1568\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001332b3017e2b72bdd063145bbf808b3c1722a0fd60859\",\n        \"block_height\": 840051\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/runes/{rune}/activity": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "Activity by Rune",
        "description": "Returns all transactions where the Rune was used or transferred, beginning with the etching (origin) transaction. Useful for auditing or building live token feeds.",
        "operationId": "activity_by_rune",
        "parameters": [
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "840110:2698"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of transactions per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by block height and tx index in the block)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTxsByRune"
                },
                "example": "{\n  \"data\": [\n    {\n      \"height\": 840110,\n      \"confirmations\": 361,\n      \"tx_hash\": \"5a072b4619077bd2f718dc58784eeb22211aa867a82a523e282df11b0b234a14\",\n      \"etching_tx\": true,\n      \"minted\": null,\n      \"burned\": null,\n      \"self_transfers\": [],\n      \"senders\": [],\n      \"receivers\": [\n        {\n          \"address\": \"bc1plr56q0q4pyj8u7khys2ju8xnscp2y304u83gr06aq8ryt2uf82hq0hzm8z\",\n          \"script_pubkey\": \"5120f8e9a03c1509247e7ad724152e1cd38602a245f5e1e281bf5d01c645ab893aae\",\n          \"amount\": \"777777777777.77\"\n        }\n      ]\n    },\n    {\n      \"height\": 840112,\n      \"confirmations\": 359,\n      \"tx_hash\": \"0477cd84732d4fd0aad0dc5fad14f09b0ad985c4184c0d0de9202637cc67ce9b\",\n      \"etching_tx\": false,\n      \"minted\": \"888888888888.88\",\n      \"burned\": null,\n      \"self_transfers\": [],\n      \"senders\": [],\n      \"receivers\": [\n        {\n          \"address\": \"bc1pc9mhstm0sggvtz0afla0f6mm3jevm3dwq2m5c5sckj4w2y3gsgxs456833\",\n          \"script_pubkey\": \"5120c177782f6f8210c589fd4ffaf4eb7b8cb2cdc5ae02b74c5218b4aae51228820d\",\n          \"amount\": \"888888888888.88\"\n        }\n      ]\n    },\n    {\n      \"height\": 840112,\n      \"confirmations\": 359,\n      \"tx_hash\": \"f4ce17a5859a720aa77647d19c24c06e556bfffbb5409e8a270eec0e363a7cab\",\n      \"etching_tx\": false,\n      \"minted\": null,\n      \"burned\": null,\n      \"self_transfers\": [],\n      \"senders\": [\n        {\n          \"address\": \"bc1plr56q0q4pyj8u7khys2ju8xnscp2y304u83gr06aq8ryt2uf82hq0hzm8z\",\n          \"script_pubkey\": \"5120f8e9a03c1509247e7ad724152e1cd38602a245f5e1e281bf5d01c645ab893aae\",\n          \"amount\": \"100000.00\"\n        }\n      ],\n      \"receivers\": [\n        {\n          \"address\": \"bc1pc9mhstm0sggvtz0afla0f6mm3jevm3dwq2m5c5sckj4w2y3gsgxs456833\",\n          \"script_pubkey\": \"5120c177782f6f8210c589fd4ffaf4eb7b8cb2cdc5ae02b74c5218b4aae51228820d\",\n          \"amount\": \"100000.00\"\n        }\n      ]\n    },\n    {\n      \"height\": 840114,\n      \"confirmations\": 357,\n      \"tx_hash\": \"e366c55626dbde705361df497c2257853a08068edf3e5ab85daad35b1f70ee2c\",\n      \"etching_tx\": false,\n      \"minted\": null,\n      \"burned\": null,\n      \"self_transfers\": [],\n      \"senders\": [\n        {\n          \"address\": \"bc1plr56q0q4pyj8u7khys2ju8xnscp2y304u83gr06aq8ryt2uf82hq0hzm8z\",\n          \"script_pubkey\": \"5120f8e9a03c1509247e7ad724152e1cd38602a245f5e1e281bf5d01c645ab893aae\",\n          \"amount\": \"200000.00\"\n        }\n      ],\n      \"receivers\": [\n        {\n          \"address\": \"bc1p99uy665vtcnxu9e2hsz4d9lx2tvr59lfaqcsg5na3czqq2hgqw7s4l0937\",\n          \"script_pubkey\": \"512029784d6a8c5e266e172abc055697e652d83a17e9e83104527d8e04002ae803bd\",\n          \"amount\": \"200000.00\"\n        }\n      ]\n    },\n    {\n      \"height\": 840114,\n      \"confirmations\": 357,\n      \"tx_hash\": \"358ce9038a14becdce89231709db29b2b23c744e10aef2995b62094830481828\",\n      \"etching_tx\": false,\n      \"minted\": null,\n      \"burned\": null,\n      \"self_transfers\": [],\n      \"senders\": [\n        {\n          \"address\": \"bc1pc9mhstm0sggvtz0afla0f6mm3jevm3dwq2m5c5sckj4w2y3gsgxs456833\",\n          \"script_pubkey\": \"5120c177782f6f8210c589fd4ffaf4eb7b8cb2cdc5ae02b74c5218b4aae51228820d\",\n          \"amount\": \"300000.00\"\n        }\n      ],\n      \"receivers\": [\n        {\n          \"address\": \"bc1qr4cymlscpespfghnkuxqhwmey674fas8uzvrxp\",\n          \"script_pubkey\": \"00141d704dfe180e6014a2f3b70c0bbb7926bd54f607\",\n          \"amount\": \"300000.00\"\n        }\n      ]\n    }\n  ],\n  \"last_updated\": {\n    \"block_hash\": \"00000000000000000001901beb6d0ded42e731327a95e9c81a3d29336cc79402\",\n    \"block_height\": 840470\n  },\n  \"next_cursor\": \"AAAAAAAM0bJgAQFgKBhIMEgJYluZ8q4QTnQ8srIp2wkXI4nOzb4UigPpjDU\"\n}\n"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/runes/{rune}/holders": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "Holders by Rune",
        "description": "Lists all addresses currently holding a given Rune, with corresponding balances. Helps visualize token distribution and adoption.",
        "operationId": "holders_by_rune",
        "parameters": [
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2519999:31"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRuneHolder"
                },
                "example": "{\n    \"data\": [{\n        \"address\": \"bc1q764zfcx3uw0dcvcdh7nnwm5fvsml0c2tgn942v\",\n        \"script_pubkey\": \"0014f6aa24e0d1e39edc330dbfa7376e896437f7e14b\",\n        \"balance\": \"9000000.000000000000000000\"\n    }, {\n        \"address\": \"bc1pqfhj6tlxgpvc72mvn9hh0z666k45fpxgsej92d9q08sfe572mhlqca68ld\",\n        \"script_pubkey\": \"5120026f2d2fe640598f2b6c996f778b5ad5ab4484c886645534a079e09cd3caddfe\",\n        \"balance\": \"420000.000000000000000000\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000002747b9e3c0097172bc23489d686e8b885a6fa89c2c4da\",\n        \"block_height\": 850534\n    },\n    \"next_cursor\": \"19FwuaejD9hE1R4ckTQKaqe0ecA\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/assets/runes/{rune}/utxos": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "UTxOs by Runes",
        "description": "Returns all UTXOs containing the specified Rune. Useful for raw state tracking and detailed token flow visualization.",
        "operationId": "utxos_by_rune",
        "parameters": [
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2519999:31"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by height at which UTxO was produced)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedRuneUtxo"
                },
                "example": "{\n    \"data\": [{\n        \"txid\": \"fa2fa7ea017e9e8eaf701b26bb57c0ed3f550428b59df17bd789ad98f6bf5a2b\",\n        \"vout\": 0,\n        \"address\": \"bc1ql8k89mfzqwjaqnq0y9uxummllp6v92fkykkv78\",\n        \"script_pubkey\": \"0014f9ec72ed2203a5d04c0f21786e6f7ff874c2a936\",\n        \"satoshis\": \"546\",\n        \"confirmations\": 50,\n        \"height\": 840001,\n        \"rune_amount\": \"1.00\"\n    }, {\n        \"txid\": \"452378b6ef2bd45dbd1bada84b9468b57fcccbfef67777dfb99f5e8f3a7cfd80\",\n        \"vout\": 0,\n        \"address\": \"bc1qdkzx0dnzuyzjlu7qk86mc7rgkpwwms6zg5y5gd\",\n        \"script_pubkey\": \"00146d8467b662e1052ff3c0b1f5bc7868b05cedc342\",\n        \"satoshis\": \"546\",\n        \"confirmations\": 50,\n        \"height\": 840001,\n        \"rune_amount\": \"1.00\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001332b3017e2b72bdd063145bbf808b3c1722a0fd60859\",\n        \"block_height\": 840051\n    },\n    \"next_cursor\": \"AAAAAAAM0UFggP18Oo9en7nfd3f2_svMf7VolEuorRu9XdQr77Z4I0VgAAAAAA\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blocks/{height_or_hash}": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Block Info",
        "description": "Fetches full details of a block using its hash. Returns information such as height, timestamp, transaction count, miner, and size. Can be used to explore block metadata or confirm inclusion of transactions.",
        "operationId": "block_info",
        "parameters": [
          {
            "name": "height_or_hash",
            "in": "path",
            "description": "Block height or block hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "000000000000000000004fe9dc835b41f2da749287c4d1fca9055d83b2e06fa4"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedBlock"
                },
                "example": "{\n    \"data\": {\n        \"height\": 878027,\n        \"hash\": \"000000000000000000004fe9dc835b41f2da749287c4d1fca9055d83b2e06fa4\",\n        \"size\": 1865672,\n        \"weight_units\": 3993329,\n        \"unix_timestamp\": 1736129377,\n        \"timestamp\": \"2025-01-06 02:09:37\",\n        \"total_fees\": \"2110512\",\n        \"total_volume\": \"240371600038\",\n        \"total_txs\": 1849,\n        \"metaprotocols\": [\n            \"inscriptions\",\n            \"runes\",\n            \"brc20\"\n        ],\n        \"miner_name\": \"ViaBTC\",\n        \"coinbase_tag\": \"A8tlDQgvVmlhQlRDLyz6vm1tPXaDOuJgXZs6zuF9J7o+V55Fu/UWyF9S+hZG5d/z+c8QAAAAAAAAABDThC4BY8HxNM7fc9SQsQ8AAAAAAA==\"\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000002467d678b845978ef175b424cff2985860bb156280c53\",\n        \"block_height\": 878064\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blocks/{height_or_hash}/inscriptions/activity": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Inscription Activity by Block",
        "description": "List of all inscription activity in the block, ordered by transaction index in the block and by output index in the transaction.",
        "operationId": "inscription_activity_by_block",
        "parameters": [
          {
            "name": "height_or_hash",
            "in": "path",
            "description": "Block height or block hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "00000000000000000000a7d0a1dac50a909601c93774d55bebdcd4000a2af5d1"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of transactions (with inscription activity) per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionActivityByBlock"
                },
                "example": "{\n    \"data\": [{\n        \"tx_hash\": \"12fe2ce2d98aa43bb6184d095e8a64b9362c2fe1fee52cb5ba43f9623ef4c72b\",\n        \"inscription_id\": \"56f1eebc4cfc437cffc47caa5c08f2d4f5989ed8a8c5dd6cdec77996b0e055fdi0\",\n        \"from\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"input_index\": 0,\n            \"sat_offset\": 100409840\n        },\n        \"to\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"output_vout\": 20,\n            \"sat_offset\": 84345292\n        }\n    }, {\n        \"tx_hash\": \"12fe2ce2d98aa43bb6184d095e8a64b9362c2fe1fee52cb5ba43f9623ef4c72b\",\n        \"inscription_id\": \"196378911c21ee6eaac767be609106ad2efce6d36af822d54d9583a2256cb9c2i0\",\n        \"from\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"input_index\": 0,\n            \"sat_offset\": 100639840\n        },\n        \"to\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"output_vout\": 20,\n            \"sat_offset\": 84575292\n        }\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000380fb362a3ad3dc257cc28daadfc83fffd0c10eb3b82\",\n        \"block_height\": 811063\n    },\n    \"next_cursor\": \"ARxgAQE\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/blocks/{height_or_hash}/transactions": {
      "get": {
        "tags": [
          "Blocks"
        ],
        "summary": "Transactions by Block",
        "description": "Returns a list of all transaction hashes included in the specified block. Supports pagination for blocks with a large number of transactions.",
        "operationId": "txs_by_block",
        "parameters": [
          {
            "name": "height_or_hash",
            "in": "path",
            "description": "Block height or block hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "878011"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of transactions per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTxsByBlock"
                },
                "example": "{\n    \"data\": [{\n        \"tx_hash\": \"a306a1cb42f0e703219e0c2abb8cca08c85c8a3a55d4c0a119d62156a4cf435e\",\n        \"tx_index\": 0,\n        \"volume\": \"314010952\",\n        \"fees\": \"0\",\n        \"sats_per_vb\": 0,\n        \"metaprotocols\": [\n            \"inscriptions\"\n        ],\n        \"total_inputs\": 0,\n        \"inputs\": [],\n        \"total_outputs\": 4,\n        \"outputs\": [{\n            \"vout\": 0,\n            \"address\": \"bc1p8k4v4xuz55dv49svzjg43qjxq2whur7ync9tm0xgl5t4wjl9ca9snxgmlt\",\n            \"script_pubkey\": \"51203daaca9b82a51aca960c1491588246029d7e0fc49e0abdbcc8fd17574be5c74b\",\n            \"spending_tx\": null,\n            \"satoshis\": \"546\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }, {\n            \"vout\": 1,\n            \"address\": \"bc1qwzrryqr3ja8w7hnja2spmkgfdcgvqwp5swz4af4ngsjecfz0w0pqud7k38\",\n            \"script_pubkey\": \"00207086320071974eef5e72eaa01dd9096e10c0383483855ea6b344259c244f73c2\",\n            \"spending_tx\": \"1179ebbad0019e5743f25c86148f51b70bc705e76392ce1195205b7fb0d3f8d5\",\n            \"satoshis\": \"314010406\",\n            \"inscriptions\": 3519,\n            \"runes\": 0\n        }, {\n        \"vout\": 2,\n            \"address\": null,\n            \"script_pubkey\": \"6a24aa21a9edf17f948f3b2f268b144bd8677617399ea639a55f0e849ba5e6f35af26cc39904\",\n            \"spending_tx\": null,\n            \"satoshis\": \"0\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }, {\n            \"vout\": 3,\n            \"address\": null,\n            \"script_pubkey\": \"6a2d434f5245012e50087fb834747606ed01ad67ad0f32129ab431e6d18fda214e5b9f350ffc7b6cf3058b9026e765\",\n            \"spending_tx\": null,\n            \"satoshis\": \"0\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }]\n    }, {\n        \"tx_hash\": \"04ac1f8968de3d1db8a6fc6504005e391ab8a85bb4a48b3d7f3e66e747d559ea\",\n        \"tx_index\": 1,\n        \"volume\": \"94223592\",\n        \"fees\": \"30300\",\n        \"sats_per_vb\": 151,\n        \"metaprotocols\": [],\n        \"total_inputs\": 1,\n        \"inputs\": [{\n            \"txid\": \"65ff8bb5ab3feeeb1cdd47a200fc3d54ac70e4e4b1ca1c7e33f56207db7ddf86\",\n            \"vout\": 1,\n            \"address\": \"bc1q5yw0e7hq42zwshvvq3sy2z07n7lg72elhdt8s577egxe2agm3xnq9nekyr\",\n            \"script_pubkey\": \"0020a11cfcfae0aa84e85d8c04604509fe9fbe8f2b3fbb567853deca0d95751b89a6\",\n            \"satoshis\": \"94253892\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }],\n        \"total_outputs\": 2,\n        \"outputs\": [{\n            \"vout\": 0,\n            \"address\": \"bc1q0wu0tqp2u3rtunjl0h0rsl9pvf86acy6sep63st0lp7lgg67ykzqeq89pn\",\n            \"script_pubkey\": \"00207bb8f5802ae446be4e5f7dde387ca1624faee09a8643a8c16ff87df4235e2584\",\n            \"spending_tx\": \"0c135cbd187ef5ed2ab266f02910cabfd6fa0993d1dbf6627a33363fba38181d\",\n            \"satoshis\": \"9790000\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }, {\n            \"vout\": 1,\n            \"address\": \"bc1qnq7td9m6xex4gqeu2d3t6j8tqkpwfxwt2dn2t07m6hnl9svcn54qu5hax4\",\n            \"script_pubkey\": \"0020983cb6977a364d54033c5362bd48eb0582e499cb5366a5bfdbd5e7f2c1989d2a\",\n            \"spending_tx\": \"4075db2355cdcac155657c55a24a46e2fd083fc88dedd54bc900288a61a688e7\",\n            \"satoshis\": \"84433592\",\n            \"inscriptions\": 0,\n            \"runes\": 0\n        }]\n\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"0000000000000000000122b2c240af790ee979f6e96175c00045cf54aa5a7001\",\n        \"block_height\": 878055\n    },\n    \"next_cursor\": \"AQE\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/transactions/{tx_hash}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction Info",
        "description": "Returns a full breakdown of a Bitcoin transaction by its hash. Includes inputs, outputs, fees, block confirmation details, and protocol-specific data (e.g., Ordinals, Runes, BRC20). This is useful for explorers, audit tools, or any application requiring full visibility into how funds and inscriptions are moved.",
        "operationId": "tx_info",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123828d4f3afe397a9e512b910c54fa3ea6288b7c26796e601be6be8bc2d572b"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedTxInfo"
                },
                "example": "{\n    \"data\": {\n        \"height\": 855413,\n        \"block_hash\": \"0000000000000000000224d324bbb5df0e74e202d9ccf752d76341046fab3ec0\",\n        \"confirmations\": 20035,\n        \"unix_timestamp\": 1722814700,\n        \"timestamp\": \"2024-08-04 23:38:20\",\n        \"tx_index\": 18,\n        \"volume\": \"284418\",\n        \"fees\": \"8000\",\n        \"sats_per_vb\": 35,\n        \"metaprotocols\": [\n            \"inscriptions\",\n            \"runes\",\n            \"brc20\"\n        ],\n        \"inputs\": [{\n            \"txid\": \"54f5c0dba6874d5d7305e108cba2c903145886bccb35e964f2a9b5063dd28f11\",\n            \"vout\": 1,\n            \"address\": \"bc1qtlvtyurmupvg0g0a9tg0799hp3uwncj0wlg429\",\n            \"script_pubkey\": \"00145fd8b2707be05887a1fd2ad0ff14b70c78e9e24f\",\n            \"satoshis\": \"546\"\n        }, {\n            \"txid\": \"d4c93d92f6704bf48dc693b92efa9b0675a6f6d171bdedb90cbf0f64f50749bb\",\n            \"vout\": 3,\n            \"address\": \"bc1q6kxj39dwva5xfv5278vcp3uhmql567qlpldtcr\",\n            \"script_pubkey\": \"0014d58d2895ae676864b28af1d980c797d83f4d781f\",\n            \"satoshis\": \"291872\"\n        }],\n        \"outputs\": [{\n            \"address\": null,\n            \"script_pubkey\": \"6a5d0b00c0a23303a9878cc30d01\",\n            \"satoshis\": \"0\",\n            \"spending_tx\": null\n        }, {\n            \"address\": \"bc1qj7dam98j6ktjcp320qu77y2vrylv49c2k2hkmu\",\n            \"script_pubkey\": \"0014979bdd94f2d5972c062a7839ef114c193eca970a\",\n            \"satoshis\": \"546\",\n            \"spending_tx\": \"794c74fcf67db3a2bf5c517a5fbc073f087b476c6c5bc7e25f01178aca739451\"\n        }, {\n            \"address\": \"bc1q6kxj39dwva5xfv5278vcp3uhmql567qlpldtcr\",\n            \"script_pubkey\": \"0014d58d2895ae676864b28af1d980c797d83f4d781f\",\n            \"satoshis\": \"283872\",\n            \"spending_tx\": \"68337ace84eb959c98139aa6b43b642539622fa58d45d4362464edc2df26ea82\"\n        }]\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000c0ab8525c3e1839e991ff6e06665d206370133ca2c96\",\n        \"block_height\": 875448\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/transactions/{tx_hash}/inscriptions/activity": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Inscription Activity by Transaction",
        "description": "List of all inscription activity in the transaction, including their satoshi-level positioning within transactions, ordered by transaction output index.",
        "operationId": "inscription_activity_by_tx",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "06244b1eb209becb440c924c62e0290c210e749d0491ad6cf134c98d23082025"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of inscriptions per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedInscriptionActivityByTx"
                },
                "example": "{\n    \"data\": [{\n        \"inscription_id\": \"56f1eebc4cfc437cffc47caa5c08f2d4f5989ed8a8c5dd6cdec77996b0e055fdi0\",\n        \"from\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"input_index\": 0,\n            \"sat_offset\": 100409840\n        },\n        \"to\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"output_vout\": 20,\n            \"sat_offset\": 84345292\n        }\n    }, {\n        \"inscription_id\": \"196378911c21ee6eaac767be609106ad2efce6d36af822d54d9583a2256cb9c2i0\",\n        \"from\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"input_index\": 0,\n            \"sat_offset\": 100639840\n        },\n        \"to\": {\n            \"address\": \"bc1qprdf80adfz7aekh5nejjfrp3jksc8r929svpxk\",\n            \"script_pubkey\": \"001408da93bfad48bddcdaf49e65248c3195a1838caa\",\n            \"output_vout\": 20,\n            \"sat_offset\": 84575292\n        }\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000380fb362a3ad3dc257cc28daadfc83fffd0c10eb3b82\",\n        \"block_height\": 811063\n    },\n    \"next_cursor\": \"AAAAAAAAAAI\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/transactions/{tx_hash}/metaprotocols": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction Info with Metaprotocols",
        "description": "Returns an enhanced view of the transaction, including info about metaprotocols in both inputs and outputs. Useful for deep inspection tools.",
        "operationId": "tx_info_with_metaprotocols",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1b07f02356aed6ddca37db8226c6292f2953d55ea741d7f58d44427976e7d4ee"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedTxInfoMetaprotocols"
                },
                "example": "{\n    \"data\": {\n        \"height\": 866807,\n        \"block_hash\": \"000000000000000000011c58d06536d2c1453a4742274efc2d4456921f027e98\",\n        \"confirmations\": 95,\n        \"unix_timestamp\": 1729577794,\n        \"timestamp\": \"2024-10-22 06:16:34\",\n        \"tx_index\": 12,\n        \"volume\": \"20606\",\n        \"fees\": \"1548800\",\n        \"sats_per_vb\": 1600,\n        \"metaprotocols\": [\n            \"inscriptions\",\n            \"brc20\"\n        ],\n        \"inputs\": [{\n            \"txid\": \"47c7260764af2ee17aa584d9c035f2e5429aefd96b8016cfe0e3f0bcf04869a3\",\n            \"vout\": 0,\n            \"address\": \"bc1ppth27qnr74qhusy9pmcyeaelgvsfky6qzquv9nf56gqmte59vfhqwkqguh\",\n            \"script_pubkey\": \"51200aeeaf0263f5417e40850ef04cf73f43209b13401038c2cd34d201b5e685626e\",\n            \"satoshis\": \"606\",\n            \"inscriptions\": [{\n                \"offset\": 0,\n                \"inscription_id\": \"6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0\"\n            }],\n            \"runes\": []\n        }, {\n            \"txid\": \"fbf8ccedf64109568cb69485b28de876547a8c51bbf8f623c1906a69fdf16be4\",\n            \"vout\": 0,\n            \"address\": \"bc1pfqgphdlagqahqe5yf5a4yja9nz4hdeycvcmk3j0r3kr79ltetfvqhnlguu\",\n            \"script_pubkey\": \"512048101bb7fd403b7066844d3b524ba598ab76e498663768c9e38d87e2fd795a58\",\n            \"satoshis\": \"10000\",\n            \"inscriptions\": [],\n            \"runes\": []\n        }, {\n            \"txid\": \"42d82813e9fb16bcf14b75bd78a1e16983e40d2e04f6c7087dde83e1d93c509b\",\n            \"vout\": 0,\n            \"address\": \"bc1paefyrryx8j75fe2njzd7flnss9vgse0f9njewm7qpxaaypafhjasjn7qgw\",\n            \"script_pubkey\": \"5120ee52418c863cbd44e553909be4fe7081588865e92ce5976fc009bbd207a9bcbb\",\n            \"satoshis\": \"1558800\",\n            \"inscriptions\": [],\n            \"runes\": []\n        }],\n        \"outputs\": [{\n            \"address\": \"bc1p6ka80aqd57wjskxknnfzmswl27tegkejcsfa0v600s6rxle5lagqg38e88\",\n            \"script_pubkey\": \"5120d5ba77f40da79d2858d69cd22dc1df5797945b32c413d7b34f7c34337f34ff50\",\n            \"satoshis\": \"606\",\n            \"spending_tx\": null,\n            \"inscriptions\": [{\n                \"offset\": 0,\n                \"inscription_id\": \"6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0\"\n            }],\n            \"runes\": []\n        }, {\n            \"address\": \"bc1p5kjec5vl67yydqqljy4t97hdxq05s62qyqmmgzxhmqcd628ecuqs8c9w97\",\n            \"script_pubkey\": \"5120a5a59c519fd78846801f912ab2faed301f4869402037b408d7d830dd28f9c701\",\n            \"satoshis\": \"10000\",\n            \"spending_tx\": null,\n            \"inscriptions\": [{\n                \"offset\": 0,\n                \"inscription_id\": \"1b07f02356aed6ddca37db8226c6292f2953d55ea741d7f58d44427976e7d4eei0\"\n            }],\n            \"runes\": []\n        }, {\n            \"address\": \"bc1p6uzgus82tyx8d4xt7eh0f6kxqn53a03529cyh9wmqcwchm6uvmtqkt5sdv\",\n            \"script_pubkey\": \"5120d7048e40ea590c76d4cbf66ef4eac604e91ebe3451704b95db061d8bef5c66d6\",\n            \"satoshis\": \"10000\",\n            \"spending_tx\": \"72b6ccd9289cc2aac7c9e55b3fa9185115313702e10bee31c79c87fd5ef5fff6\",\n            \"inscriptions\": [],\n            \"runes\": [{\n                \"rune_id\": \"866807:12\",\n                \"amount\": \"50000000\"\n            }]\n        }, {\n            \"address\": null,\n            \"script_pubkey\": \"6a5d23020704f0daddcdf988a80303400580e9070680e1eb170ae80708d086030cdafe341602\",\n            \"satoshis\": \"0\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n        }]\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000001676a1898b7804be18303e68e8ceacc00c713011b0ef4\",\n        \"block_height\": 866902\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/transactions/{tx_hash}/outputs/{output_index}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction Output Info",
        "description": "Provides detailed information for a single transaction output, including its value, spend status, and any attached metadata such as Ordinal inscriptions, Runes, or BRC20 data.",
        "operationId": "tx_output_info",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1b07f02356aed6ddca37db8226c6292f2953d55ea741d7f58d44427976e7d4ee"
          },
          {
            "name": "output_index",
            "in": "path",
            "description": "Transaction output index",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimestampedTxOutMetaprotocols"
                },
                "example": "{\n    \"data\": {\n        \"address\": \"3G7gSaxPY7BhbEASd2pnZY5cg7uEQMQvd8\",\n        \"script_pubkey\": \"a9149e3be5b19b788c2eb2d590a779c06b9b7a09782e87\",\n        \"satoshis\": \"564\",\n        \"spending_tx\": null,\n        \"inscriptions\": [],\n        \"runes\": [{\n            \"rune_id\": \"840000:3\",\n            \"amount\": \"88980600000\"\n        }]\n    },\n    \"last_updated\": {\n        \"block_hash\": \"00000000000000000000f2e6c4af3271ca47435d5178eca0bd6d86612d96d4b3\",\n        \"block_height\": 884469\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/addresses/{address}/balance": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Satoshi Balance by Address (Mempool-aware)",
        "description": "Returns the total balance in satoshis held at the specified address or script pubkey by summing all unspent outputs (UTXOs).\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_satoshi_balance_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTimestampedSatoshis"
                },
                "example": "{\n    \"data\": \"695100\",\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"000000000000000000012c80ffd2f0bd17f1f92a0bb4c098236d7108f727bfe5\",\n            \"block_height\": 874584\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 874585,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 8,\n                \"max\": 504\n            }\n        }]\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/addresses/{address}/runes": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Runes by Address (Mempool-aware)",
        "description": "Provides a list of all Rune assets held by the specified address. It returns both total and available balances, allowing for token inventory management and portfolio tracking.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_runes_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "mempool_blocks_limit",
            "in": "query",
            "description": "Limit the number of estimated mempool blocks to be reflected in the data (default: as many as available)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTimestampedRuneQuantities"
                },
                "example": "{\n    \"data\": {\n        \"867138:1861\": \"230000\"\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/addresses/{address}/runes/utxos": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Rune UTxOs by Address (mempool-aware)",
        "description": "Lists all UTXOs at the address or script pubkey that contains Rune tokens, with optional refinement based on Rune type or metadata. Helpful for spend analysis or wallet state audits.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_rune_utxos_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": ""
          },
          {
            "name": "rune",
            "in": "query",
            "description": "Return only UTxOs containing a specific Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "840000:3"
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "The property by which response items should be sorted. Supported values: height (height of block which produced the UTxO - default), amount (amount of runes in UTxO)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OrderBy"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolPaginatedRuneUtxoByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 3,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }, {\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 4,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }, {\n        \"txid\": \"67715c2b42eaa053fc174c68ca4f393446986567ed0509fa78eb3aa9d0b8db0b\",\n        \"vout\": 5,\n        \"satoshis\": \"546\",\n        \"confirmations\": 20674,\n        \"height\": 876954,\n        \"runes\": [{\n            \"rune_id\": \"876947:7\",\n            \"amount\": \"2500000\"\n        }]\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"0000000000000000000119bd8dffd7d8285a69744011aa98f0d9091b0555ca46\",\n            \"block_height\": 897627\n        },\n        \"mempool_timestamp\": \"2025-05-21 00:47:53\",\n        \"estimated_blocks\": [{\n            \"block_height\": 897628,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 5,\n                \"max\": 202\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/addresses/{address}/utxos": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "UTxOs by Address (Mempool-aware)",
        "description": "Retrieves all UTXOs associated with a Bitcoin address or script pubkey. Ideal for wallet views, dust filtering, or balance calculations. Can be tailored to exclude certain categories of UTXOs such as those used in metaprotocols.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_utxos_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "filter_dust",
            "in": "query",
            "description": "Ignore UTxOs containing less than 100000 sats",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "filter_dust_threshold",
            "in": "query",
            "description": "Ignore UTxOs containing less than specified satoshis",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "exclude_metaprotocols",
            "in": "query",
            "description": "Exclude UTxOs involved in metaprotocols (currently only runes and inscriptions will be discovered, more metaprotocols may be supported in future)",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted (by height at which UTxO was produced)",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "mempool_blocks_limit",
            "in": "query",
            "description": "Limit the number of estimated mempool blocks to be reflected in the data (default: as many as available)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolPaginatedUtxo"
                },
                "example": "{\n    \"data\": [{\n        \"txid\": \"e60e70271cce70df4cc1f9d0217d7cc9cbced26f0526c6ba946945cd155b49e4\",\n        \"vout\": 0,\n        \"address\": \"bc1pkh05juaxqc3d388klrjq8msszzzfr33nnn5kt2na00jja3mue89q5wxvew\",\n        \"script_pubkey\": \"5120b5df4973a60622d89cf6f8e403ee10108491c6339ce965aa7d7be52ec77cc9ca\",\n        \"satoshis\": \"546\",\n        \"height\": 867154,\n        \"mempool\": false,\n        \"runes\": [{\n            \"rune_id\": \"867138:1861\",\n            \"amount\": \"2000\"\n        }],\n        \"inscriptions\": []\n    }, {\n        \"txid\": \"9f00f52bc6e9d95797e5597ea50427258ba873df059b13a319f0868ca9da1265\",\n        \"vout\": 0,\n        \"address\": \"bc1pkh05juaxqc3d388klrjq8msszzzfr33nnn5kt2na00jja3mue89q5wxvew\",\n        \"script_pubkey\": \"5120b5df4973a60622d89cf6f8e403ee10108491c6339ce965aa7d7be52ec77cc9ca\",\n        \"satoshis\": \"546\",\n        \"height\": 867155,\n        \"mempool\": true,\n        \"runes\": [{\n            \"rune_id\": \"867138:1861\",\n            \"amount\": \"44000\"\n        }],\n        \"inscriptions\": [{\n            \"offset\": 0,\n            \"inscription_id\": \"47bb5438d366863b25b4b1782af0d0cf0a89a922adce5da81253790d3e651501i0\"\n        }]\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/assets/runes/{rune}/holders": {
      "get": {
        "tags": [
          "Runes"
        ],
        "summary": "Holders by Rune (Mempool-aware)",
        "description": "Lists all addresses currently holding a given Rune, with corresponding balances. Helps visualize token distribution and adoption.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_holders_by_rune",
        "parameters": [
          {
            "name": "rune",
            "in": "path",
            "description": "Rune, specified either by the Rune ID (etching block number and transaction index) or name (spaced or un-spaced)",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2519999:31"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolPaginatedRuneHolder"
                },
                "example": "{\n    \"data\": [{\n        \"address\": \"bc1q764zfcx3uw0dcvcdh7nnwm5fvsml0c2tgn942v\",\n        \"script_pubkey\": \"0014f6aa24e0d1e39edc330dbfa7376e896437f7e14b\",\n        \"balance\": \"9000000.000000000000000000\"\n    }, {\n        \"address\": \"bc1pqfhj6tlxgpvc72mvn9hh0z666k45fpxgsej92d9q08sfe572mhlqca68ld\",\n        \"script_pubkey\": \"5120026f2d2fe640598f2b6c996f778b5ad5ab4484c886645534a079e09cd3caddfe\",\n        \"balance\": \"420000.000000000000000000\"\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000002da06787fe86324e1cc1421861d899b7bd1e340aa1930\",\n            \"block_height\": 867154\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 867155,\n            \"sats_per_vb\": {\n                \"min\": 12,\n                \"median\": 14,\n                \"max\": 16\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/fee_rates": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Mempool Block Fee Rates",
        "description": "Statistics regarding fee rates of transactions within estimated mempool blocks.",
        "operationId": "fee_rates",
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTimestampedFeeRates"
                },
                "example": "{\n    \"data\": [{\n        \"block_height\": 874585,\n        \"sats_per_vb\": {\n            \"min\": 1,\n            \"median\": 8,\n            \"max\": 504\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"000000000000000000012c80ffd2f0bd17f1f92a0bb4c098236d7108f727bfe5\",\n            \"block_height\": 874584\n        },\n        \"mempool_timestamp\": \"2025-01-06 16:43:32\",\n        \"estimated_blocks\": [{\n            \"block_height\": 874585,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 8,\n                \"max\": 504\n            }\n        }]\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/transactions/{tx_hash}/metaprotocols": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction Info with Metaprotocols (Mempool-aware)",
        "description": "Returns an enhanced view of the transaction, including info about metaprotocols in both inputs and outputs. Useful for deep inspection tools.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "tx_info_with_metaprotocols1",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1b07f02356aed6ddca37db8226c6292f2953d55ea741d7f58d44427976e7d4ee"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTimestampedTxInfoMetaprotocols"
                },
                "example": "{\n    \"data\": {\n        \"height\": 900962,\n        \"volume\": \"3666788\",\n        \"fees\": \"508\",\n        \"sats_per_vb\": 2,\n        \"metaprotocols\": [\n          \"runes\"\n        ],\n        \"inputs\": [{\n            \"txid\": \"ed6273c6ff9259ec6a68dff0b21ddc4499e2e6d9837981f8c5089ac4935f6cf5\",\n            \"vout\": 0,\n            \"address\": \"bc1qyvtvxfyz60mmudgsmtxxpf22jl040ejmpj5mqnwv9lwr30jzmygqhr9tv8\",\n            \"script_pubkey\": \"00202316c32482d3f7be3510dacc60a54a97df57e65b0ca9b04dcc2fdc38be42d910\",\n            \"satoshis\": \"3666696\",\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"txid\": \"a115a1818805fa06a80eaa57287c0c3f57d5993c1f0d3f771523b4d11711d31f\",\n            \"vout\": 1,\n            \"address\": \"bc1pn2w92qyh7mwpf9rzmnvjnc0whswft243n0ntj50lurpnsjwwfy9sjur75v\",\n            \"script_pubkey\": \"51209a9c550097f6dc149462dcd929e1eebc1c95aab19be6b951ffe0c33849ce490b\",\n            \"satoshis\": \"600\",\n            \"inscriptions\": [],\n            \"runes\": []\n        }],\n        \"outputs\": [{\n            \"address\": null,\n            \"script_pubkey\": \"6a5d0b00c0a23303ffbedbb50201\",\n            \"satoshis\": \"0\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1pdruptufwh9awfepzq506kh03392lk074n4a5cy3v8zu0ma0sjvtqhwdu85\",\n            \"script_pubkey\": \"512068f815f12eb97ae4e422051fab5df18955fb3fd59d7b4c122c38b8fdf5f09316\",\n            \"satoshis\": \"546\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qyvtvxfyz60mmudgsmtxxpf22jl040ejmpj5mqnwv9lwr30jzmygqhr9tv8\",\n            \"script_pubkey\": \"00202316c32482d3f7be3510dacc60a54a97df57e65b0ca9b04dcc2fdc38be42d910\",\n            \"satoshis\": \"3641305\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qp8j9sx6609h7llqufurxjgrwsqwt020tqzn0gs\",\n            \"script_pubkey\": \"001409e4581b5a796feffc1c4f0669206e801cb7a9eb\",\n            \"satoshis\": \"580\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n          }, {\n            \"address\": \"bc1qqx7h6wrl52hxwqnp8v8k072ahnr3sq8huzynww\",\n            \"script_pubkey\": \"001401bd7d387fa2ae6702613b0f67f95dbcc71800f7\",\n            \"satoshis\": \"24357\",\n            \"spending_tx\": null,\n            \"inscriptions\": [],\n            \"runes\": []\n        }]\n    },\n    \"indexer_info\": {\n    \"chain_tip\": {\n        \"block_hash\": \"0000000000000000000148c7dbf4f8721db8912485cc6860e5b22f9b62e09870\",\n        \"block_height\": 900961\n    },\n    \"mempool_timestamp\": \"2025-06-12 17:27:29\",\n    \"estimated_blocks\": [{\n        \"block_height\": 900962,\n        \"sats_per_vb\": {\n            \"min\": 2,\n            \"median\": 4,\n            \"max\": 101\n        }\n    }]\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/mempool/transactions/{tx_hash}/outputs/{output_index}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction Output Info (Mempool-aware)",
        "description": "Provides detailed information for a single transaction output, including its value, spend status, and any attached metadata such as Ordinal inscriptions, Runes, or BRC20 data.\n\nIn addition to confirmed transactions, mempool endpoints return data which reflects pending transactions in some number of \"estimated\" blocks - predicted blocks containing transactions which have been propagated around the network but not yet included in a mined block, with transactions with a higher sat/vB value being prioritised. The response details how many of these estimated blocks were considered when fetching the data.",
        "operationId": "mempool_tx_output_info",
        "parameters": [
          {
            "name": "tx_hash",
            "in": "path",
            "description": "Transaction hash",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "b077b8d829004197c5d71bbb755cf23914891db4768d642458c8ef245b3af7fe"
          },
          {
            "name": "output_index",
            "in": "path",
            "description": "Transaction output index",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "0"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTimestampedTxOutMetaprotocols"
                },
                "example": "{\n    \"data\": {\n        \"address\": \"bc1qr46dacxy28zz5apsjrvs5jdgvs5sdcf2ed4tvl\",\n        \"script_pubkey\": \"00141d74dee0c451c42a743090d90a49a8642906e12a\",\n        \"satoshis\": \"85000\",\n        \"spending_tx\": null,\n        \"inscriptions\": [],\n        \"runes\": []\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"0000000000000000000085563bb7da463844c02d6c82bca13e3eec5411f8c8ed\",\n            \"block_height\": 897991\n        },\n        \"mempool_timestamp\": \"2025-05-23 11:43:08\",\n        \"estimated_blocks\": [{\n            \"block_height\": 897992,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 210\n            }\n        }]\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Wallet Satoshi Activity by Address (Mempool-aware)",
        "description": "Returns all transactions for a given address or script pubkey, allowing insight into when the balance increased, decreased, or remained the same. Mempool data is included by default. This endpoint supports customization to narrow results by time, transaction type, or ordering, enabling tailored historical views.",
        "operationId": "wallet_satoshi_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions included on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions included on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Only return transactions of a specific activity kind. Supported values: \"increase\" for transactions where satoshi balance increases, \"decrease\" for decrease, and \"self_transfer\" for transactions where satoshi balance remained the same.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Do not return self-transfer transactions - transactions in which satoshi balance did not increase or decrease.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "mempool",
            "in": "query",
            "description": "Include mempool data. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolWalletPaginatedActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 901937,\n        \"confirmations\": 1,\n        \"mempool\": false,\n        \"tx_hash\": \"7032180634bc691471b92099250b9370e07a0c8c8ca1420e518806404c7b6cf3\",\n        \"sat_activity\": {\n            \"kind\": \"increase\",\n            \"amount\": \"603733\",\n            \"usd_amount\": \"629.17\"\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000001ae26ce7b25ef2bd13f4c0069b634a233b1472f0c0a17\",\n            \"block_height\": 901937\n        },\n        \"mempool_timestamp\": \"2025-06-19 19:57:37\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901938,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 99\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/activity/metaprotocols": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Metaprotocol Activity by Address",
        "description": "Return all transactions where the specified address has satoshi and/or metaprotocols activity. Supported metaprotocols: runes, inscriptions.",
        "operationId": "wallet_metaprotocol_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only UTxOs created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only UTxOs created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "mempool",
            "in": "query",
            "description": "Include mempool data. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolWalletPaginatedActivityByAddressWithMetaprotocols"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 902843,\n        \"confirmations\": 53,\n        \"mempool\": false,\n        \"tx_hash\": \"4717042047235b65fa7cf7d7a5fe2f0b9d51398f5c84676b65bde053edbac418\",\n        \"sat_activity\": {\n            \"kind\": \"decrease\",\n            \"amount\": \"546\",\n            \"usd_amount\": \"0.59\"\n        },\n        \"inscription_activity\": null,\n        \"rune_activity\": {\n            \"etched_rune\": null,\n            \"minted\": null,\n            \"self_transfers\": [],\n            \"increased_balances\": [],\n            \"decreased_balances\": [{\n                \"rune_id\": \"840000:3\",\n                \"amount\": \"209938.14943\",\n                \"usd_amount\": \"863.26\"\n            }]\n        }\n    }, {\n        \"height\": 902847,\n        \"confirmations\": 49,\n        \"mempool\": false,\n        \"tx_hash\": \"fe9cc01f0a2446da2bb71474652643d7b3d1d0c41fd05358373e0df921024575\",\n        \"sat_activity\": {\n            \"kind\": \"increase\",\n            \"amount\": \"546\",\n            \"usd_amount\": \"0.59\"\n        },\n        \"inscription_activity\": {\n            \"self_transferred\": [],\n            \"sent\": [],\n            \"received\": [{\n                \"inscription_id\": \"e484a11516b74a06f5d104a83b1974db8d26e7a38cbb495d29bf5ed6b1f4e156i277\",\n                \"from\": {\n                  \"address\": \"bc1pqqeyklpuh5kx6yg3zqwy0tn9ysxtg6un0y7dl0hp6wz5y5xwvsvs6due29\",\n                  \"script_pubkey\": \"512000324b7c3cbd2c6d1111101c47ae65240cb46b93793cdfbee1d3854250ce6419\",\n                  \"input_index\": 0,\n                  \"sat_offset\": 0\n                },\n                \"to\": {\n                  \"address\": \"bc1px7ff6446jwmh79uu9df6dejvqayn9d6tlvwe5tudehj4j0cz58xsfr0dw9\",\n                  \"script_pubkey\": \"512037929d56ba93b77f179c2b53a6e64c074932b74bfb1d9a2f8dcde5593f02a1cd\",\n                  \"output_vout\": 0,\n                  \"sat_offset\": 0,\n                  \"output_txid\": \"fe9cc01f0a2446da2bb71474652643d7b3d1d0c41fd05358373e0df921024575\"\n                }\n            }]\n        },\n        \"rune_activity\": null\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000001929ab2c8fa214ccb7f025c9b591514adfc39c8d18fdd\",\n            \"block_height\": 902895\n        },\n        \"mempool_timestamp\": null,\n        \"estimated_blocks\": []\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/balance/historical": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Historical Satoshi Balance by Address",
        "description": "Returns the historical satoshi balances, itemized by block and including USD price.",
        "operationId": "wallet_historical_satoshi_balance_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1phyrmjs2jm5c98tldke2ykp0h66lsx3wy0ey8ug2fjj5mxsn8ftqsa24un8"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only blocks included on or after a specific height or timestamps. If this parameter is not provided, the starting point will be the first block where the address has seen its balance increase or decrease.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only blocks included on or before a specific height or timestamp",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "height_params",
            "in": "query",
            "description": "Whether the from and to integer query params should be read as timestamps or as block heights. True (the default) means from and to params should be read as block heights.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedHistoricalSatBalanceByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 899903,\n        \"confirmations\": 932,\n        \"unix_timestamp\": 1749126863,\n        \"timestamp\": \"2025-06-05 12:34:23\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899904,\n        \"confirmations\": 931,\n        \"unix_timestamp\": 1749126892,\n        \"timestamp\": \"2025-06-05 12:34:52\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899905,\n        \"confirmations\": 930,\n        \"unix_timestamp\": 1749126924,\n        \"timestamp\": \"2025-06-05 12:35:24\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.56\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000014ba9b2d30d9c737423c753c5b6a27989815ed50afe04\",\n        \"block_height\": 900834\n    },\n    \"next_cursor\": null\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "404": {
            "description": "Requested entity not found on-chain"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/inscriptions/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Inscription Activity by Address (Mempool-aware)",
        "description": "Returns all inscription-related transactions involving a specific address. Can be filtered by activity type (send, receive, self-transfer), narrowed to a specific inscription, and sorted chronologically. Mempool data is included by default. Useful for building dashboards, tracking user behavior, or filtering unwanted spam activity.",
        "operationId": "wallet_inscription_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "inscription_id",
            "in": "query",
            "description": "Return only transactions containing a specific inscription, specified by an inscription ID. In presence of activity_kind, it relates to this specific inscription. In presence of exclude_self_transfers, it is this specific inscription that should be sent or received but not self-transferred.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0"
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Filter txs by presence of specific activity kind. Supported values: send, receive, self_transfer. In presence of inscription filter, the activity kind relates to that specific inscription. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/InscriptionActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Exclude txs only containing inscriptions self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of inscription filter, that specific inscription should be sent or received, not self-transferred.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "mempool",
            "in": "query",
            "description": "Include mempool data. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolWalletPaginatedInscriptionActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 901787,\n        \"confirmations\": 0,\n        \"mempool\": true,\n        \"tx_hash\": \"cf5caab63c40314fdd2f421b19541f9b25926d2a6318845ad8bc3266b4b8a8be\",\n        \"inscription_activity\": {\n            \"self_transferred\": [],\n            \"sent\": [],\n            \"received\": [{\n                \"inscription_id\": \"1e6f91f13fe9a4359e1b9d6e7723cacb815d250337dab921f7b90fca62913e73i577\",\n                \"from\": {\n                    \"address\": \"bc1q8jtuypcd0p9v7eu8zq9uhd42tvy6gwh89zuchh\",\n                    \"script_pubkey\": \"00143c97c2070d784acf6787100bcbb6aa5b09a43ae7\",\n                    \"input_index\": 0,\n                    \"sat_offset\": 0\n                },\n                \"to\": {\n                    \"address\": \"bc1pck742mdgmrd473upp553jj5x2w62q6mzd3enxjdegrxx2sc7rcmqnndp86\",\n                    \"script_pubkey\": \"5120c5bd556da8d8db5f47810d29194a8653b4a06b626c733349b940cc65431e1e36\",\n                    \"output_vout\": 0,\n                    \"sat_offset\": 0,\n                    \"output_txid\": \"cf5caab63c40314fdd2f421b19541f9b25926d2a6318845ad8bc3266b4b8a8be\"\n                }\n            }]\n        }\n    }, {\n        \"height\": 901780,\n        \"confirmations\": 7,\n        \"mempool\": false,\n        \"tx_hash\": \"09b6730e0f11f87c31f8d4977785292e9c741b16834d59a0b2f352ee01a43e91\",\n        \"inscription_activity\": {\n            \"self_transferred\": [],\n            \"sent\": [],\n            \"received\": [{\n                \"inscription_id\": \"a8a3f114d24e0e270a4d66457ff1ca1d11eb21d4daa02ffcd1b643a1c6731a2ci1388\",\n                \"from\": {\n                    \"address\": \"bc1p7jwyezderr5qxepw57fepw9dmdetn9pqkj2e3m7ufffthspdj5aqdxsdw5\",\n                    \"script_pubkey\": \"5120f49c4c89b918e803642ea79390b8addb72b99420b49598efdc4a52bbc02d953a\",\n                    \"input_index\": 0,\n                    \"sat_offset\": 0\n                },\n                \"to\": {\n                    \"address\": \"bc1pck742mdgmrd473upp553jj5x2w62q6mzd3enxjdegrxx2sc7rcmqnndp86\",\n                    \"script_pubkey\": \"5120c5bd556da8d8db5f47810d29194a8653b4a06b626c733349b940cc65431e1e36\",\n                    \"output_vout\": 0,\n                    \"sat_offset\": 0,\n                    \"output_txid\": \"09b6730e0f11f87c31f8d4977785292e9c741b16834d59a0b2f352ee01a43e91\"\n                }\n            }]\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000d7398966d32c809e5acad484574547150c97d39eea91\",\n            \"block_height\": 901786\n        },\n        \"mempool_timestamp\": \"2025-06-18 16:28:43\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901787,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 5,\n                \"max\": 991\n            }\n        }]\n    },\n    \"next_cursor\": \"Aw3ClAEBkT6kAe5S87KgWU2DFht0nC4phXeX1PgxfPgRDw5ztgk\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/runes/activity": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Rune Activity by Address (Mempool-aware)",
        "description": "Return all transactions where the specified address has rune activity, with the option to filter by a specific rune kind. Mempool data is included by default.",
        "operationId": "wallet_rune_activity_by_address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
          },
          {
            "name": "order",
            "in": "query",
            "description": "The order in which the results are sorted. Supported values: asc, desc",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "string",
                  "default": "asc",
                  "enum": [
                    "asc",
                    "desc"
                  ]
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The max number of results per page",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "type": "integer",
                  "default": 100,
                  "minimum": 0
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Return only transactions created on or after a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Return only transactions created on or before a specific height",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "rune",
            "in": "query",
            "description": "Return only transactions containing a specific rune, specified either by the rune ID (etching block number and transaction index) or name (spaced or un-spaced). In presence of activity_kind, it relates to this specific rune. In presence of exclude_self_transfers, it is this specific rune that the queried address should see increase or decrease in balance in the tx, not just being self-transferred.",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "example": "840000:3"
          },
          {
            "name": "activity_kind",
            "in": "query",
            "description": "Filter txs by presence specific activity kind. Supported values: increased, decreased, self_transfer. In presence of rune filter, the activity kind relates to that specific rune. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RuneActivityKindByAddress"
                }
              ],
              "nullable": true
            }
          },
          {
            "name": "exclude_self_transfers",
            "in": "query",
            "description": "Exclude txs only containing runes self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of rune filter, that specific rune should be sent or received, not self-transferred.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "mempool",
            "in": "query",
            "description": "Include mempool data. Default: true.",
            "required": false,
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolWalletPaginatedRuneActivityByAddress"
                },
                "example": "{\n    \"data\": [{\n        \"height\": 901674,\n        \"confirmations\": 0,\n        \"mempool\": true,\n        \"tx_hash\": \"2264aa2f8ec653067a98f35c7e762cff248410dbb13408629ce0ed4ca6444dd1\",\n        \"rune_activity\": {\n            \"etched_rune\": null,\n            \"minted\": null,\n            \"self_transfers\": [],\n            \"increased_balances\": [],\n            \"decreased_balances\": [{\n                \"rune_id\": \"845764:84\",\n                \"amount\": \"20000\"\n            }]\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000a30d9d5025c11b17b2c44b176de0e284c84f59dacebb\",\n            \"block_height\": 901673\n        },\n        \"mempool_timestamp\": \"2025-06-17 21:38:09\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901674,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 300\n            }\n        }]\n    },\n    \"next_cursor\": \"Aw3CKgEl0U1Epkzt4JxiCDSx2xCEJP8sdn5c85h6BlPGji-qZCI\"\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/wallet/addresses/{address}/statistics": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Address Statistics (Mempool-aware)",
        "description": "Returns all current statistics of the address: total txs the address was involved in, total unspent outputs controlled by the address, current satoshi, control of any runes and inscription balance, distinguishing between confirmed and pending (still in the mempool) data.",
        "operationId": "wallet_address_statistics",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "Bitcoin address or hex encoded script pubkey",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolWalletTimestampedAddressStatistics"
                },
                "example": "{\n    \"data\": {\n        \"total_txs\": 1,\n        \"total_utxos\": 1,\n        \"runes\": false,\n        \"total_inscriptions\": 0,\n        \"sat_balance\": \"1881005\",\n        \"usd_balance\": \"1931.60\",\n        \"pending\": {\n            \"txs\": 1,\n            \"utxos\": 0,\n            \"sat_balance\": \"-97099\",\n            \"usd_balance\": \"-99.71\"\n        }\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000470ac91070a0b8f710552c62901d14ca8735140f45fc\",\n            \"block_height\": 902075\n        },\n        \"mempool_timestamp\": \"2025-06-20 17:47:30\",\n        \"estimated_blocks\": [{\n            \"block_height\": 902076,\n            \"sats_per_vb\": {\n              \"min\": 1,\n              \"median\": 4,\n              \"max\": 199\n            }\n        }]\n    }\n}"
              }
            }
          },
          "400": {
            "description": "Malformed query parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/rpc/block/latest": {
      "get": {
        "description": "Returns the most recent block on the Bitcoin blockchain.\nUseful for syncing frontends, indexing latest chain state, or watching for new block activity. Set `verbose=true` for full TX data without need for separate calls.",
        "operationId": "rpc_latest_block",
        "parameters": [
          {
            "description": "Page number for block transactions.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Max number of block transactions per page.",
            "example": 100,
            "in": "query",
            "name": "count",
            "schema": {
              "default": 100,
              "type": "integer"
            }
          },
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.BitcoinBlockResponseBody"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.BitcoinBlockVerboseResponseBody"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting block."
          }
        },
        "summary": "Latest Block",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/range/{start_height}/{end_height}": {
      "get": {
        "description": "Fetches basic info for a contiguous block range (start and end height).",
        "operationId": "rpc_block_range_info",
        "parameters": [
          {
            "description": "Start height.",
            "in": "path",
            "name": "start_height",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "End height.",
            "in": "path",
            "name": "end_height",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of blocks.",
            "example": 10,
            "in": "query",
            "name": "count",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Order blocks by descending (desc) or ascending (asc).",
            "example": "asc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinBlocksResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                }
              }
            },
            "description": "Node RPC error."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting blocks."
          }
        },
        "summary": "Block Range Info",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/recent": {
      "get": {
        "description": "Returns the most recent blocks from the tip going backward. Useful to view or stream recent blockchain activity.",
        "operationId": "rpc_recent_blocks_info",
        "parameters": [
          {
            "description": "Page number.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of blocks.",
            "example": 5,
            "in": "query",
            "name": "count",
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "description": "Order blocks by descending (desc) or ascending (asc).",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinBlocksResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid count number."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting blocks."
          }
        },
        "summary": "Recent Block Info",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/recent/{count}": {
      "get": {
        "description": "Returns a list of the most recently mined blocks, limited by count. It provides a snapshot of the latest blockchain activity, starting from the current chain tip and going backward.",
        "operationId": "rpc_recent_blocks_info_count",
        "parameters": [
          {
            "description": "Number of blocks.",
            "example": 5,
            "in": "path",
            "name": "count",
            "required": true,
            "schema": {
              "default": 1,
              "maximum": 10,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Order blocks by descending (desc) or ascending (asc).",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinBlocksResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid count number."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting blocks."
          }
        },
        "summary": "Recent Block Info Count",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/{height_or_hash}": {
      "get": {
        "description": "Retrieve full or summary information for a specific block.\nUseful for analyzing individual blocks or resolving TX data inline.",
        "operationId": "rpc_block_info",
        "parameters": [
          {
            "description": "Block height or hash.",
            "in": "path",
            "name": "height_or_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Page number for block transactions.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Max number of block transactions per page.",
            "example": 100,
            "in": "query",
            "name": "count",
            "schema": {
              "default": 100,
              "type": "integer"
            }
          },
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.BitcoinBlockResponseBody"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.BitcoinBlockVerboseResponseBody"
                    }
                  ]
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid height."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting block."
          }
        },
        "summary": "Block Info",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/{height_or_hash}/miner": {
      "get": {
        "description": "Returns metadata about the miner for a specific block.\nIncludes name, known addresses, icon, and associated tags.\nUseful for research or visual analytics on pool distribution.",
        "operationId": "rpc_block_miner_info",
        "parameters": [
          {
            "description": "Block height or hash.",
            "in": "path",
            "name": "height_or_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BlockMinerResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting block miner."
          }
        },
        "summary": "Block Miner Info",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/block/{height_or_hash}/volume": {
      "get": {
        "description": "Returns total transaction output volume (in satoshis) for a block.\nThis provides insight into economic activity, not just block size.",
        "operationId": "rpc_block_volume",
        "parameters": [
          {
            "description": "Block height or hash.",
            "in": "path",
            "name": "height_or_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BlockVolumeResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting block volume."
          }
        },
        "summary": "Block Volume",
        "tags": [
          "Blocks"
        ]
      }
    },
    "/rpc/general/info": {
      "get": {
        "description": "Returns global node and chain info: block count, difficulty, pruning, fork status, etc.\nUseful for diagnostics, UI status panels, or infrastructure monitoring.",
        "operationId": "rpc_chain_info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BlockchainInfoResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                }
              }
            },
            "description": "Node RPC error."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting blockchain info."
          }
        },
        "summary": "Blockchain Info",
        "tags": [
          "General"
        ]
      }
    },
    "/rpc/mempool/info": {
      "get": {
        "description": "Returns size, memory usage, fee thresholds, and Replace-By-Fee (RBF) state.\nUseful for gauging current congestion and planning fees accordingly.",
        "operationId": "rpc_mempool_info",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.MempoolInfoResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                }
              }
            },
            "description": "Node RPC error."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting mempool info."
          }
        },
        "summary": "Mempool Info",
        "tags": [
          "Mempool"
        ]
      }
    },
    "/rpc/mempool/transactions": {
      "get": {
        "description": "Returns a list of transaction IDs currently in the mempool.",
        "operationId": "rpc_mempool_transactions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.MempoolTxsResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting mempool transactions."
          }
        },
        "summary": "Mempool Transactions",
        "tags": [
          "Mempool"
        ]
      }
    },
    "/rpc/mempool/transactions/{tx_hash}": {
      "get": {
        "description": "Returns full information for a mempool transaction: fees, inputs, Replace-By-Fee (RBF) flags, unconfirmed descendants, etc.\nUseful for inspecting transactions or verifying status.",
        "operationId": "rpc_mempool_transaction_details",
        "parameters": [
          {
            "description": "Transaction hash.",
            "in": "path",
            "name": "tx_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.MempoolTxDetailsResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting mempool transaction info."
          }
        },
        "summary": "Mempool Transaction Info",
        "tags": [
          "Mempool"
        ]
      }
    },
    "/rpc/mempool/transactions/{tx_hash}/ancestors": {
      "get": {
        "description": "Lists ancestor TXs for a mempool TX, by a TX hash.\nUseful for evaluating chains of unconfirmed transactions and replacability via Replace-By-Fee (RBF).",
        "operationId": "rpc_mempool_transaction_ancestors",
        "parameters": [
          {
            "description": "Transaction hash.",
            "in": "path",
            "name": "tx_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.MempoolTxAncestorsResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting mempool transaction ancestors."
          }
        },
        "summary": "Mempool Transaction Ancestors",
        "tags": [
          "Mempool"
        ]
      }
    },
    "/rpc/mempool/transactions/{tx_hash}/descendants": {
      "get": {
        "description": "Lists descendant TXs for a mempool TX, by a TX hash.\nUseful for evaluating chains of unconfirmed transactions and replacability via Replace-By-Fee (RBF).",
        "operationId": "rpc_mempool_transaction_descendants",
        "parameters": [
          {
            "description": "Transaction hash.",
            "in": "path",
            "name": "tx_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.MempoolTxDescendantsResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Error getting mempool transaction descendants."
          }
        },
        "summary": "Mempool Transaction Descendants",
        "tags": [
          "Mempool"
        ]
      }
    },
    "/rpc/transaction/batch": {
      "post": {
        "description": "Takes up to 50 TX hashes and returns verbose TX data in a single call. Useful for dashboards or syncing nodes without hitting rate limits.",
        "operationId": "rpc_transaction_info_batch",
        "parameters": [
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api_bitcoin.BatchTxsRequest"
              }
            }
          },
          "description": "Transaction hash array.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionsBatchResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request: too many transactions."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transaction response."
          }
        },
        "summary": "Transaction Info Batch",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/decode": {
      "post": {
        "description": "Takes a raw TX hex and returns structured JSON.\nUseful when building or validating raw transactions.",
        "operationId": "rpc_transaction_decode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Raw Transaction Hex.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinDecodedTransactionResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transaction response."
          }
        },
        "summary": "Decode Transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/estimatefee/{blocks}": {
      "get": {
        "description": "Estimate approximate fee per kilobyte (kB) needed for a transaction.\nUseful for setting dynamic fee rates in wallets or broadcast tools.",
        "operationId": "rpc_estimate_smart_fee",
        "parameters": [
          {
            "description": "Confirmation target in blocks.",
            "example": 50,
            "in": "path",
            "name": "blocks",
            "required": true,
            "schema": {
              "default": 1,
              "maximum": 1008,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Whether to return a more conservative estimate which also satisfies a longer history. A conservative estimate potentially returns a higher feerate and is more likely to be sufficient for the desired target, but is not as responsive to short term drops in the prevailing fee market. Must be one of: 'unset' 'economical' 'conservative'.",
            "example": "economical",
            "in": "query",
            "name": "mode",
            "schema": {
              "default": "conservative",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.EstimateSmartFeeResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request. Ensure one of the following estimate modes is used: conservative, economical, unset."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing fee estimate response."
          }
        },
        "summary": "Estimate Fee",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/hex": {
      "post": {
        "description": "Same as `/transaction/decode` in that it takes a raw TX hex and returns structured JSON, but it also fetches blockchain metadata such as confirmations and block height.",
        "operationId": "rpc_transaction_info_hex",
        "parameters": [
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Transaction hex.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerboseResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transaction response."
          }
        },
        "summary": "Transaction Info Hex",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/psbt/decode": {
      "post": {
        "description": "Takes a signed PSBT hex and returns the internal structure. Covers UTXO metadata, BIP32 deriv paths, inputs/outputs, etc.\nUseful for hardware wallet or multisig integrations.",
        "operationId": "rpc_psbt_decode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Signed PSBT Hex.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.PSBTResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                }
              }
            },
            "description": "Node RPC error."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.APIError"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Decode PSBT",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/recent": {
      "get": {
        "description": "Returns a list of recent on-chain transactions.\nUseful for retrieving lastest transactions or monitoring new, on-chain activity by block height.",
        "operationId": "rpc_transaction_recent",
        "parameters": [
          {
            "description": "Page number.",
            "example": 1,
            "in": "query",
            "name": "page",
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "description": "Number of blocks.",
            "example": 50,
            "in": "query",
            "name": "count",
            "schema": {
              "default": 100,
              "type": "integer"
            }
          },
          {
            "description": "Order of transactions.",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          },
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionsVerboseResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No transactions in the last 10 blocks."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid count number."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transactions response."
          }
        },
        "summary": "Recent Transactions",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/recent/{count}": {
      "get": {
        "description": "Returns a list of recent on-chain transactions, specified by count.\nUseful for retrieving lastest transactions or monitoring new, on-chain activity by block height.",
        "operationId": "rpc_transaction_recent_count",
        "parameters": [
          {
            "description": "Number of transactions.",
            "example": 5,
            "in": "path",
            "name": "count",
            "required": true,
            "schema": {
              "default": 3,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Order transactions by descending (desc) or ascending (asc).",
            "example": "desc",
            "in": "query",
            "name": "order",
            "schema": {
              "default": "asc",
              "type": "string"
            }
          },
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionsVerboseResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "204": {
            "description": "No transactions in the last 10 blocks."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid count number."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transactions response."
          }
        },
        "summary": "Recent Transactions Count",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/submit": {
      "post": {
        "description": "Pushes a signed raw transaction to the network.",
        "operationId": "rpc_submit_transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "description": "Signed Tx Hex.",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transaction response."
          }
        },
        "summary": "Send Transaction",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/rpc/transaction/{tx_hash}": {
      "get": {
        "description": "This endpoint returns detailed information for a specific Bitcoin transaction, by its unique transaction hash.",
        "operationId": "rpc_transaction_info",
        "parameters": [
          {
            "description": "Transaction hash.",
            "in": "path",
            "name": "tx_hash",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Verbose.",
            "example": false,
            "in": "query",
            "name": "verbose",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerboseResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.NodeRPCError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid request."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/api_bitcoin.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Error processing transaction response."
          }
        },
        "summary": "Transaction Info",
        "tags": [
          "Transactions"
        ]
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "User event logs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventLogList"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/logs/{id}": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Event log info by ID",
        "parameters": [
          {
            "name": "id",
            "description": "Event log ID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventLog"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/managers": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "User event managers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventManagerList"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Managers"
        ],
        "summary": "Create event manager",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createEventManagerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventManager"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/managers/{id}": {
      "get": {
        "tags": [
          "Managers"
        ],
        "summary": "Event manager info by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventManager"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Managers"
        ],
        "summary": "Delete event manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventManager"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Managers"
        ],
        "summary": "Update event manager",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateEventManagerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventManager"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/triggers": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "User event manager triggers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/triggerList"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Triggers"
        ],
        "summary": "Create event manager trigger",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createTriggerRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trigger"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/triggers/{id}": {
      "get": {
        "tags": [
          "Triggers"
        ],
        "summary": "Event trigger info by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trigger"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Triggers"
        ],
        "summary": "Delete event manager trigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trigger"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Triggers"
        ],
        "summary": "Update event manager trigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateTriggerBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trigger"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/rpcStatus"
                }
              }
            }
          }
        }
      }
    },
    "/markets/btc/prices/batch": {
      "post": {
        "description": "Returns BTC-USD prices for the provided list of UTC timestamps. Timestamps are matched against minute-aligned entries in the database.",
        "operationId": "mkt-btc-prices-by-timestamps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bitcoin_api.PricesByTimestampsParams"
              }
            }
          },
          "description": "Array of UTC timestamps",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bitcoin_api.PricesByTimestampsResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "BTC prices by timestamp",
        "tags": [
          "Prices"
        ]
      }
    },
    "/markets/btc/prices/runes/batch": {
      "post": {
        "description": "Returns Rune prices in USD and satoshi for the provided list of Rune ID <> UTC timestamps pairs.",
        "operationId": "mkt-rune-prices-by-timestamps",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/bitcoin_api.RunePricesParams"
              }
            }
          },
          "description": "Array of RuneID <> UTC timestamp pairs",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bitcoin_api.RunePricesByTimestampsResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Rune prices by timestamp",
        "tags": [
          "Prices"
        ]
      }
    },
    "/markets/btc/prices/runes/{rune_id}/{timestamp}": {
      "get": {
        "description": "Returns Rune price in USD and satoshi for the provided UTC timestamp.",
        "operationId": "mkt-rune-price-by-timestamp",
        "parameters": [
          {
            "description": "Rune ID in the format <etching_block>:<etching_tx>",
            "example": "BTC-840000:28",
            "in": "path",
            "name": "rune_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unix timestamp in seconds",
            "example": 1746109820,
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bitcoin_api.RunePriceResponse"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bitcoin_api.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/bitcoin_api.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid timestamp"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Rune price by timestamp",
        "tags": [
          "Prices"
        ]
      }
    },
    "/markets/btc/prices/{timestamp}": {
      "get": {
        "description": "Returns BTC-USD price for the provided UTC timestamp.",
        "operationId": "mkt-btc-price-by-timestamp",
        "parameters": [
          {
            "description": "Unix timestamp in seconds",
            "in": "path",
            "name": "timestamp",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/bitcoin_api.PriceTimestamp"
                  },
                  "type": "array"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/bitcoin_api.APIError"
                    },
                    {
                      "$ref": "#/components/schemas/bitcoin_api.APIError"
                    }
                  ]
                }
              }
            },
            "description": "Invalid timestamp"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "BTC price by timestamp",
        "tags": [
          "Prices"
        ]
      }
    },
    "/markets/dexs": {
      "get": {
        "description": "Retrieves a list of all decentralized exchanges (DEXs) currently indexed and supported by the API. This serves as the discovery endpoint for clients to programmatically identify valid DEX identifiers used in other endpoints like trades or OHLC queries.",
        "operationId": "mkt-dexs",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.SupportedDexList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Supported DEXs",
        "tags": [
          "DEX"
        ]
      }
    },
    "/markets/dexs/ohlc/{dex}/{symbol}": {
      "get": {
        "description": "Returns candlestick-formatted market data (Open, High, Low, Close, Volume) for a specific DEX and Rune pair, segmented by time intervals. This is ideal for price charting, trend analysis, and historical performance. Data is sourced from both confirmed blocks and optionally from the mempool, depending on configuration.",
        "operationId": "mkt-dex-ohlc",
        "parameters": [
          {
            "description": "Name of the DEX",
            "example": "magiceden",
            "in": "path",
            "name": "dex",
            "required": true,
            "schema": {
              "default": "magiceden",
              "type": "string"
            }
          },
          {
            "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
            "example": "BTC-840000:28",
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "default": "BTC-840000:28",
              "type": "string"
            }
          },
          {
            "description": "Mempool mode",
            "example": "included",
            "in": "query",
            "name": "mempool",
            "schema": {
              "default": "excluded",
              "enum": [
                "included",
                "excluded",
                "only"
              ],
              "type": "string"
            }
          },
          {
            "description": "Time resolution (1m, 5m, 15m, 30m, 1h, 4h, 1d, 1w, 1M)",
            "example": "1h",
            "in": "query",
            "name": "resolution",
            "required": true,
            "schema": {
              "default": "1h",
              "enum": [
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "4h",
                "1d",
                "1w",
                "1M"
              ],
              "type": "string"
            }
          },
          {
            "description": "Start timestamp in Unix",
            "example": "1735689600",
            "in": "query",
            "name": "from",
            "schema": {
              "default": "1735689600",
              "type": "string"
            }
          },
          {
            "description": "End timestamp in Unix",
            "example": "1742428800",
            "in": "query",
            "name": "to",
            "schema": {
              "default": "1742428800",
              "type": "string"
            }
          },
          {
            "description": "Limit number of Runes returned (min: 1, max: 50000)",
            "example": 10000,
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 5000,
              "maximum": 50000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort by descending (desc) or ascending (asc)",
            "example": "asc",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": "Fill candles with no trades with synthetic data (OHLC filled with previous closing price, volume=0)",
            "example": false,
            "in": "query",
            "name": "carry",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.CandleList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Rune OHLC data",
        "tags": [
          "DEX"
        ]
      }
    },
    "/markets/dexs/trades/{dex}/{symbol}": {
      "get": {
        "description": "Provides a time-series list of individual trades for a specified Rune pair on a given DEX, including granular data such as trade price (in satoshis), volume, block height, and buy/sell direction. Especially useful for high-frequency strategies or price feed services.",
        "operationId": "mkt-dex-trades",
        "parameters": [
          {
            "description": "Name of the DEX",
            "example": "magiceden",
            "in": "path",
            "name": "dex",
            "required": true,
            "schema": {
              "default": "magiceden",
              "type": "string"
            }
          },
          {
            "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
            "example": "BTC-840000:28",
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "default": "BTC-840000:28",
              "type": "string"
            }
          },
          {
            "description": "Mempool mode",
            "example": "included",
            "in": "query",
            "name": "mempool",
            "schema": {
              "default": "excluded",
              "enum": [
                "included",
                "excluded",
                "only"
              ],
              "type": "string"
            }
          },
          {
            "description": "Start timestamp in Unix",
            "example": "1735689600",
            "in": "query",
            "name": "from",
            "schema": {
              "default": "1735689600",
              "type": "string"
            }
          },
          {
            "description": "End timestamp in Unix",
            "example": "1742428800",
            "in": "query",
            "name": "to",
            "schema": {
              "default": "1742428800",
              "type": "string"
            }
          },
          {
            "description": "Limit number of Runes returned (min: 1, max: 50000)",
            "example": 10000,
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 5000,
              "maximum": 50000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort by descending (desc) or ascending (asc)",
            "example": "desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.TradeList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Rune Trades for DEX",
        "tags": [
          "DEX"
        ]
      }
    },
    "/markets/runes": {
      "get": {
        "description": "Returns metadata for Rune assets registered and etched into the Bitcoin blockchain. This includes human-readable name, symbol, divisibility (decimals), and genesis transaction. Filtering by `rune_id` narrows the query to a specific asset.",
        "operationId": "mkt-dex",
        "parameters": [
          {
            "description": "Bitcoin Rune ID",
            "example": "840000:28",
            "in": "query",
            "name": "rune_id",
            "schema": {
              "default": "840000:28",
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "description": "Limit number of Runes returned (min: 1, max: 50000)",
            "example": 10000,
            "in": "query",
            "name": "limit",
            "schema": {
              "default": 5000,
              "maximum": 50000,
              "minimum": 1,
              "type": "integer"
            }
          },
          {
            "description": "Sort by descending (desc) or ascending (asc)",
            "example": "desc",
            "in": "query",
            "name": "sort",
            "schema": {
              "default": "desc",
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/models.RuneRegistryList"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Bad Request"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/bitcoin_api.APIError"
                }
              }
            },
            "description": "Server Error"
          }
        },
        "summary": "Rune Registry",
        "tags": [
          "DEX"
        ]
      }
    },
    "/esplora/address/{address}": {
      "get": {
        "summary": "Address",
        "description": "Returns details about an address. Available fields: address, chain_stats, and mempool_stats. chain_stats and mempool_stats each contain an object with tx_count, funded_txo_count, funded_txo_sum, spent_txo_count, and spent_txo_sum.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
            },
            "description": "Bitcoin address to query"
          }
        ],
        "responses": {
          "200": {
            "description": "Address information returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressInfo"
                }
              }
            }
          },
          "404": {
            "description": "Address not found"
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/esplora/address/{address}/txs": {
      "get": {
        "summary": "Address Transactions",
        "description": "Get transaction history for the specified address/scripthash, sorted with newest first. Returns up to 50 mempool transactions plus the first 25 confirmed transactions. You can request more confirmed transactions using an after_txid query parameter.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
            },
            "description": "The Bitcoin address to query."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions related to the address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address"
          },
          "404": {
            "description": "Address not found"
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/esplora/address/{address}/txs/chain": {
      "get": {
        "summary": "Address Transactions Chain",
        "description": "Get confirmed transaction history for the specified address/scripthash, sorted with newest first. Returns 25 transactions per page. More can be requested by specifying the last txid seen by the previous query.",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The Bitcoin address to query.",
            "schema": {
              "type": "string",
              "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A paginated list of confirmed transactions for the given address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address or txid"
          },
          "404": {
            "description": "Address not found"
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/esplora/address/{address}/txs/mempool": {
      "get": {
        "summary": "Address Transactions Mempool",
        "description": "Get unconfirmed transaction history for the specified address/scripthash. Returns up to 50 transactions (no paging).",
        "tags": [
          "Addresses"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
            },
            "description": "The Bitcoin address whose unconfirmed transactions should be retrieved."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of mempool transactions associated with the address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address format."
          },
          "404": {
            "description": "Address not found or no unconfirmed transactions."
          }
        }
      }
    },
    "/esplora/address/{address}/utxo": {
      "get": {
        "summary": "Address UTXOs",
        "description": "Get the list of unspent transaction outputs associated with the address/scripthash. Available fields: txid, vout, value, and status (with the status of the funding tx).",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "description": "The Bitcoin address to query.",
            "schema": {
              "type": "string",
              "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of UTXOs for the address.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Utxo1"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid address"
          },
          "404": {
            "description": "Address not found"
          }
        },
        "tags": [
          "Addresses"
        ]
      }
    },
    "/esplora/block/{hash}": {
      "get": {
        "summary": "Block",
        "description": "Returns details about a block.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            },
            "description": "The block hash to retrieve information for."
          }
        ],
        "responses": {
          "200": {
            "description": "Block metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Block"
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/header": {
      "get": {
        "summary": "Block Header",
        "description": "Returns the hex-encoded block header.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            },
            "description": "The hash of the block to retrieve the header for."
          }
        ],
        "responses": {
          "200": {
            "description": "Raw block header as hex",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockHeader",
                  "type": "string",
                  "example": "00000020e91f...2d1e4dbb65"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block hash"
          },
          "404": {
            "description": "Block not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/status": {
      "get": {
        "summary": "Block Status",
        "description": "Returns the confirmation status of a block. Available fields: in_best_chain (boolean, false for orphaned blocks), next_best (the hash of the next block, only available for blocks in the best chain).",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "description": "The block hash to query",
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Block status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockStatus"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block hash"
          },
          "404": {
            "description": "Block not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/txs/{start_index}": {
      "get": {
        "summary": "Get block transactions",
        "description": "Returns a list of transactions in the block (up to 25 transactions beginning at start_index). Transactions returned here do not have the status field, since all the transactions share the same block and confirmation status.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "description": "The block hash.",
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            }
          },
          {
            "name": "start_index",
            "in": "path",
            "required": true,
            "description": "Index to start fetching transactions from (pagination).",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of transactions in the block.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Block not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/txids": {
      "get": {
        "summary": "Block Transaction IDs",
        "description": "Returns a list of all txids in the block.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            },
            "description": "The hash of the block to query."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of transaction IDs in the block.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockTxids"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block hash."
          },
          "404": {
            "description": "Block not found."
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/txid/{index}": {
      "get": {
        "summary": "Block Transaction ID",
        "description": "Returns the transaction at index :index within the specified block.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "description": "The block hash.",
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "description": "The transaction index within the block.",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction ID at the specified index",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionId"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block hash or index"
          },
          "404": {
            "description": "Block or transaction not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block/{hash}/raw": {
      "get": {
        "summary": "Block Raw",
        "description": "Returns the raw block representation in binary.",
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "description": "The hash of the block",
            "schema": {
              "type": "string",
              "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Raw block data in binary format",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block hash"
          },
          "404": {
            "description": "Block not found"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/blocks/{start_height}": {
      "get": {
        "summary": "Blocks",
        "description": "Returns details on the past 10 blocks. If :startHeight is specified, the 10 blocks before (and including) :startHeight are returned.",
        "parameters": [
          {
            "name": "start_height",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The block height to start from."
          }
        ],
        "responses": {
          "200": {
            "description": "A list of 10 blocks starting from the given height",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Block"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid block height"
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/block-height/{height}": {
      "get": {
        "summary": "Block Height",
        "description": "Returns the hash of the block currently at :height.",
        "parameters": [
          {
            "name": "height",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 804000
            },
            "description": "The height of the block."
          }
        ],
        "responses": {
          "200": {
            "description": "Block hash as plain text.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                }
              }
            }
          },
          "400": {
            "description": "Invalid block height supplied."
          },
          "404": {
            "description": "Block not found for the given height."
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/blocks/tip/height": {
      "get": {
        "summary": "Block Tip Height",
        "description": "Returns the height of the last block.",
        "responses": {
          "200": {
            "description": "Block height of the latest block",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockHeight"
                }
              }
            }
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/blocks/tip/hash": {
      "get": {
        "summary": "Block Tip Hash",
        "description": "Returns the hash of the last block.",
        "responses": {
          "200": {
            "description": "Block hash string of the latest block",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BlockHash"
                }
              }
            }
          }
        },
        "tags": [
          "Blocks"
        ]
      }
    },
    "/esplora/mempool": {
      "get": {
        "summary": "Mempool",
        "description": "Returns current mempool backlog statistics.",
        "responses": {
          "200": {
            "description": "Aggregated mempool data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolStats"
                },
                "examples": {
                  "example": {
                    "value": {
                      "count": 8134,
                      "vsize": 3444604,
                      "total_fee": 29204625,
                      "fee_histogram": [
                        [
                          53.01,
                          102131
                        ],
                        [
                          38.56,
                          110990
                        ],
                        [
                          34.12,
                          138976
                        ],
                        [
                          24.34,
                          112619
                        ],
                        [
                          3.16,
                          246346
                        ],
                        [
                          2.92,
                          239701
                        ],
                        [
                          1.1,
                          775272
                        ]
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Mempool"
        ]
      }
    },
    "/esplora/mempool/txids": {
      "get": {
        "summary": "Mempool Transaction IDs",
        "description": "Get the full list of txids in the mempool as an array. The order of the txids is arbitrary and does not match bitcoind.",
        "responses": {
          "200": {
            "description": "List of transaction IDs currently in the mempool.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MempoolTxids"
                },
                "examples": {
                  "example": {
                    "value": [
                      "4d3c8f5b2378c9c1eaa228d594d2c693fae3e9f2b3e6b18344f973f1e5a3e13a",
                      "5a76bcb30e10a7d5f6a8f37d7df12a89f4e171cf0ecfe5bd5d22b53f5cc9f6cf"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Mempool"
        ]
      }
    },
    "/esplora/mempool/recent": {
      "get": {
        "summary": "Mempool Recent",
        "description": "Get a list of the last 10 transactions to enter the mempool. Each transaction object contains simplified overview data, with the following fields: txid, fee, vsize, and value.",
        "responses": {
          "200": {
            "description": "A list of recent mempool transactions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MempoolRecentTx"
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "txid": "f3c21f...",
                        "fee": 426,
                        "vsize": 141,
                        "value": 12500
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Mempool"
        ]
      }
    },
    "/esplora/tx/{txid}": {
      "get": {
        "summary": "Transaction",
        "description": "Returns details about a transaction. Available fields: txid, version, locktime, size, weight, fee, vin, vout, and status.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "The transaction ID to look up."
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/hex": {
      "get": {
        "summary": "Transaction Hex",
        "description": "Returns a transaction serialized as hex.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "description": "Transaction ID of the transaction to fetch.",
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Raw transaction hex string.",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionHex"
                },
                "example": "02000000000101ad0c...00000000"
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/merkleblock-proof": {
      "get": {
        "summary": "Transaction Merkleblock Proof",
        "description": "Returns a merkle inclusion proof for the transaction using bitcoind's merkleblock format.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "The transaction ID to retrieve the merkleblock proof for."
          }
        ],
        "responses": {
          "200": {
            "description": "Merkleblock proof in binary format (as raw hex string)",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary",
                  "description": "Raw merkleblock proof binary data"
                }
              }
            }
          },
          "400": {
            "description": "Invalid txid format"
          },
          "404": {
            "description": "Transaction not found or not confirmed"
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/merkle-proof": {
      "get": {
        "summary": "Transaction Merkle Proof",
        "description": "Returns a merkle inclusion proof for the transaction using Electrum's blockchain.transaction.get_merkle format.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "The transaction ID to get the merkle proof for."
          }
        ],
        "responses": {
          "200": {
            "description": "Merkle inclusion proof data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerkleProof"
                },
                "examples": {
                  "example": {
                    "value": {
                      "block_height": 776302,
                      "merkle": [
                        "4a5e1e4b...",
                        "b5b4e9f0..."
                      ],
                      "pos": 142
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found or not confirmed."
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/outspend/{vout}": {
      "get": {
        "summary": "Transaction Outspend",
        "description": "Returns the spending status of a transaction output. Available fields: spent (boolean), txid (optional), vin (optional), and status (optional, the status of the spending tx).",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "Transaction ID of the parent transaction."
          },
          {
            "name": "vout",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 0
            },
            "description": "The output index within the transaction."
          }
        ],
        "responses": {
          "200": {
            "description": "Spending status of the transaction output.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TxOutspend"
                },
                "examples": {
                  "spent": {
                    "value": {
                      "spent": true,
                      "txid": "abcdef123456...",
                      "vin": 1,
                      "status": {
                        "confirmed": true,
                        "block_height": 786000,
                        "block_hash": "0000000000000000000abc...",
                        "block_time": 1700000000
                      }
                    }
                  },
                  "unspent": {
                    "value": {
                      "spent": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction or output not found."
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/outspends": {
      "get": {
        "summary": "Transaction Outspends",
        "description": "Returns the spending status of all transaction outputs.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "description": "The transaction ID (txid) to query.",
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Spending status for each output in the transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Outspend"
                  }
                },
                "examples": {
                  "example": {
                    "value": [
                      {
                        "spent": true,
                        "txid": "1a2b3c...",
                        "vin": 0,
                        "status": {
                          "confirmed": true,
                          "block_height": 776300,
                          "block_hash": "0000000000000000000b4d0a...",
                          "block_time": 1686300000
                        }
                      },
                      {
                        "spent": false
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found."
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/raw": {
      "get": {
        "summary": "Transaction Raw",
        "description": "Returns a transaction as binary data.",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "The transaction ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Raw transaction hex string.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "0200000000010124..."
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx/{txid}/rbf": {
      "get": {
        "summary": "Transaction RBF Timeline",
        "description": "Returns the RBF tree timeline of a transaction.",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            },
            "description": "The transaction ID to trace RBF replacements for."
          }
        ],
        "responses": {
          "200": {
            "description": "RBF replacement timeline for the transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RbfReplacementRoot"
                },
                "examples": {
                  "example": {
                    "value": {
                      "replacements": {
                        "tx": {
                          "txid": "2e95ff9094df9f3650e3f2abc189250760162be89a88f9f2f23301c7cb14b8b4",
                          "fee": 1668,
                          "vsize": 276.75,
                          "value": 14849,
                          "rate": 4.8242,
                          "rbf": false,
                          "fullRbf": true
                        },
                        "time": 1703240261,
                        "fullRbf": true,
                        "replaces": []
                      },
                      "replaces": [
                        "3f4670463daadffed07d7a1060071b07f7e81a2566eca21d78bb513cbf21c82a",
                        "92f9b4f719d0ffc9035d3a9767d80c940cecbc656df2243bafd33f52b583ee92"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found or no RBF history available"
          }
        }
      }
    },
    "/esplora/tx/{txid}/status": {
      "get": {
        "summary": "Transaction Status",
        "description": "Returns the confirmation status of a transaction. Available fields: confirmed (boolean), block_height (optional), and block_hash (optional).",
        "parameters": [
          {
            "name": "txid",
            "in": "path",
            "required": true,
            "description": "Transaction ID to query.",
            "schema": {
              "type": "string",
              "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction confirmation status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionStatus"
                },
                "examples": {
                  "confirmed": {
                    "value": {
                      "confirmed": true,
                      "block_height": 776402,
                      "block_hash": "000000000000000000015fc7f9e5caa8b2e7cbfc7c8075c23f8c86f1aaed18e6"
                    }
                  },
                  "unconfirmed": {
                    "value": {
                      "confirmed": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found"
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    },
    "/esplora/tx": {
      "post": {
        "summary": "Transaction",
        "description": "Broadcast a raw transaction to the network. The transaction should be provided as hex in the request body. The txid will be returned on success.",
        "requestBody": {
          "description": "Hex-encoded raw transaction data.",
          "required": true,
          "content": {
            "text/plain": {
              "schema": {
                "type": "string",
                "example": "02000000000101c3..."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the transaction ID (txid) if successfully broadcast.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BroadcastResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "txid": "4d1b9a...."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction format or missing body."
          },
          "500": {
            "description": "Internal server error while processing the transaction."
          }
        },
        "tags": [
          "Transactions"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "tx_hash",
          "sat_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the satoshi activity.",
            "minimum": 0
          },
          "sat_activity": {
            "$ref": "#/components/schemas/SatActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the satoshi activity."
          }
        }
      },
      "ActivityKindByAddress": {
        "type": "string",
        "enum": [
          "self_transfer",
          "increase",
          "decrease"
        ]
      },
      "AddressAndRuneAmount": {
        "type": "object",
        "required": [
          "script_pubkey",
          "amount"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey.",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "description": "Amount of runes."
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey."
          }
        }
      },
      "AddressStatistics": {
        "type": "object",
        "required": [
          "total_txs",
          "total_utxos",
          "runes",
          "total_inscriptions",
          "sat_balance"
        ],
        "properties": {
          "runes": {
            "type": "boolean",
            "description": "Existence of runes controlled by the address."
          },
          "sat_balance": {
            "type": "string",
            "description": "Current satoshi balance controlled by the address."
          },
          "total_inscriptions": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of inscriptions currently controlled by the address.",
            "minimum": 0
          },
          "total_txs": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of transactions where the address controlled at least an input or an output.",
            "minimum": 0
          },
          "total_utxos": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of UTxOs (unspent outputs) controlled by the address.",
            "minimum": 0
          }
        }
      },
      "BlockInfo": {
        "type": "object",
        "required": [
          "height",
          "hash",
          "size",
          "weight_units",
          "unix_timestamp",
          "timestamp",
          "total_fees",
          "total_volume",
          "total_txs",
          "metaprotocols",
          "coinbase_tag"
        ],
        "properties": {
          "coinbase_tag": {
            "type": "string",
            "description": "Base64-encoding of script pubkey used in coinbase transaction input.",
            "example": "A8tlDQgvVmlhQlRDLyz6vm1tPXaDOuJgXZs6zuF9J7o+V55Fu/UWyF9S+hZG5d/z+c8QAAAAAAAAABDThC4BY8HxNM7fc9SQsQ8AAAAAAA=="
          },
          "hash": {
            "type": "string",
            "description": "Block hash.",
            "example": "0000000000000000000290db65621592a96224ecbe92ae22532a35dc40213471"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "example": 875075,
            "minimum": 0
          },
          "metaprotocols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metaprotocol"
            },
            "description": "Whether any of the transactions in the block involved metaprotocols."
          },
          "miner_name": {
            "type": "string",
            "description": "Miner name.",
            "example": "ViaBTC",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Block size in bytes.",
            "example": 1865672,
            "minimum": 0
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the block, as claimed by the miner, in UTC format.",
            "example": "2024-12-16 22:48:06"
          },
          "total_fees": {
            "type": "string",
            "description": "Total fees paid by all transactions in the block, in satoshis.",
            "example": "2110512"
          },
          "total_txs": {
            "type": "integer",
            "format": "int32",
            "description": "Total number of transactions.",
            "example": "1849",
            "minimum": 0
          },
          "total_volume": {
            "type": "string",
            "description": "Total number of satoshis that went through this block, minus fees.",
            "example": "240371600038"
          },
          "unix_timestamp": {
            "type": "integer",
            "format": "int32",
            "description": "The timestamp of the block, as claimed by the miner.",
            "example": 1734389286,
            "minimum": 0
          },
          "weight_units": {
            "type": "integer",
            "format": "int64",
            "description": "Number of weight units (WU) of the block.",
            "example": 3993329,
            "minimum": 0
          }
        }
      },
      "BlockSatsPerVb": {
        "type": "object",
        "description": "For transactions within a block, these are the lowest, median and highest\nsatoshis per virtual-byte values.",
        "required": [
          "min",
          "median",
          "max"
        ],
        "properties": {
          "max": {
            "type": "integer",
            "format": "int64",
            "description": "Highest sat/vB value of the transactions within the block",
            "example": 255,
            "minimum": 0
          },
          "median": {
            "type": "integer",
            "format": "int64",
            "description": "Median sat/vB value of the transactions within the block",
            "example": 15,
            "minimum": 0
          },
          "min": {
            "type": "integer",
            "format": "int64",
            "description": "Lowest sat/vB value of the transactions within the block",
            "example": 11,
            "minimum": 0
          }
        }
      },
      "Brc20Holder": {
        "type": "object",
        "required": [
          "script_pubkey",
          "balance"
        ],
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "string"
          },
          "script_pubkey": {
            "type": "string"
          }
        }
      },
      "Brc20Info": {
        "type": "object",
        "required": [
          "ticker",
          "ticker_hex",
          "deploy_inscription",
          "holders",
          "minted_supply",
          "terms"
        ],
        "properties": {
          "deploy_inscription": {
            "type": "string"
          },
          "holders": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "minted_supply": {
            "type": "string"
          },
          "terms": {
            "$ref": "#/components/schemas/Brc20Terms"
          },
          "ticker": {
            "type": "string"
          },
          "ticker_hex": {
            "type": "string"
          }
        }
      },
      "Brc20Terms": {
        "type": "object",
        "required": [
          "max",
          "limit",
          "dec",
          "self_mint"
        ],
        "properties": {
          "dec": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "limit": {
            "type": "string"
          },
          "max": {
            "type": "string"
          },
          "self_mint": {
            "type": "boolean"
          }
        }
      },
      "Brc20Ticker": {
        "type": "string"
      },
      "ChainTip": {
        "type": "object",
        "required": [
          "block_hash",
          "block_height"
        ],
        "properties": {
          "block_hash": {
            "type": "string",
            "description": "The hash of the block",
            "example": "0000000000000000000a7f3b7b6b6e1d9a18db65a3b4a3f4f3bcb2e1f1b2d3e7"
          },
          "block_height": {
            "type": "integer",
            "format": "int64",
            "description": "The height of the block in the blockchain",
            "example": 707000,
            "minimum": 0
          }
        }
      },
      "ContentBody": {
        "type": "object",
        "required": [
          "content_body_page",
          "total_length",
          "remaining_bytes"
        ],
        "properties": {
          "content_body_page": {
            "type": "string",
            "description": "Base64-encoded representation of a slice of the inscription content body. All types supported."
          },
          "remaining_bytes": {
            "type": "integer",
            "format": "int64",
            "description": "Number of bytes remaining in the inscription content body.",
            "minimum": 0
          },
          "total_length": {
            "type": "integer",
            "format": "int64",
            "description": "Number of bytes in entire inscription content body.",
            "minimum": 0
          }
        }
      },
      "DeprecatedRuneUtxoByAddress": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "satoshis",
          "confirmations",
          "height",
          "rune_amount"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "rune_amount": {
            "type": "string"
          },
          "satoshis": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "EstimatedBlock": {
        "type": "object",
        "required": [
          "block_height",
          "sats_per_vb"
        ],
        "properties": {
          "block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the estimated block",
            "example": "707001",
            "minimum": 0
          },
          "sats_per_vb": {
            "$ref": "#/components/schemas/BlockSatsPerVb"
          }
        }
      },
      "EtchAndPremine": {
        "type": "object",
        "required": [
          "rune_id"
        ],
        "properties": {
          "premined_amount": {
            "type": "string",
            "description": "Amount of premined runes.",
            "nullable": true
          },
          "rune_id": {
            "type": "string",
            "description": "Rune ID."
          }
        }
      },
      "FromInscriptionLocation": {
        "type": "object",
        "required": [
          "script_pubkey",
          "input_index",
          "sat_offset"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the input containing the inscription resides.",
            "nullable": true
          },
          "input_index": {
            "type": "integer",
            "format": "int32",
            "description": "Index of the input containing the inscription.",
            "minimum": 0
          },
          "sat_offset": {
            "type": "integer",
            "format": "int64",
            "description": "Offset of the inscribed satoshi within the input.",
            "minimum": 0
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the input containing the inscription resides."
          }
        }
      },
      "HistoricalSatBalanceByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "unix_timestamp",
          "timestamp",
          "sat_balance",
          "usd_balance"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "minimum": 0
          },
          "sat_balance": {
            "type": "string",
            "description": "Satoshi balance of the address at the end of this block."
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the block, as claimed by the miner, in UTC format."
          },
          "unix_timestamp": {
            "type": "integer",
            "format": "int32",
            "description": "The timestamp of the block, as claimed by the miner, in UNIX format.",
            "minimum": 0
          },
          "usd_balance": {
            "type": "string",
            "description": "USD balance if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block was mined."
          }
        }
      },
      "InscriptionActivity": {
        "type": "object",
        "required": [
          "self_transferred",
          "sent",
          "received"
        ],
        "properties": {
          "received": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByTx"
            },
            "description": "List of inscriptions which the script gained control over."
          },
          "self_transferred": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByTx"
            },
            "description": "List of inscriptions that were self-transferred in the transaction."
          },
          "sent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByTx"
            },
            "description": "List of inscriptions which the script lost control of."
          }
        }
      },
      "InscriptionActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "tx_hash",
          "inscription_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the inscription activity.",
            "minimum": 0
          },
          "inscription_activity": {
            "$ref": "#/components/schemas/InscriptionActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the inscription activity."
          }
        }
      },
      "InscriptionActivityByBlock": {
        "type": "object",
        "required": [
          "tx_hash",
          "inscription_id",
          "to"
        ],
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FromInscriptionLocation"
              }
            ],
            "nullable": true
          },
          "inscription_id": {
            "type": "string",
            "description": "String representation of the inscription ID, whose first coordinate is the reveal transaction hash, and the second coordinate is the index of inscription in the reveal transaction."
          },
          "to": {
            "$ref": "#/components/schemas/ToInscriptionLocation"
          },
          "tx_hash": {
            "type": "string",
            "description": "Transaction in which the activity occurred"
          }
        }
      },
      "InscriptionActivityByTx": {
        "type": "object",
        "required": [
          "inscription_id",
          "to"
        ],
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FromInscriptionLocation"
              }
            ],
            "nullable": true
          },
          "inscription_id": {
            "type": "string",
            "description": "String representation of the inscription ID, whose first coordinate is the reveal transaction hash, and the second coordinate is the index of inscription in the reveal transaction."
          },
          "to": {
            "$ref": "#/components/schemas/ToInscriptionLocation"
          }
        }
      },
      "InscriptionActivityKindByAddress": {
        "type": "string",
        "enum": [
          "self_transfer",
          "send",
          "receive"
        ]
      },
      "InscriptionAndOffset": {
        "type": "object",
        "required": [
          "offset",
          "inscription_id"
        ],
        "properties": {
          "inscription_id": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "InscriptionByAddress": {
        "type": "object",
        "required": [
          "inscription_id",
          "satoshis",
          "utxo_sat_offset",
          "utxo_txid",
          "utxo_vout",
          "utxo_block_height",
          "utxo_confirmations"
        ],
        "properties": {
          "inscription_id": {
            "type": "string",
            "description": "String representation of the inscription ID, whose first coordinate is the reveal\ntransaction hash, and the second coordinate is the index of inscription in the reveal\ntransaction."
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO containing the inscription."
          },
          "utxo_block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height of the UTxO containing the inscription.",
            "minimum": 0
          },
          "utxo_confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmations of the block where the UTxO containing the inscription was created.",
            "minimum": 0
          },
          "utxo_sat_offset": {
            "type": "integer",
            "format": "int64",
            "description": "Inscribed sat offset in the UTxO containing it.",
            "minimum": 0
          },
          "utxo_txid": {
            "type": "string",
            "description": "Transaction ID of the UTxO containing the inscription."
          },
          "utxo_vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO containing the inscription.",
            "minimum": 0
          }
        }
      },
      "InscriptionInfo": {
        "type": "object",
        "required": [
          "inscription_id",
          "created_at",
          "current_location",
          "content_length"
        ],
        "properties": {
          "collection_symbol": {
            "type": "string",
            "description": "Symbol of collection that the inscription belongs to.",
            "nullable": true
          },
          "content_body_preview": {
            "type": "string",
            "description": "Preview of inscription content body raw data. Max: 100 bytes.\nSupported types: \"text/plain\", \"text/plain;charset=utf-8\", \"application/json\".",
            "nullable": true
          },
          "content_length": {
            "type": "integer",
            "format": "int64",
            "description": "Length of entire inscription content body bytes array.",
            "minimum": 0
          },
          "content_type": {
            "type": "string",
            "description": "Type of the content body.",
            "nullable": true
          },
          "created_at": {
            "type": "integer",
            "format": "int64",
            "description": "Block height of the reveal transaction.",
            "minimum": 0
          },
          "current_location": {
            "$ref": "#/components/schemas/InscriptionLocation"
          },
          "inscription_id": {
            "type": "string",
            "description": "String representation of the inscription ID, whose first coordinate is the reveal\ntransaction hash, and the second coordinate is the index of inscription in the reveal\ntransaction."
          },
          "inscription_number": {
            "type": "integer",
            "format": "int64",
            "description": "Global inscription number.",
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "InscriptionLocation": {
        "type": "object",
        "required": [
          "script_pubkey",
          "utxo_sat_offset",
          "utxo_txid",
          "utxo_vout"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey currenty controlling the inscription.",
            "nullable": true
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey currently controlling the inscription."
          },
          "utxo_sat_offset": {
            "type": "integer",
            "format": "int64",
            "description": "Inscribed sat offset in the UTxO containing the inscription.",
            "minimum": 0
          },
          "utxo_txid": {
            "type": "string",
            "description": "Transaction ID of the UTxO containing the inscription."
          },
          "utxo_vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO containing the inscription.",
            "minimum": 0
          }
        }
      },
      "InscriptionTxKind": {
        "type": "string",
        "enum": [
          "inscribe",
          "transfer",
          "inscribe_and_spent_as_fee",
          "spent_as_fee"
        ]
      },
      "InvolvedTransaction": {
        "type": "object",
        "required": [
          "tx_hash",
          "height",
          "input",
          "output"
        ],
        "properties": {
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of the block which included the transaction",
            "minimum": 0
          },
          "input": {
            "type": "boolean",
            "description": "Address/pubkey controlled an input UTxO"
          },
          "output": {
            "type": "boolean",
            "description": "Address/pubkey controlled an output UTxO"
          },
          "tx_hash": {
            "type": "string",
            "description": "The transaction's txid"
          }
        }
      },
      "MagicEdenCollection": {
        "type": "object",
        "required": [
          "symbol",
          "name",
          "imageURI",
          "chain",
          "inscriptionIcon",
          "description",
          "supply",
          "twitterLink",
          "discordLink",
          "websiteLink",
          "min_inscription_number",
          "max_inscription_number",
          "createdAt",
          "labels"
        ],
        "properties": {
          "chain": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "discordLink": {
            "type": "string"
          },
          "imageURI": {
            "type": "string"
          },
          "inscriptionIcon": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "max_inscription_number": {
            "type": "string"
          },
          "min_inscription_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "supply": {},
          "symbol": {
            "type": "string"
          },
          "twitterLink": {
            "type": "string"
          },
          "websiteLink": {
            "type": "string"
          }
        }
      },
      "MagicEdenCollectionStats": {
        "type": "object",
        "required": [
          "totalVolume",
          "owners",
          "supply",
          "floorPrice",
          "totalListed",
          "pendingTransactions",
          "inscriptionNumberMin",
          "inscriptionNumberMax",
          "symbol"
        ],
        "properties": {
          "floorPrice": {
            "type": "string"
          },
          "inscriptionNumberMax": {
            "type": "string"
          },
          "inscriptionNumberMin": {
            "type": "string"
          },
          "owners": {
            "type": "string"
          },
          "pendingTransactions": {
            "type": "string"
          },
          "supply": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "totalListed": {
            "type": "string"
          },
          "totalVolume": {
            "type": "string"
          }
        }
      },
      "MagicEdenRuneTrades": {
        "type": "object",
        "required": [
          "block_height",
          "trade_index",
          "tx_hash",
          "trades"
        ],
        "properties": {
          "block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "minimum": 0
          },
          "mempool_protected": {
            "type": "boolean",
            "description": "Whether the tx was mempool-protected.",
            "nullable": true
          },
          "service_fee": {
            "type": "integer",
            "format": "int64",
            "description": "Service fees for this trade.",
            "nullable": true,
            "minimum": 0
          },
          "trade_index": {
            "type": "integer",
            "format": "int32",
            "description": "Trade tx index in the block.",
            "minimum": 0
          },
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Trade"
            },
            "description": "List of trades in the tx."
          },
          "tx_hash": {
            "type": "string",
            "description": "Transaction hash."
          }
        }
      },
      "MagicEdenToken": {
        "type": "object",
        "required": [
          "id",
          "contentURI",
          "contentType",
          "contentPreviewURI",
          "genesisTransaction",
          "genesisTransactionBlockTime",
          "genesisTransactionBlockHash",
          "genesisTransactionBlockHeight",
          "inscriptionNumber",
          "chain",
          "meta",
          "location",
          "locationBlockHeight",
          "locationBlockTime",
          "locationBlockHash",
          "output",
          "outputValue",
          "owner",
          "listed",
          "listedAt",
          "listedPrice",
          "listedMakerFeeBp",
          "listedSellerReceiveAddress",
          "listedForMint",
          "collectionSymbol",
          "collection",
          "itemType",
          "sat",
          "satName",
          "satRarity",
          "satBlockHeight",
          "satBlockTime",
          "satributes",
          "displayName",
          "lastSalePrice",
          "updatedAt",
          "sacAddress"
        ],
        "properties": {
          "chain": {
            "type": "string"
          },
          "collection": {
            "$ref": "#/components/schemas/MagicEdenTokenCollection"
          },
          "collectionSymbol": {
            "type": "string"
          },
          "contentPreviewURI": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "contentURI": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "genesisTransaction": {
            "type": "string"
          },
          "genesisTransactionBlockHash": {
            "type": "string"
          },
          "genesisTransactionBlockHeight": {
            "type": "integer",
            "format": "int64"
          },
          "genesisTransactionBlockTime": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "inscriptionNumber": {
            "type": "integer",
            "format": "int64"
          },
          "itemType": {
            "type": "string"
          },
          "lastSalePrice": {
            "type": "integer",
            "format": "int64"
          },
          "listed": {
            "type": "boolean"
          },
          "listedAt": {
            "type": "string"
          },
          "listedForMint": {
            "type": "boolean"
          },
          "listedMakerFeeBp": {
            "type": "integer",
            "format": "int32"
          },
          "listedPrice": {
            "type": "integer",
            "format": "int64"
          },
          "listedSellerReceiveAddress": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "locationBlockHash": {
            "type": "string"
          },
          "locationBlockHeight": {
            "type": "integer",
            "format": "int64"
          },
          "locationBlockTime": {
            "type": "string"
          },
          "meta": {
            "$ref": "#/components/schemas/MagicEdenTokenMeta"
          },
          "output": {
            "type": "string"
          },
          "outputValue": {
            "type": "integer",
            "format": "int64"
          },
          "owner": {
            "type": "string"
          },
          "sacAddress": {
            "type": "string"
          },
          "sat": {
            "type": "integer",
            "format": "int64"
          },
          "satBlockHeight": {
            "type": "integer",
            "format": "int64"
          },
          "satBlockTime": {
            "type": "string"
          },
          "satName": {
            "type": "string"
          },
          "satRarity": {
            "type": "string"
          },
          "satributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "MagicEdenTokenCollection": {
        "type": "object",
        "required": [
          "symbol",
          "name",
          "imageURI",
          "chain",
          "inscriptionIcon",
          "description",
          "supply",
          "twitterLink",
          "discordLink",
          "websiteLink",
          "createdAt",
          "overrideContentType",
          "disableRichThumbnailGeneration",
          "labels",
          "creatorTipsAddress",
          "enableCollectionOffer"
        ],
        "properties": {
          "chain": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "creatorTipsAddress": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "disableRichThumbnailGeneration": {
            "type": "boolean"
          },
          "discordLink": {
            "type": "string"
          },
          "enableCollectionOffer": {
            "type": "boolean"
          },
          "imageURI": {
            "type": "string"
          },
          "inscriptionIcon": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "overrideContentType": {
            "type": "string"
          },
          "supply": {
            "type": "integer",
            "format": "int64"
          },
          "symbol": {
            "type": "string"
          },
          "twitterLink": {
            "type": "string"
          },
          "websiteLink": {
            "type": "string"
          }
        }
      },
      "MagicEdenTokenMeta": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MagicEdenTokenMetaAttribute"
            },
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        }
      },
      "MagicEdenTokenMetaAttribute": {
        "type": "object",
        "required": [
          "value",
          "trait_type"
        ],
        "properties": {
          "trait_type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "MempoolLastUpdated": {
        "type": "object",
        "required": [
          "chain_tip",
          "estimated_blocks"
        ],
        "properties": {
          "chain_tip": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "estimated_blocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstimatedBlock"
            },
            "description": "Information about any estimated blocks from the mempool that were indexed in addition to the mainchain"
          },
          "mempool_timestamp": {
            "type": "string",
            "description": "Timestamp of the indexed mempool snapshot, if any estimated blocks from the mempool have been indexed",
            "nullable": true
          }
        }
      },
      "Metaprotocol": {
        "type": "string",
        "enum": [
          "inscriptions",
          "runes",
          "brc20"
        ]
      },
      "OrderBy": {
        "type": "string",
        "default": "height",
        "enum": [
          "height",
          "amount"
        ]
      },
      "OrderParam": {
        "type": "string",
        "default": "asc",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "PaginatedActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedBrc20Holder": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Brc20Holder"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedBrc20Ticker": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Brc20Ticker"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedContentBody": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ContentBody"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedDeprecatedRuneUtxoByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeprecatedRuneUtxoByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedHistoricalSatBalanceByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HistoricalSatBalanceByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInscriptionActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInscriptionActivityByBlock": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByBlock"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInscriptionActivityByTx": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionActivityByTx"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInscriptionByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInscriptionsByCollectionSymbol": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedInvolvedTransaction": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvolvedTransaction"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedMagicEdenRuneTrades": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MagicEdenRuneTrades"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedRuneActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneActivityByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedRuneHolder": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneHolder"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedRuneIdAndName": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneIdAndName"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedRuneUtxo": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneUtxo"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedRuneUtxoByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneUtxoByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedTransferInscriptionByAddress": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferInscriptionByAddress"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedTxByInscription": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxByInscription"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedTxsByBlock": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxByBlock"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedTxsByRune": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxByRune"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedUtxo": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Utxo"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RuneActivity": {
        "type": "object",
        "required": [
          "self_transfers",
          "increased_balances",
          "decreased_balances"
        ],
        "properties": {
          "decreased_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            },
            "description": "List of runes and amounts, corresponding to decreased balances for this address."
          },
          "etched_rune": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EtchAndPremine"
              }
            ],
            "nullable": true
          },
          "increased_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            },
            "description": "List of runes and amounts, corresponding to increased balances for this address."
          },
          "minted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RuneAndAmount"
              }
            ],
            "nullable": true
          },
          "self_transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            },
            "description": "List of runes that were self-transferred."
          }
        }
      },
      "RuneActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "tx_hash",
          "rune_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the rune activity.",
            "minimum": 0
          },
          "rune_activity": {
            "$ref": "#/components/schemas/RuneActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the rune activity."
          }
        }
      },
      "RuneActivityKindByAddress": {
        "type": "string",
        "enum": [
          "self_transfer",
          "increase",
          "decrease"
        ]
      },
      "RuneAndAmount": {
        "type": "object",
        "required": [
          "rune_id",
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "rune_id": {
            "type": "string"
          }
        }
      },
      "RuneHolder": {
        "type": "object",
        "required": [
          "script_pubkey",
          "balance"
        ],
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "string"
          },
          "script_pubkey": {
            "type": "string"
          }
        }
      },
      "RuneIdAndName": {
        "type": "object",
        "required": [
          "id",
          "spaced_name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "spaced_name": {
            "type": "string"
          }
        }
      },
      "RuneInfo": {
        "type": "object",
        "required": [
          "id",
          "etching_cenotaph",
          "etching_tx",
          "etching_height",
          "name",
          "spaced_name",
          "divisibility",
          "terms",
          "max_supply",
          "circulating_supply",
          "mints",
          "unique_holders"
        ],
        "properties": {
          "circulating_supply": {
            "type": "string"
          },
          "divisibility": {
            "type": "integer",
            "format": "int32",
            "description": "If no divisibility was specified, then this equals 0",
            "minimum": 0
          },
          "etching_cenotaph": {
            "type": "boolean"
          },
          "etching_height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "etching_tx": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "max_supply": {
            "type": "string"
          },
          "mints": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "name": {
            "type": "string"
          },
          "premine": {
            "type": "string",
            "nullable": true
          },
          "spaced_name": {
            "type": "string"
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "terms": {
            "$ref": "#/components/schemas/Terms"
          },
          "unique_holders": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "RuneUtxo": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis",
          "confirmations",
          "height",
          "rune_amount"
        ],
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "rune_amount": {
            "type": "string"
          },
          "satoshis": {
            "type": "string"
          },
          "script_pubkey": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "RuneUtxoByAddress": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "satoshis",
          "confirmations",
          "height",
          "runes"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "runes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            }
          },
          "satoshis": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "SatActivity": {
        "type": "object",
        "required": [
          "kind",
          "amount"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "description": "Amount of satoshis involved in the activity."
          },
          "kind": {
            "$ref": "#/components/schemas/ActivityKindByAddress"
          }
        }
      },
      "Terms": {
        "type": "object",
        "properties": {
          "amount_per_mint": {
            "type": "string",
            "nullable": true
          },
          "end_height": {
            "type": "string",
            "nullable": true
          },
          "end_offset": {
            "type": "string",
            "nullable": true
          },
          "mint_txs_cap": {
            "type": "string",
            "nullable": true
          },
          "start_height": {
            "type": "string",
            "nullable": true
          },
          "start_offset": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TimestampedAddressStatistics": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AddressStatistics"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedBlock": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/BlockInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedBrc20Info": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Brc20Info"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedBrc20Quantities": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedCollectionMetadataByInscription": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MagicEdenCollection"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedCollectionMetadataBySymbol": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MagicEdenCollection"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedCollectionStatsBySymbol": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MagicEdenCollectionStats"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedInscriptionInfo": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/InscriptionInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedRuneInfo": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RuneInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedRuneQuantities": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedSatoshis": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "type": "string"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedTokenMetadataByInscription": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MagicEdenToken"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedTxInfo": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TxInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedTxInfoMetaprotocols": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TxInfoMetaprotocols"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "TimestampedTxOutMetaprotocols": {
        "type": "object",
        "required": [
          "data",
          "last_updated"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TxOutMetaprotocols"
          },
          "last_updated": {
            "$ref": "#/components/schemas/ChainTip"
          }
        }
      },
      "ToInscriptionLocation": {
        "type": "object",
        "required": [
          "script_pubkey",
          "output_vout",
          "sat_offset",
          "output_txid"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the output containing the inscription resides.",
            "nullable": true
          },
          "output_txid": {
            "type": "string",
            "description": "Hash of tx producing the output containing the inscription. If this is the hash of the coinbase tx of the block, then the inscription was spent as fee in a tx in the block and therefore sent to the output of the coinbase tx controlled by the block miner."
          },
          "output_vout": {
            "type": "integer",
            "format": "int32",
            "description": "Index of the output containing the inscription.",
            "minimum": 0
          },
          "sat_offset": {
            "type": "integer",
            "format": "int64",
            "description": "Offset of the inscribed satoshi within the output.",
            "minimum": 0
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the output containing the inscription resides."
          }
        }
      },
      "Trade": {
        "type": "object",
        "required": [
          "seller_script_pubkey",
          "traded_rune_id",
          "traded_amount",
          "buyer_script_pubkey",
          "price"
        ],
        "properties": {
          "buyer_address": {
            "type": "string",
            "description": "Buyer address.",
            "nullable": true
          },
          "buyer_script_pubkey": {
            "type": "string",
            "description": "Buyer script pubkey."
          },
          "price": {
            "type": "string",
            "description": "Price for the runes exchanged in this trade, in sats."
          },
          "sell_tx": {
            "type": "boolean",
            "description": "Whether this trade was taken from a \"sell\" or a \"buy\" tx.",
            "nullable": true
          },
          "seller_address": {
            "type": "string",
            "description": "Seller address.",
            "nullable": true
          },
          "seller_script_pubkey": {
            "type": "string",
            "description": "Seller script pubkey."
          },
          "traded_amount": {
            "type": "string",
            "description": "Amount of runes exchanged in this trade."
          },
          "traded_rune_id": {
            "type": "string",
            "description": "Traded rune ID, in (etching block, etching tx) format."
          }
        }
      },
      "TransferInscriptionByAddress": {
        "type": "object",
        "required": [
          "ticker",
          "inscription_id",
          "token_amount",
          "satoshis",
          "utxo_txid",
          "utxo_vout",
          "utxo_sat_offset",
          "utxo_block_height",
          "utxo_confirmations"
        ],
        "properties": {
          "inscription_id": {
            "type": "string",
            "description": "String representation of the inscription ID, whose first coordinate is the reveal transaction hash, and the second coordinate is the index of inscription in the reveal transaction."
          },
          "satoshis": {
            "type": "string",
            "description": "Number of sats locked in the UTxO."
          },
          "ticker": {
            "type": "string"
          },
          "token_amount": {
            "type": "string",
            "description": "Number of tokens locked in the UTxO."
          },
          "utxo_block_height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height of the UTxO containing the inscription.",
            "minimum": 0
          },
          "utxo_confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmations of the block where the UTxO containing the inscription was created.",
            "minimum": 0
          },
          "utxo_sat_offset": {
            "type": "integer",
            "format": "int64",
            "description": "Offset of inscribed sat in the UTxO containing it.",
            "minimum": 0
          },
          "utxo_txid": {
            "type": "string",
            "description": "Transaction ID of the UTxO containing the inscription."
          },
          "utxo_vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO containing the inscription.",
            "minimum": 0
          }
        }
      },
      "TxByBlock": {
        "type": "object",
        "required": [
          "tx_hash",
          "tx_index",
          "volume",
          "fees",
          "sats_per_vb",
          "metaprotocols",
          "total_inputs",
          "inputs",
          "total_outputs",
          "outputs"
        ],
        "properties": {
          "fees": {
            "type": "string",
            "description": "Fees paid to the miner.",
            "example": "2504"
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxInByBlock"
            },
            "description": "Summary of the inputs of the transaction. Maximum 10 returned inputs."
          },
          "metaprotocols": {
            "type": "string",
            "description": "List of supported metaprotocols involved in one or more transactions within the block.",
            "example": "[\"inscriptions\", \"runes\"]"
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxOutByBlock"
            },
            "description": "Summary of the outputs of the transaction. Maximum 10 returned outputs."
          },
          "sats_per_vb": {
            "type": "integer",
            "format": "int64",
            "description": "sats per vB of the transaction.",
            "example": 15,
            "minimum": 0
          },
          "total_inputs": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of inputs. No inputs means this is the coinbase transaction.",
            "example": 5,
            "minimum": 0
          },
          "total_outputs": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of outputs.",
            "example": 2,
            "minimum": 0
          },
          "tx_hash": {
            "type": "string",
            "description": "Transaction hash.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5"
          },
          "tx_index": {
            "type": "integer",
            "format": "int32",
            "description": "Transaction index in block.",
            "example": 0,
            "minimum": 0
          },
          "volume": {
            "type": "string",
            "description": "Total number of satoshis that went through this transaction, minus fees.",
            "example": "12345678"
          }
        }
      },
      "TxByInscription": {
        "type": "object",
        "required": [
          "height",
          "tx_index",
          "tx_hash",
          "type",
          "to"
        ],
        "properties": {
          "from": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FromInscriptionLocation"
              }
            ],
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing transaction that the inscription took part in.",
            "minimum": 0
          },
          "to": {
            "$ref": "#/components/schemas/ToInscriptionLocation"
          },
          "tx_hash": {
            "type": "string",
            "description": "Transaction hash."
          },
          "tx_index": {
            "type": "integer",
            "format": "int32",
            "description": "Index of transaction (in block) that the inscription took part in.",
            "minimum": 0
          },
          "type": {
            "$ref": "#/components/schemas/InscriptionTxKind"
          }
        }
      },
      "TxByRune": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "tx_hash",
          "etching_tx",
          "self_transfers",
          "senders",
          "receivers"
        ],
        "properties": {
          "burned": {
            "type": "string",
            "description": "Number of runes burned in this transaction.",
            "nullable": true
          },
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "etching_tx": {
            "type": "boolean",
            "description": "Whether this is the etching transaction of the rune."
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the rune activity.",
            "minimum": 0
          },
          "minted": {
            "type": "string",
            "description": "Number of runes minted in this transaction.",
            "nullable": true
          },
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressAndRuneAmount"
            },
            "description": "List of addresses that see their rune balances increase after the tx, and the corresponding amount."
          },
          "self_transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressAndRuneAmount"
            },
            "description": "List of addresses and the corresponding amount, of addresses whose rune balances do not change after the tx, as they are only involved in self-transfers."
          },
          "senders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressAndRuneAmount"
            },
            "description": "List of addresses that see their rune balances decrease after the tx, and the corresponding amount."
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the rune activity."
          }
        }
      },
      "TxIn": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the input resides.",
            "example": "bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr",
            "nullable": true
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the input resides.",
            "example": "5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596"
          },
          "txid": {
            "type": "string",
            "description": "Transaction hash of the UTxO.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO.",
            "example": 0,
            "minimum": 0
          }
        }
      },
      "TxInByBlock": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis",
          "inscriptions",
          "runes"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the input resides.",
            "example": "bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr",
            "nullable": true
          },
          "inscriptions": {
            "type": "integer",
            "description": "Number of inscriptions in the UTxO.",
            "example": 1234567,
            "minimum": 0
          },
          "runes": {
            "type": "integer",
            "description": "Number of rune kinds in the UTxO.",
            "example": 1234567,
            "minimum": 0
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the input resides.",
            "example": "5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596"
          },
          "txid": {
            "type": "string",
            "description": "Transaction hash of the UTxO.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO.",
            "example": 0,
            "minimum": 0
          }
        }
      },
      "TxInMetaprotocols": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis",
          "inscriptions",
          "runes"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the input resides.",
            "example": "bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr",
            "nullable": true
          },
          "inscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionAndOffset"
            },
            "description": "List of inscription IDs and their offsets in this input."
          },
          "runes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            },
            "description": "List of rune IDs and their amount in this input."
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the input resides.",
            "example": "5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596"
          },
          "txid": {
            "type": "string",
            "description": "Transaction hash of the UTxO.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO.",
            "example": 0,
            "minimum": 0
          }
        }
      },
      "TxInfo": {
        "type": "object",
        "required": [
          "height",
          "block_hash",
          "confirmations",
          "unix_timestamp",
          "timestamp",
          "tx_index",
          "volume",
          "fees",
          "sats_per_vb",
          "metaprotocols",
          "inputs",
          "outputs"
        ],
        "properties": {
          "block_hash": {
            "type": "string",
            "description": "Block hash.",
            "example": "0000000000000000000290db65621592a96224ecbe92ae22532a35dc40213471"
          },
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmations of the block.",
            "example": 3,
            "minimum": 0
          },
          "fees": {
            "type": "string",
            "description": "Fees paid to the miner.",
            "example": "2504"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "example": 875075,
            "minimum": 0
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxIn"
            },
            "description": "List of inputs, in the same order as the transaction."
          },
          "metaprotocols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metaprotocol"
            },
            "description": "List of supported metaprotocols involved in the transaction. Runes: etching, mint or edicts. Inscriptions: create or transfer. BRC-20 tokens: deploy, mint, transfer init or transfer."
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxOut"
            },
            "description": "List of outputs, in the same order as the transaction."
          },
          "sats_per_vb": {
            "type": "integer",
            "format": "int64",
            "description": "sats per vB of the transaction.",
            "example": 15,
            "minimum": 0
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the block, as claimed by the miner, in UTC format.",
            "example": "2024-12-16 22:48:06"
          },
          "tx_index": {
            "type": "integer",
            "format": "int32",
            "description": "Index of transaction in block.",
            "example": 123,
            "minimum": 0
          },
          "unix_timestamp": {
            "type": "integer",
            "format": "int32",
            "description": "The timestamp of the block, as claimed by the miner.",
            "example": 1734389286,
            "minimum": 0
          },
          "volume": {
            "type": "string",
            "description": "Total number of satoshis that went through this transaction, minus fees.",
            "example": "12345678"
          }
        }
      },
      "TxInfoMetaprotocols": {
        "type": "object",
        "required": [
          "height",
          "block_hash",
          "confirmations",
          "unix_timestamp",
          "timestamp",
          "tx_index",
          "volume",
          "fees",
          "sats_per_vb",
          "metaprotocols",
          "inputs",
          "outputs"
        ],
        "properties": {
          "block_hash": {
            "type": "string",
            "description": "Block hash.",
            "example": "0000000000000000000290db65621592a96224ecbe92ae22532a35dc40213471"
          },
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmations of the block.",
            "example": 3,
            "minimum": 0
          },
          "fees": {
            "type": "string",
            "description": "Fees paid to the miner.",
            "example": "2504"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "example": 875075,
            "minimum": 0
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxInMetaprotocols"
            },
            "description": "List of inputs, in the same order as the transaction."
          },
          "metaprotocols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metaprotocol"
            },
            "description": "Whether any of the transactions in the block involved metaprotocols."
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxOutMetaprotocols"
            },
            "description": "List of outputs, in the same order as the transaction."
          },
          "sats_per_vb": {
            "type": "integer",
            "format": "int64",
            "description": "sats per vB of the transaction.",
            "example": 15,
            "minimum": 0
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the block, as claimed by the miner, in UTC format.",
            "example": "2024-12-16 22:48:06"
          },
          "tx_index": {
            "type": "integer",
            "format": "int32",
            "description": "Index of transaction in block.",
            "example": 123,
            "minimum": 0
          },
          "unix_timestamp": {
            "type": "integer",
            "format": "int32",
            "description": "The timestamp of the block, as claimed by the miner.",
            "example": 1734389286,
            "minimum": 0
          },
          "volume": {
            "type": "string",
            "description": "Total number of satoshis that went through this transaction, minus fees.",
            "example": "12345678"
          }
        }
      },
      "TxOut": {
        "type": "object",
        "required": [
          "script_pubkey",
          "satoshis"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the output containing the inscription resides.",
            "example": "bc1ppth27qnr74qhusy9pmcyeaelgvsfky6qzquv9nf56gqmte59vfhqwkqguh",
            "nullable": true
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the output containing the inscription resides.",
            "example": "51200aeeaf0263f5417e40850ef04cf73f43209b13401038c2cd34d201b5e685626e"
          },
          "spending_tx": {
            "type": "string",
            "description": "If this output is known to have been spent, hash of the transaction that spent it.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5",
            "nullable": true
          }
        }
      },
      "TxOutByBlock": {
        "type": "object",
        "required": [
          "vout",
          "script_pubkey",
          "satoshis",
          "inscriptions",
          "runes"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the input resides.",
            "example": "bc1p5u4y8vdhn46adxhfv5scfv4c8myykw6r5uyzlavm42k4wgjewktq7xqcyr",
            "nullable": true
          },
          "inscriptions": {
            "type": "integer",
            "description": "Number of inscriptions in the UTxO.",
            "example": 1234567,
            "minimum": 0
          },
          "runes": {
            "type": "integer",
            "description": "Number of rune kinds in the UTxO.",
            "example": 1234567,
            "minimum": 0
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the input resides.",
            "example": "5120a72a43b1b79d75d69ae9652184b2b83ec84b3b43a7082ff59baaad5722597596"
          },
          "spending_tx": {
            "type": "string",
            "description": "If this output is known to have been spent, hash of the transaction that spent it.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5",
            "nullable": true
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "description": "Output index of the UTxO.",
            "example": 0,
            "minimum": 0
          }
        }
      },
      "TxOutMetaprotocols": {
        "type": "object",
        "required": [
          "script_pubkey",
          "satoshis",
          "inscriptions",
          "runes"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address-encoding of the script pubkey at which the output containing the inscription resides.",
            "example": "bc1ppth27qnr74qhusy9pmcyeaelgvsfky6qzquv9nf56gqmte59vfhqwkqguh",
            "nullable": true
          },
          "inscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionAndOffset"
            },
            "description": "List of inscription IDs and their offsets in this input."
          },
          "runes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            },
            "description": "List of rune IDs and their amount in this input."
          },
          "satoshis": {
            "type": "string",
            "description": "Total number of satoshis in the UTxO.",
            "example": "1234567"
          },
          "script_pubkey": {
            "type": "string",
            "description": "Script pubkey at which the output containing the inscription resides.",
            "example": "51200aeeaf0263f5417e40850ef04cf73f43209b13401038c2cd34d201b5e685626e"
          },
          "spending_tx": {
            "type": "string",
            "description": "If this output is known to have been spent, hash of the transaction that spent it.",
            "example": "2ca28d42583fc5bace84fe024d3697969e06dd1cf769a2141286825b81773fd5",
            "nullable": true
          }
        }
      },
      "Utxo": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis",
          "confirmations",
          "height",
          "runes",
          "inscriptions"
        ],
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "inscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionAndOffset"
            }
          },
          "runes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            }
          },
          "satoshis": {
            "type": "string"
          },
          "script_pubkey": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "MempoolPaginatedRuneHolder": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneHolder"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolPaginatedRuneUtxoByAddress": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneUtxoByAddress"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolPaginatedUtxo": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MempoolUtxo"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolTimestampedFeeRates": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EstimatedBlock"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "MempoolTimestampedRuneQuantities": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "MempoolTimestampedSatoshis": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "string"
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "MempoolTimestampedTxInfoMetaprotocols": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/MempoolTxInfoMetaprotocols"
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "MempoolTimestampedTxOutMetaprotocols": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TxOutMetaprotocols"
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "MempoolTxInfoMetaprotocols": {
        "type": "object",
        "required": [
          "height",
          "volume",
          "fees",
          "sats_per_vb",
          "metaprotocols",
          "inputs",
          "outputs"
        ],
        "properties": {
          "fees": {
            "type": "string",
            "description": "Fees paid to the miner.",
            "example": "2504"
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Block height.",
            "example": 875075,
            "minimum": 0
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxInMetaprotocols"
            },
            "description": "List of inputs, in the same order as the transaction."
          },
          "metaprotocols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metaprotocol"
            },
            "description": "Whether any of the transactions in the block involved metaprotocols."
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TxOutMetaprotocols"
            },
            "description": "List of outputs, in the same order as the transaction."
          },
          "sats_per_vb": {
            "type": "integer",
            "format": "int64",
            "description": "sats per vB of the transaction.",
            "example": 15,
            "minimum": 0
          },
          "volume": {
            "type": "string",
            "description": "Total number of satoshis that went through this transaction, minus fees.",
            "example": "12345678"
          }
        }
      },
      "MempoolUtxo": {
        "type": "object",
        "required": [
          "txid",
          "vout",
          "script_pubkey",
          "satoshis",
          "height",
          "mempool",
          "runes",
          "inscriptions"
        ],
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "inscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InscriptionAndOffset"
            }
          },
          "mempool": {
            "type": "boolean"
          },
          "runes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuneAndAmount"
            }
          },
          "satoshis": {
            "type": "string"
          },
          "script_pubkey": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "vout": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "MempoolWalletPaginatedActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletActivityByAddress"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolWalletPaginatedActivityByAddressWithMetaprotocols": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletActivityByAddressWithMetaprotocols"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolWalletPaginatedInscriptionActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletInscriptionActivityByAddress"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolWalletPaginatedRuneActivityByAddress": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletRuneActivityByAddress"
            }
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          },
          "next_cursor": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MempoolWalletTimestampedAddressStatistics": {
        "type": "object",
        "required": [
          "data",
          "indexer_info"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/WalletAddressStatistics"
          },
          "indexer_info": {
            "$ref": "#/components/schemas/MempoolLastUpdated"
          }
        }
      },
      "PendingAddressStatistics": {
        "type": "object",
        "required": [
          "txs",
          "utxos",
          "sat_balance",
          "usd_balance"
        ],
        "properties": {
          "sat_balance": {
            "type": "string",
            "description": "Estimated difference in sat balance between mempool and confirmed data."
          },
          "txs": {
            "type": "integer",
            "format": "int64",
            "description": "Estimated number of new txs from the mempool where the address controls at least an input or an output.",
            "minimum": 0
          },
          "usd_balance": {
            "type": "string",
            "description": "Estimated USD balance difference if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
          },
          "utxos": {
            "type": "integer",
            "format": "int64",
            "description": "Estimated difference in number of UTxOs between mempool and confirmed data."
          }
        }
      },
      "WalletActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "mempool",
          "tx_hash",
          "sat_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the satoshi activity.",
            "minimum": 0
          },
          "mempool": {
            "type": "boolean",
            "description": "Whether the data is pending (true) or confirmed (false)."
          },
          "sat_activity": {
            "$ref": "#/components/schemas/WalletSatActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the satoshi activity."
          }
        }
      },
      "WalletActivityByAddressWithMetaprotocols": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "mempool",
          "tx_hash",
          "sat_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the satoshi activity.",
            "minimum": 0
          },
          "inscription_activity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InscriptionActivity"
              }
            ],
            "nullable": true
          },
          "mempool": {
            "type": "boolean",
            "description": "Whether the data is pending (true) or confirmed (false)."
          },
          "rune_activity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WalletRuneActivity"
              }
            ],
            "nullable": true
          },
          "sat_activity": {
            "$ref": "#/components/schemas/WalletSatActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the satoshi activity."
          }
        }
      },
      "WalletAddressStatistics": {
        "type": "object",
        "required": [
          "total_txs",
          "total_utxos",
          "runes",
          "total_inscriptions",
          "sat_balance",
          "usd_balance",
          "pending"
        ],
        "properties": {
          "pending": {
            "$ref": "#/components/schemas/PendingAddressStatistics"
          },
          "runes": {
            "type": "boolean",
            "description": "Existence of runes controlled by the address."
          },
          "sat_balance": {
            "type": "string",
            "description": "Current satoshi balance controlled by the address."
          },
          "total_inscriptions": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of inscriptions currently controlled by the address.",
            "minimum": 0
          },
          "total_txs": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of transactions where the address controlled at least an input or an output.",
            "minimum": 0
          },
          "total_utxos": {
            "type": "integer",
            "format": "int64",
            "description": "Total number of UTxOs (unspent outputs) controlled by the address.",
            "minimum": 0
          },
          "usd_balance": {
            "type": "string",
            "description": "USD balance if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
          }
        }
      },
      "WalletInscriptionActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "mempool",
          "tx_hash",
          "inscription_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the inscription activity.",
            "minimum": 0
          },
          "inscription_activity": {
            "$ref": "#/components/schemas/InscriptionActivity"
          },
          "mempool": {
            "type": "boolean",
            "description": "Whether the data is pending (true) or confirmed (false)."
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the inscription activity."
          }
        }
      },
      "WalletRuneActivity": {
        "type": "object",
        "required": [
          "self_transfers",
          "increased_balances",
          "decreased_balances"
        ],
        "properties": {
          "decreased_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletRuneAndAmount"
            },
            "description": "List of runes and amounts, corresponding to decreased balances for this address."
          },
          "etched_rune": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EtchAndPremine"
              }
            ],
            "nullable": true
          },
          "increased_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletRuneAndAmount"
            },
            "description": "List of runes and amounts, corresponding to increased balances for this address."
          },
          "minted": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WalletRuneAndAmount"
              }
            ],
            "nullable": true
          },
          "self_transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WalletRuneAndAmount"
            },
            "description": "List of runes that were self-transferred."
          }
        }
      },
      "WalletRuneActivityByAddress": {
        "type": "object",
        "required": [
          "height",
          "confirmations",
          "mempool",
          "tx_hash",
          "rune_activity"
        ],
        "properties": {
          "confirmations": {
            "type": "integer",
            "format": "int64",
            "description": "Number of confirmation blocks.",
            "minimum": 0
          },
          "height": {
            "type": "integer",
            "format": "int64",
            "description": "Height of block containing the rune activity.",
            "minimum": 0
          },
          "mempool": {
            "type": "boolean",
            "description": "Whether the data is pending (true) or confirmed (false)."
          },
          "rune_activity": {
            "$ref": "#/components/schemas/WalletRuneActivity"
          },
          "tx_hash": {
            "type": "string",
            "description": "Hash of transaction containing the rune activity."
          }
        }
      },
      "WalletRuneAndAmount": {
        "type": "object",
        "required": [
          "rune_id",
          "amount",
          "usd_amount"
        ],
        "properties": {
          "amount": {
            "type": "string"
          },
          "rune_id": {
            "type": "string"
          },
          "usd_amount": {
            "type": "string",
            "description": "USD price for amounts of runes at the time the block containing this activity was mined."
          }
        }
      },
      "WalletSatActivity": {
        "type": "object",
        "required": [
          "kind",
          "amount",
          "usd_amount"
        ],
        "properties": {
          "amount": {
            "type": "string",
            "description": "Amount of satoshis involved in the activity."
          },
          "kind": {
            "$ref": "#/components/schemas/ActivityKindByAddress"
          },
          "usd_amount": {
            "type": "string",
            "description": "USD amount if sat amount was exchanged to USD. If the block is confirmed, the exchange rate is that between USD and BTC at the time the block was mined. If the block is pending (mempool transaction), then the exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
          }
        }
      },
      "api_bitcoin.APIError": {
        "properties": {
          "error": {
            "description": "Error returned from the API request",
            "example": "Bad Request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BatchTxsRequest": {
        "properties": {
          "tx_ids": {
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "tx_ids"
        ],
        "type": "object"
      },
      "api_bitcoin.Bip9": {
        "properties": {
          "bit": {
            "type": "integer"
          },
          "since": {
            "type": "integer"
          },
          "start_time": {
            "type": "integer"
          },
          "statistics": {
            "$ref": "#/components/schemas/api_bitcoin.Statistics"
          },
          "status": {
            "type": "string"
          },
          "timeout": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinBlock": {
        "properties": {
          "bits": {
            "type": "string"
          },
          "chainwork": {
            "type": "string"
          },
          "confirmations": {
            "type": "integer"
          },
          "difficulty": {
            "type": "number"
          },
          "hash": {
            "type": "string"
          },
          "height": {
            "type": "integer"
          },
          "mediantime": {
            "type": "integer"
          },
          "merkleroot": {
            "type": "string"
          },
          "miner": {
            "$ref": "#/components/schemas/api_bitcoin.MinerInfo"
          },
          "nTx": {
            "type": "integer"
          },
          "nonce": {
            "type": "integer"
          },
          "previousblockhash": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "strippedsize": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          },
          "tx": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "integer"
          },
          "versionHex": {
            "type": "string"
          },
          "weight": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinBlockResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BitcoinBlock"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinBlockVerbose": {
        "properties": {
          "bits": {
            "type": "string"
          },
          "chainwork": {
            "type": "string"
          },
          "confirmations": {
            "type": "integer"
          },
          "difficulty": {
            "type": "number"
          },
          "hash": {
            "type": "string"
          },
          "height": {
            "type": "integer"
          },
          "mediantime": {
            "type": "integer"
          },
          "merkleroot": {
            "type": "string"
          },
          "miner": {
            "$ref": "#/components/schemas/api_bitcoin.MinerInfo"
          },
          "nTx": {
            "type": "integer"
          },
          "nonce": {
            "type": "integer"
          },
          "previousblockhash": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "strippedsize": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          },
          "tx": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerbose"
            },
            "type": "array",
            "uniqueItems": false
          },
          "version": {
            "type": "integer"
          },
          "versionHex": {
            "type": "string"
          },
          "weight": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinBlockVerboseResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BitcoinBlockVerbose"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinBlocksResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.BitcoinBlock"
            },
            "type": "array",
            "uniqueItems": false
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinDecodedTransaction": {
        "properties": {
          "hash": {
            "type": "string"
          },
          "hex": {
            "type": "string"
          },
          "locktime": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "txid": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "vin": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.Vin"
            },
            "type": "array",
            "uniqueItems": false
          },
          "vout": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.Vout"
            },
            "type": "array",
            "uniqueItems": false
          },
          "vsize": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinDecodedTransactionResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BitcoinDecodedTransaction"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinTransactionVerbose": {
        "properties": {
          "blockhash": {
            "type": "string"
          },
          "blockheight": {
            "type": "integer"
          },
          "blocktime": {
            "type": "integer"
          },
          "confirmations": {
            "type": "integer"
          },
          "hash": {
            "type": "string"
          },
          "hex": {
            "type": "string"
          },
          "input_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "locktime": {
            "type": "integer"
          },
          "output_addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "size": {
            "type": "integer"
          },
          "time": {
            "type": "integer"
          },
          "total_fees": {
            "type": "number"
          },
          "total_input_volume": {
            "type": "number"
          },
          "total_output_volume": {
            "type": "number"
          },
          "txid": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "vin": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.VinVerbose"
            },
            "type": "array",
            "uniqueItems": false
          },
          "vout": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.VoutVerbose"
            },
            "type": "array",
            "uniqueItems": false
          },
          "vsize": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinTransactionVerboseResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerbose"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinTransactionsBatchResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerbose"
            },
            "type": "array",
            "uniqueItems": false
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BitcoinTransactionsVerboseResponseBody": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/api_bitcoin.BitcoinTransactionVerbose"
            },
            "type": "array",
            "uniqueItems": false
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BlockMinerResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.MinerInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BlockVolume": {
        "properties": {
          "total_output_satoshis": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BlockVolumeResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BlockVolume"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BlockchainInfo": {
        "properties": {
          "automatic_pruning": {
            "type": "boolean"
          },
          "bestblockhash": {
            "type": "string"
          },
          "blocks": {
            "type": "integer"
          },
          "chain": {
            "type": "string"
          },
          "chainwork": {
            "type": "string"
          },
          "difficulty": {
            "type": "number"
          },
          "headers": {
            "type": "integer"
          },
          "initialblockdownload": {
            "type": "boolean"
          },
          "mediantime": {
            "type": "integer"
          },
          "prune_target_size": {
            "type": "integer"
          },
          "pruned": {
            "type": "boolean"
          },
          "pruneheight": {
            "type": "integer"
          },
          "size_on_disk": {
            "type": "integer"
          },
          "softforks": {
            "additionalProperties": {
              "$ref": "#/components/schemas/api_bitcoin.Softfork"
            },
            "type": "object"
          },
          "verificationprogress": {
            "type": "number"
          },
          "warnings": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.BlockchainInfoResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.BlockchainInfo"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.EstimateSmartFee": {
        "properties": {
          "blocks": {
            "type": "integer"
          },
          "feerate": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "api_bitcoin.EstimateSmartFeeResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.EstimateSmartFee"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.LastUpdatedBlock": {
        "properties": {
          "block_hash": {
            "type": "string"
          },
          "block_height": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolInfoResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.MempoolInfoResult"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolInfoResult": {
        "properties": {
          "bytes": {
            "description": "Total memory usage for the mempool (in bytes)",
            "type": "integer"
          },
          "fullrbf": {
            "description": "Whether full replace-by-fee (RBF) is enabled",
            "type": "boolean"
          },
          "incrementalrelayfee": {
            "description": "The incremental relay fee setting (in BTC)",
            "type": "number"
          },
          "loaded": {
            "description": "Whether the mempool is fully loaded",
            "type": "boolean"
          },
          "maxmempool": {
            "description": "Maximum memory usage for the mempool (in bytes)",
            "type": "integer"
          },
          "mempoolminfee": {
            "description": "The minimum fee rate (in BTC/kB) for mempool transactions",
            "type": "number"
          },
          "minrelaytxfee": {
            "description": "The minimum fee rate (in BTC/kB) for relaying transactions",
            "type": "number"
          },
          "size": {
            "description": "Number of transactions in the mempool",
            "type": "integer"
          },
          "total_fee": {
            "description": "The total fees (in BTC) in the mempool",
            "type": "number"
          },
          "unbroadcastcount": {
            "description": "Number of transactions that have not been broadcast",
            "type": "integer"
          },
          "usage": {
            "description": "Total usage of the mempool (in bytes)",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxAncestorsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxDescendantsResponseBody": {
        "properties": {
          "data": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxDetailsResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.MempoolTxDetailsResult"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxDetailsResult": {
        "properties": {
          "ancestorcount": {
            "type": "integer"
          },
          "ancestorsize": {
            "type": "integer"
          },
          "bip125-replaceable": {
            "type": "boolean"
          },
          "depends": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "descendantcount": {
            "type": "integer"
          },
          "descendantsize": {
            "type": "integer"
          },
          "fees": {
            "$ref": "#/components/schemas/api_bitcoin.TxFees"
          },
          "height": {
            "type": "integer"
          },
          "spentby": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "time": {
            "type": "integer"
          },
          "unbroadcast": {
            "type": "boolean"
          },
          "vsize": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "wtxid": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxsResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.MempoolTxsResult"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.MempoolTxsResult": {
        "properties": {
          "mempool_sequence": {
            "description": "Sequence number of the mempool",
            "type": "integer"
          },
          "txids": {
            "description": "List of transaction IDs",
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "api_bitcoin.MinerInfo": {
        "properties": {
          "addresses": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "icon_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.NodeRPCError": {
        "properties": {
          "code": {
            "description": "Error code returned from the API request",
            "example": 0,
            "type": "integer"
          },
          "node rpc error": {
            "description": "Error returned from the API request",
            "example": "node rpc error",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.PSBT": {
        "properties": {
          "fee": {
            "type": "number"
          },
          "global_xpubs": {
            "items": {},
            "type": "array",
            "uniqueItems": false
          },
          "inputs": {
            "items": {
              "properties": {
                "bip32_derivs": {
                  "items": {
                    "properties": {
                      "master_fingerprint": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "pubkey": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "uniqueItems": false
                },
                "non_witness_utxo": {
                  "properties": {
                    "hash": {
                      "type": "string"
                    },
                    "locktime": {
                      "type": "integer"
                    },
                    "size": {
                      "type": "integer"
                    },
                    "txid": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "vin": {
                      "items": {
                        "properties": {
                          "scriptSig": {
                            "properties": {
                              "asm": {
                                "type": "string"
                              },
                              "hex": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "sequence": {
                            "type": "integer"
                          },
                          "txid": {
                            "type": "string"
                          },
                          "vout": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "uniqueItems": false
                    },
                    "vout": {
                      "items": {
                        "properties": {
                          "n": {
                            "type": "integer"
                          },
                          "scriptPubKey": {
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "asm": {
                                "type": "string"
                              },
                              "desc": {
                                "type": "string"
                              },
                              "hex": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array",
                      "uniqueItems": false
                    },
                    "vsize": {
                      "type": "integer"
                    },
                    "weight": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "witness_utxo": {
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "scriptPubKey": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "asm": {
                          "type": "string"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "hex": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "array",
            "uniqueItems": false
          },
          "outputs": {
            "items": {
              "properties": {
                "bip32_derivs": {
                  "items": {
                    "properties": {
                      "master_fingerprint": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "pubkey": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "uniqueItems": false
                }
              },
              "type": "object"
            },
            "type": "array",
            "uniqueItems": false
          },
          "proprietary": {
            "items": {},
            "type": "array",
            "uniqueItems": false
          },
          "psbt_version": {
            "type": "integer"
          },
          "tx": {
            "properties": {
              "hash": {
                "type": "string"
              },
              "locktime": {
                "type": "integer"
              },
              "size": {
                "type": "integer"
              },
              "txid": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "vin": {
                "items": {
                  "properties": {
                    "scriptSig": {
                      "properties": {
                        "asm": {
                          "type": "string"
                        },
                        "hex": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "sequence": {
                      "type": "integer"
                    },
                    "txid": {
                      "type": "string"
                    },
                    "vout": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "uniqueItems": false
              },
              "vout": {
                "items": {
                  "properties": {
                    "n": {
                      "type": "integer"
                    },
                    "scriptPubKey": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "asm": {
                          "type": "string"
                        },
                        "desc": {
                          "type": "string"
                        },
                        "hex": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "type": "array",
                "uniqueItems": false
              },
              "vsize": {
                "type": "integer"
              },
              "weight": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "unknown": {
            "type": "object"
          }
        },
        "type": "object"
      },
      "api_bitcoin.PSBTResponseBody": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api_bitcoin.PSBT"
          },
          "last_updated": {
            "$ref": "#/components/schemas/api_bitcoin.LastUpdatedBlock"
          }
        },
        "type": "object"
      },
      "api_bitcoin.Softfork": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "bip9": {
            "$ref": "#/components/schemas/api_bitcoin.Bip9"
          },
          "height": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "api_bitcoin.Statistics": {
        "properties": {
          "count": {
            "type": "integer"
          },
          "elapsed": {
            "type": "integer"
          },
          "period": {
            "type": "integer"
          },
          "possible": {
            "type": "boolean"
          },
          "threshold": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.TxFees": {
        "properties": {
          "ancestor": {
            "type": "number"
          },
          "base": {
            "type": "number"
          },
          "descendant": {
            "type": "number"
          },
          "modified": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "api_bitcoin.Vin": {
        "properties": {
          "coinbase": {
            "type": "string"
          },
          "scriptSig": {
            "properties": {
              "asm": {
                "type": "string"
              },
              "hex": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sequence": {
            "type": "integer"
          },
          "txid": {
            "type": "string"
          },
          "txinwitness": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "vout": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.VinVerbose": {
        "properties": {
          "address": {
            "type": "string"
          },
          "coinbase": {
            "type": "string"
          },
          "scriptSig": {
            "properties": {
              "asm": {
                "type": "string"
              },
              "hex": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "script_type": {
            "type": "string"
          },
          "sequence": {
            "type": "integer"
          },
          "txid": {
            "type": "string"
          },
          "txinwitness": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          },
          "value": {
            "type": "number"
          },
          "vout": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "api_bitcoin.Vout": {
        "properties": {
          "n": {
            "type": "integer"
          },
          "scriptPubKey": {
            "properties": {
              "address": {
                "type": "string"
              },
              "asm": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              },
              "hex": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "value": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "api_bitcoin.VoutVerbose": {
        "properties": {
          "address": {
            "type": "string"
          },
          "n": {
            "type": "integer"
          },
          "scriptPubKey": {
            "properties": {
              "address": {
                "type": "string"
              },
              "asm": {
                "type": "string"
              },
              "desc": {
                "type": "string"
              },
              "hex": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "script_type": {
            "type": "string"
          },
          "value": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "updateEventManagerBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "chain": {
            "$ref": "#/components/schemas/chain"
          },
          "network": {
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/trigger"
            }
          }
        }
      },
      "updateTriggerBody": {
        "type": "object",
        "properties": {
          "eventManagerId": {
            "type": "string"
          },
          "triggerType": {
            "$ref": "#/components/schemas/triggerType"
          },
          "trackedId": {
            "type": "string"
          }
        }
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string"
          }
        },
        "additionalProperties": {}
      },
      "rpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/protobufAny"
            }
          }
        }
      },
      "chain": {
        "type": "string",
        "enum": [
          "chain_unknown",
          "bitcoin"
        ],
        "default": "chain_unknown"
      },
      "createEventManagerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "chain": {
            "$ref": "#/components/schemas/chain"
          },
          "network": {
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/createTriggerRequest"
            }
          }
        },
        "title": "createEventManagerRequest"
      },
      "createTriggerRequest": {
        "type": "object",
        "properties": {
          "eventManagerId": {
            "type": "string"
          },
          "triggerType": {
            "$ref": "#/components/schemas/triggerType"
          },
          "trackedId": {
            "type": "string"
          }
        }
      },
      "eventLog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventManagerId": {
            "type": "string"
          },
          "triggerId": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "title": "eventLog"
      },
      "eventLogList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/eventLog"
            }
          }
        }
      },
      "eventManager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "chain": {
            "$ref": "#/components/schemas/chain"
          },
          "network": {
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "eventManagerList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/eventManager"
            }
          }
        }
      },
      "filter": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "IDs": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "triggerList": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/trigger"
            }
          }
        }
      },
      "trigger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "eventManagerId": {
            "type": "string"
          },
          "triggerType": {
            "$ref": "#/components/schemas/triggerType"
          },
          "trackedId": {
            "type": "string"
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/filter"
            }
          }
        }
      },
      "triggerType": {
        "type": "string",
        "enum": [
          "trigger_type_unknown",
          "transaction",
          "sender",
          "receiver",
          "sender_or_receiver"
        ],
        "default": "trigger_type_unknown"
      },
      "userComputeCreditCounts": {
        "type": "object",
        "properties": {
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "int64"
            }
          }
        }
      },
      "bitcoin_api.APIError": {
        "properties": {
          "error": {
            "description": "Error returned from the API request",
            "example": "Bad Request",
            "type": "string"
          }
        },
        "type": "object"
      },
      "bitcoin_api.PriceTimestamp": {
        "properties": {
          "price": {
            "type": "number"
          },
          "timestamp": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "bitcoin_api.PricesByTimestampsParams": {
        "properties": {
          "timestamps": {
            "items": {
              "type": "integer"
            },
            "maxItems": 101,
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "timestamps"
        ],
        "type": "object"
      },
      "bitcoin_api.PricesByTimestampsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/bitcoin_api.PriceTimestamp"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "bitcoin_api.RunePriceRequest": {
        "properties": {
          "rune_id": {
            "example": "BTC-840000:1",
            "type": "string"
          },
          "timestamp": {
            "example": 1746109820,
            "type": "integer"
          }
        },
        "required": [
          "rune_id",
          "timestamp"
        ],
        "type": "object"
      },
      "bitcoin_api.RunePriceResponse": {
        "properties": {
          "price_satoshi": {
            "example": 1654.98,
            "type": "number"
          },
          "price_usd": {
            "example": 2.46,
            "type": "number"
          },
          "rune_id": {
            "example": "BTC-840000:28",
            "type": "string"
          },
          "timestamp": {
            "example": 1746109820,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "bitcoin_api.RunePricesByTimestampsResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/bitcoin_api.RunePriceResponse"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "bitcoin_api.RunePricesParams": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/bitcoin_api.RunePriceRequest"
            },
            "maxItems": 101,
            "minItems": 1,
            "type": "array",
            "uniqueItems": false
          }
        },
        "required": [
          "data"
        ],
        "type": "object"
      },
      "models.Candle": {
        "properties": {
          "bucket": {
            "description": "Start time of the candle interval",
            "example": "2024-03-25T14:00:00Z",
            "type": "string"
          },
          "close": {
            "description": "Price at the end of the interval (in satoshis)",
            "example": 19.75,
            "type": "number"
          },
          "high": {
            "description": "Highest price during the interval (in satoshis)",
            "example": 20,
            "type": "number"
          },
          "low": {
            "description": "Lowest price during the interval (in satoshis)",
            "example": 19.25,
            "type": "number"
          },
          "open": {
            "description": "Price at the start of the interval (in satoshis)",
            "example": 19.5,
            "type": "number"
          },
          "symbol": {
            "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
            "example": "BTC-840000:28",
            "type": "string"
          },
          "volume": {
            "description": "Total traded amount during the interval. Volume=0 for backfilled, synthetic candles (queried with carry=true)",
            "example": 3780,
            "type": "number"
          }
        },
        "type": "object"
      },
      "models.CandleList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/models.Candle"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "models.RuneRegistry": {
        "properties": {
          "divisibility": {
            "description": "Number of decimal places supported",
            "example": 8,
            "type": "integer"
          },
          "etched_tx_hash": {
            "description": "Transaction hash where the Rune was etched",
            "example": "2bebfc71ac93f02de19b28a8b438ed40413676f4c4c2609401a9a08ea508fd58",
            "type": "string"
          },
          "name": {
            "description": "Human-readable name of the Rune",
            "example": "DOGGOTOTHEMOON",
            "type": "string"
          },
          "rune_id": {
            "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
            "example": "BTC-840000:28",
            "type": "string"
          },
          "spacer": {
            "description": "Spacer value associated with the Rune",
            "example": 0,
            "type": "integer"
          },
          "symbol": {
            "description": "Ticker symbol of the Rune",
            "example": "DOGGO",
            "type": "string"
          }
        },
        "type": "object"
      },
      "models.RuneRegistryList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/models.RuneRegistry"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "models.SupportedDexList": {
        "properties": {
          "data": {
            "example": [
              "magiceden"
            ],
            "items": {
              "type": "string"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "models.Trade": {
        "properties": {
          "amount": {
            "description": "Amount of the asset traded",
            "example": 3780,
            "type": "number"
          },
          "block": {
            "description": "Block height where the trade was included",
            "example": 840000,
            "type": "integer"
          },
          "dex": {
            "description": "Name of the DEX",
            "example": "magiceden",
            "type": "string"
          },
          "mempool": {
            "description": "Mempool status of the trade",
            "example": false,
            "type": "boolean"
          },
          "price": {
            "description": "Price of the asset in satoshis",
            "example": 19.75,
            "type": "number"
          },
          "price_usd": {
            "description": "Price of the asset in usd",
            "example": 0.0575,
            "type": "number"
          },
          "side": {
            "description": "Trade direction: buy or sell",
            "enum": [
              "buy",
              "sell"
            ],
            "example": "buy",
            "type": "string"
          },
          "symbol": {
            "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
            "example": "BTC-840000:28",
            "type": "string"
          },
          "timestamp": {
            "description": "Time of the block in which trade occurred",
            "example": "2024-05-03T15:04:05Z",
            "type": "string"
          },
          "tx_hash": {
            "description": "Transaction hash of the trade",
            "example": "2bebfc71ac93f02de19b28a8b438ed40413676f4c4c2609401a9a08ea508fd58",
            "type": "string"
          },
          "tx_index": {
            "description": "Index of the trade within the block, 0-based (first trade is 0, second trade is 1, not transaction index)",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "models.TradeList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/models.Trade"
            },
            "type": "array",
            "uniqueItems": false
          }
        },
        "type": "object"
      },
      "AddressInfo": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "chain_stats": {
            "$ref": "#/components/schemas/AddressStats"
          },
          "mempool_stats": {
            "$ref": "#/components/schemas/AddressStats"
          }
        },
        "required": [
          "address",
          "chain_stats",
          "mempool_stats"
        ]
      },
      "AddressStats": {
        "type": "object",
        "properties": {
          "tx_count": {
            "type": "integer"
          },
          "funded_txo_count": {
            "type": "integer"
          },
          "funded_txo_sum": {
            "type": "integer"
          },
          "spent_txo_count": {
            "type": "integer"
          },
          "spent_txo_sum": {
            "type": "integer"
          }
        },
        "required": [
          "tx_count",
          "funded_txo_count",
          "funded_txo_sum",
          "spent_txo_count",
          "spent_txo_sum"
        ]
      },
      "AddressValidation": {
        "type": "object",
        "properties": {
          "isvalid": {
            "type": "boolean"
          },
          "address": {
            "type": "string"
          },
          "scriptPubKey": {
            "type": "string"
          },
          "isscript": {
            "type": "boolean"
          },
          "iswitness": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "isvalid"
        ]
      },
      "Block": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Block hash"
          },
          "height": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "mediantime": {
            "type": "integer"
          },
          "bits": {
            "type": "integer"
          },
          "nonce": {
            "type": "integer"
          },
          "difficulty": {
            "type": "number"
          },
          "merkle_root": {
            "type": "string"
          },
          "tx_count": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "previousblockhash": {
            "type": "string"
          },
          "extras": {
            "type": "object",
            "description": "Optional explorer-specific metadata"
          }
        },
        "required": [
          "id",
          "height",
          "version",
          "timestamp",
          "bits",
          "nonce",
          "merkle_root",
          "tx_count",
          "size",
          "weight",
          "previousblockhash"
        ]
      },
      "BlockV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "height": {
            "type": "integer"
          },
          "version": {
            "type": "integer"
          },
          "timestamp": {
            "type": "integer"
          },
          "mediantime": {
            "type": "integer"
          },
          "bits": {
            "type": "integer"
          },
          "nonce": {
            "type": "integer"
          },
          "difficulty": {
            "type": "number"
          },
          "merkle_root": {
            "type": "string"
          },
          "tx_count": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "previousblockhash": {
            "type": "string"
          },
          "extras": {
            "type": "object",
            "properties": {
              "pool": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "height",
          "timestamp",
          "bits",
          "nonce",
          "tx_count",
          "size",
          "weight",
          "previousblockhash"
        ]
      },
      "BlockHash": {
        "type": "string",
        "description": "SHA-256 hash of the latest block"
      },
      "BlockHeader": {
        "type": "string",
        "description": "Hex-encoded string representing the block header (80 bytes, 160 hex characters)"
      },
      "BlockHeight": {
        "type": "integer",
        "example": 850302,
        "description": "Height of the latest block on the best blockchain tip"
      },
      "BlockStatus": {
        "type": "object",
        "properties": {
          "in_best_chain": {
            "type": "boolean",
            "description": "Whether the block is part of the best (main) chain"
          },
          "next_best": {
            "type": "string",
            "description": "Hash of the next block, if available"
          }
        },
        "required": [
          "in_best_chain"
        ]
      },
      "BlockTxids": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "A transaction ID (txid)"
        },
        "example": [
          "5a7a9fe2c911c482c89a7ea1dbf35a7c9b68892ec5b2d92e93858a9f4a85b08e",
          "b1fea5241d34b276c3f8a5a934ae9e5e2bb23ecad1c7426ec1dfde3e07aa55a9"
        ]
      },
      "RbfTransaction": {
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          },
          "fee": {
            "type": "integer"
          },
          "vsize": {
            "type": "number"
          },
          "value": {
            "type": "integer"
          },
          "rate": {
            "type": "number"
          },
          "rbf": {
            "type": "boolean"
          },
          "fullRbf": {
            "type": "boolean"
          }
        },
        "required": [
          "txid",
          "fee",
          "vsize",
          "value",
          "rate",
          "rbf"
        ]
      },
      "RbfReplacedTx": {
        "type": "object",
        "properties": {
          "tx": {
            "$ref": "#/components/schemas/RbfTransaction"
          },
          "time": {
            "type": "integer"
          },
          "interval": {
            "type": "integer"
          },
          "fullRbf": {
            "type": "boolean"
          },
          "replaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RbfReplacedTx"
            }
          }
        },
        "required": [
          "tx",
          "time",
          "fullRbf",
          "replaces"
        ]
      },
      "RbfReplacementRoot": {
        "type": "object",
        "properties": {
          "replacements": {
            "type": "object",
            "properties": {
              "tx": {
                "$ref": "#/components/schemas/RbfTransaction"
              },
              "time": {
                "type": "integer"
              },
              "fullRbf": {
                "type": "boolean"
              },
              "replaces": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RbfReplacedTx"
                }
              }
            },
            "required": [
              "tx",
              "time",
              "fullRbf",
              "replaces"
            ]
          },
          "replaces": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "replacements",
          "replaces"
        ]
      },
      "FullRbfStats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total number of transactions in the mempool."
          },
          "fullRBF": {
            "type": "integer",
            "description": "Number of transactions marked as full-RBF."
          },
          "optInRBF": {
            "type": "integer",
            "description": "Number of transactions marked as opt-in RBF (BIP125)."
          },
          "nonRBF": {
            "type": "integer",
            "description": "Number of transactions that are not RBF."
          }
        },
        "required": [
          "total",
          "fullRBF",
          "optInRBF",
          "nonRBF"
        ]
      },
      "CpfpRecommendation": {
        "type": "object",
        "properties": {
          "vsize": {
            "type": "integer",
            "description": "Virtual size of the child transaction in vbytes."
          },
          "fee": {
            "type": "integer",
            "description": "Required fee for the child transaction in satoshis."
          },
          "totalVsize": {
            "type": "integer",
            "description": "Total virtual size of parent + child transaction."
          },
          "totalFee": {
            "type": "integer",
            "description": "Total required fee for parent + child."
          },
          "rate": {
            "type": "number",
            "description": "Effective fee rate (sat/vB) for parent + child."
          },
          "minRelayFee": {
            "type": "integer",
            "description": "Minimum relay fee required for the transaction to be accepted into the mempool."
          },
          "error": {
            "type": "string",
            "description": "Error message if CPFP recommendation could not be provided."
          }
        },
        "required": [
          "vsize",
          "fee",
          "totalVsize",
          "totalFee",
          "rate",
          "minRelayFee",
          "error"
        ]
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "txid": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "locktime": {
            "type": "integer"
          },
          "size": {
            "type": "integer"
          },
          "weight": {
            "type": "integer"
          },
          "fee": {
            "type": "integer"
          },
          "vin": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "txid": {
                  "type": "string"
                },
                "vout": {
                  "type": "integer"
                },
                "is_coinbase": {
                  "type": "boolean"
                },
                "scriptsig": {
                  "type": "string"
                },
                "scriptsig_asm": {
                  "type": "string"
                },
                "sequence": {
                  "type": "integer"
                },
                "witness": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "prevout": {
                  "type": "object",
                  "properties": {
                    "scriptpubkey": {
                      "type": "string"
                    },
                    "scriptpubkey_asm": {
                      "type": "string"
                    },
                    "scriptpubkey_type": {
                      "type": "string"
                    },
                    "scriptpubkey_address": {
                      "type": "string"
                    },
                    "value": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "vout": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "scriptpubkey": {
                  "type": "string"
                },
                "scriptpubkey_asm": {
                  "type": "string"
                },
                "scriptpubkey_type": {
                  "type": "string"
                },
                "scriptpubkey_address": {
                  "type": "string"
                },
                "value": {
                  "type": "integer"
                }
              }
            }
          },
          "status": {
            "type": "object",
            "properties": {
              "confirmed": {
                "type": "boolean"
              },
              "block_height": {
                "type": "integer"
              },
              "block_hash": {
                "type": "string"
              },
              "block_time": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "txid",
          "vin",
          "vout",
          "status"
        ]
      },
      "TransactionHex": {
        "type": "string",
        "description": "Raw hexadecimal representation of the Bitcoin transaction."
      },
      "TransactionStatus": {
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "boolean"
          },
          "block_height": {
            "type": "integer"
          },
          "block_hash": {
            "type": "string"
          }
        }
      },
      "TransactionId": {
        "type": "string",
        "description": "A Bitcoin transaction ID (txid)"
      },
      "MempoolStats": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of transactions in the mempool"
          },
          "vsize": {
            "type": "integer",
            "description": "Total size of mempool transactions in virtual bytes"
          },
          "total_fee": {
            "type": "integer",
            "description": "Total fees paid by mempool transactions in satoshis"
          },
          "fee_histogram": {
            "type": "array",
            "description": "Mempool fee-rate distribution histogram as (feerate, vsize) tuples",
            "items": {
              "type": "array",
              "items": {
                "type": "number"
              },
              "minItems": 2,
              "maxItems": 2
            }
          }
        },
        "required": [
          "count",
          "vsize",
          "total_fee",
          "fee_histogram"
        ]
      },
      "MempoolTxids": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Transaction ID (txid)"
        },
        "description": "Array of transaction IDs currently in the mempool"
      },
      "MempoolRecentTx": {
        "type": "object",
        "properties": {
          "txid": {
            "type": "string",
            "description": "Transaction ID"
          },
          "fee": {
            "type": "integer",
            "description": "Total fee paid in satoshis"
          },
          "vsize": {
            "type": "integer",
            "description": "Virtual size of the transaction in vbytes"
          },
          "value": {
            "type": "integer",
            "description": "Total value transferred in satoshis"
          }
        },
        "required": [
          "txid",
          "fee",
          "vsize",
          "value"
        ]
      },
      "MerkleProof": {
        "type": "object",
        "properties": {
          "block_height": {
            "type": "integer",
            "description": "Block height where the transaction was included."
          },
          "merkle": {
            "type": "array",
            "description": "Merkle branch hashes proving the inclusion of the transaction.",
            "items": {
              "type": "string"
            }
          },
          "pos": {
            "type": "integer",
            "description": "Position of the transaction in the block's merkle tree."
          }
        },
        "required": [
          "block_height",
          "merkle",
          "pos"
        ]
      },
      "TxOutspend": {
        "type": "object",
        "properties": {
          "spent": {
            "type": "boolean",
            "description": "Whether the output has been spent."
          },
          "txid": {
            "type": "string",
            "description": "Transaction ID of the spending transaction.",
            "nullable": true
          },
          "vin": {
            "type": "integer",
            "description": "Index of the input in the spending transaction.",
            "nullable": true
          },
          "status": {
            "type": "object",
            "description": "Confirmation status of the spending transaction.",
            "nullable": true,
            "properties": {
              "confirmed": {
                "type": "boolean"
              },
              "block_height": {
                "type": "integer"
              },
              "block_hash": {
                "type": "string"
              },
              "block_time": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "spent"
        ]
      },
      "Outspend": {
        "type": "object",
        "properties": {
          "spent": {
            "type": "boolean",
            "description": "Indicates whether this output has been spent."
          },
          "txid": {
            "type": "string",
            "nullable": true,
            "description": "The transaction ID that spent this output, if any."
          },
          "vin": {
            "type": "integer",
            "nullable": true,
            "description": "The input index in the spending transaction."
          },
          "status": {
            "type": "object",
            "nullable": true,
            "description": "Status of the spending transaction.",
            "properties": {
              "confirmed": {
                "type": "boolean"
              },
              "block_height": {
                "type": "integer"
              },
              "block_hash": {
                "type": "string"
              },
              "block_time": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "spent"
        ]
      },
      "TransactionTimes": {
        "type": "object",
        "properties": {
          "firstSeen": {
            "type": "integer",
            "description": "Unix timestamp when the transaction was first observed"
          },
          "addedToMempool": {
            "type": "integer",
            "description": "Unix timestamp when the transaction entered the mempool"
          },
          "blockTime": {
            "type": "integer",
            "description": "Unix timestamp when the transaction was confirmed in a block (null if unconfirmed)"
          }
        },
        "required": [
          "firstSeen",
          "addedToMempool"
        ]
      },
      "TxStatus": {
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "boolean",
            "description": "Whether the transaction is confirmed"
          },
          "block_height": {
            "type": "integer",
            "description": "Height of the block containing the transaction (if confirmed)"
          },
          "block_hash": {
            "type": "string",
            "description": "Hash of the block containing the transaction (if confirmed)"
          }
        },
        "required": [
          "confirmed"
        ]
      },
      "BroadcastResponse": {
        "type": "object",
        "properties": {
          "txid": {
            "type": "string",
            "description": "Transaction ID of the broadcast transaction."
          }
        },
        "required": [
          "txid"
        ]
      },
      "Utxo1": {
        "type": "object",
        "properties": {
          "txid": {
            "type": "string",
            "description": "Transaction ID where the UTXO originates."
          },
          "vout": {
            "type": "integer",
            "description": "Index of the output in the transaction."
          },
          "value": {
            "type": "integer",
            "description": "Value of the UTXO in satoshis."
          },
          "status": {
            "type": "object",
            "properties": {
              "confirmed": {
                "type": "boolean"
              },
              "block_height": {
                "type": "integer"
              },
              "block_hash": {
                "type": "string"
              },
              "block_time": {
                "type": "integer"
              }
            },
            "required": [
              "confirmed"
            ]
          }
        },
        "required": [
          "txid",
          "vout",
          "value",
          "status"
        ]
      }
    },
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "api-key",
        "description": "Project API Key"
      }
    }
  }
}