{
    "components": {
        "schemas": {
            "bitcoin_api.APIError": {
                "properties": {
                    "error": {
                        "description": "Error returned from the API request",
                        "example": "Bad Request",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "bitcoin_api.PriceTimestamp": {
                "properties": {
                    "price": { "type": "number" },
                    "timestamp": { "type": "integer" }
                },
                "type": "object"
            },
            "bitcoin_api.PricesByTimestampsParams": {
                "properties": {
                    "timestamps": {
                        "items": { "type": "integer" },
                        "maxItems": 101,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "required": ["timestamps"],
                "type": "object"
            },
            "bitcoin_api.PricesByTimestampsResponse": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/bitcoin_api.PriceTimestamp"
                        },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            },
            "bitcoin_api.RunePriceRequest": {
                "properties": {
                    "rune_id": { "example": "BTC-840000:1", "type": "string" },
                    "timestamp": { "example": 1746109820, "type": "integer" }
                },
                "required": ["rune_id", "timestamp"],
                "type": "object"
            },
            "bitcoin_api.RunePriceResponse": {
                "properties": {
                    "price_satoshi": { "example": 1654.98, "type": "number" },
                    "price_usd": { "example": 2.46, "type": "number" },
                    "rune_id": { "example": "BTC-840000:28", "type": "string" },
                    "timestamp": { "example": 1746109820, "type": "integer" }
                },
                "type": "object"
            },
            "bitcoin_api.RunePricesByTimestampsResponse": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/bitcoin_api.RunePriceResponse"
                        },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            },
            "bitcoin_api.RunePricesParams": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/bitcoin_api.RunePriceRequest"
                        },
                        "maxItems": 101,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "required": ["data"],
                "type": "object"
            },
            "models.Candle": {
                "properties": {
                    "bucket": {
                        "description": "Start time of the candle interval",
                        "example": "2024-03-25T14:00:00Z",
                        "type": "string"
                    },
                    "close": {
                        "description": "Price at the end of the interval (in satoshis)",
                        "example": 19.75,
                        "type": "number"
                    },
                    "high": {
                        "description": "Highest price during the interval (in satoshis)",
                        "example": 20,
                        "type": "number"
                    },
                    "low": {
                        "description": "Lowest price during the interval (in satoshis)",
                        "example": 19.25,
                        "type": "number"
                    },
                    "open": {
                        "description": "Price at the start of the interval (in satoshis)",
                        "example": 19.5,
                        "type": "number"
                    },
                    "symbol": {
                        "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
                        "example": "BTC-840000:28",
                        "type": "string"
                    },
                    "volume": {
                        "description": "Total traded amount during the interval. Volume=0 for backfilled, synthetic candles (queried with carry=true)",
                        "example": 3780,
                        "type": "number"
                    }
                },
                "type": "object"
            },
            "models.CandleList": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/models.Candle"
                        },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            },
            "models.RuneRegistry": {
                "properties": {
                    "divisibility": {
                        "description": "Number of decimal places supported",
                        "example": 8,
                        "type": "integer"
                    },
                    "etched_tx_hash": {
                        "description": "Transaction hash where the Rune was etched",
                        "example": "2bebfc71ac93f02de19b28a8b438ed40413676f4c4c2609401a9a08ea508fd58",
                        "type": "string"
                    },
                    "name": {
                        "description": "Human-readable name of the Rune",
                        "example": "DOGGOTOTHEMOON",
                        "type": "string"
                    },
                    "rune_id": {
                        "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
                        "example": "BTC-840000:28",
                        "type": "string"
                    },
                    "spacer": {
                        "description": "Spacer value associated with the Rune",
                        "example": 0,
                        "type": "integer"
                    },
                    "symbol": {
                        "description": "Ticker symbol of the Rune",
                        "example": "DOGGO",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "models.RuneRegistryList": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/models.RuneRegistry"
                        },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            },
            "models.SupportedDexList": {
                "properties": {
                    "data": {
                        "example": ["magiceden"],
                        "items": { "type": "string" },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            },
            "models.Trade": {
                "properties": {
                    "amount": {
                        "description": "Amount of the asset traded",
                        "example": 3780,
                        "type": "number"
                    },
                    "block": {
                        "description": "Block height where the trade was included",
                        "example": 840000,
                        "type": "integer"
                    },
                    "dex": {
                        "description": "Name of the DEX",
                        "example": "magiceden",
                        "type": "string"
                    },
                    "mempool": {
                        "description": "Mempool status of the trade",
                        "example": false,
                        "type": "boolean"
                    },
                    "price": {
                        "description": "Price of the asset in satoshis",
                        "example": 19.75,
                        "type": "number"
                    },
                    "price_usd": {
                        "description": "Price of the asset in usd",
                        "example": 0.0575,
                        "type": "number"
                    },
                    "side": {
                        "description": "Trade direction: buy or sell",
                        "enum": ["buy", "sell"],
                        "example": "buy",
                        "type": "string"
                    },
                    "symbol": {
                        "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
                        "example": "BTC-840000:28",
                        "type": "string"
                    },
                    "timestamp": {
                        "description": "Time of the block in which trade occurred",
                        "example": "2024-05-03T15:04:05Z",
                        "type": "string"
                    },
                    "tx_hash": {
                        "description": "Transaction hash of the trade",
                        "example": "2bebfc71ac93f02de19b28a8b438ed40413676f4c4c2609401a9a08ea508fd58",
                        "type": "string"
                    },
                    "tx_index": {
                        "description": "Index of the trade within the block, 0-based (first trade is 0, second trade is 1, not transaction index)",
                        "example": 1,
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "models.TradeList": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/models.Trade"
                        },
                        "type": "array",
                        "uniqueItems": false
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "": {
                "description": "Project API Key",
                "in": "header",
                "name": "api-key",
                "type": "apiKey"
            }
        }
    },
    "info": {
        "description": "This API delivers real-time, rollback-protected DEX pricing data with deep network-level indexing that abstracts away complex trade and UTXO handling—giving developers the power of resilient, trustworthy market data without building their own infrastructure.\n#### Key Features:\n- **Mempool Awareness:** Provides insight into the latest trades from the mempool for the most dynamic price discovery.\n- **Rollback Protection:** Ensures price accuracy by tracking chain reorganizations and updating data accordingly—no stale or orphaned block data.\n- **Dual-Pipeline Indexing:** Separately indexes UTXOs and trades for accuracy and real-time responsiveness.\n- **Real-Time Price Feeds:** Continuously updated trade and price data, optimized for wallets, traders, and analytics platforms.\n\n#### Key Benefits for Developers:\n- Track accurate, chain-verified prices without maintaining your own indexers.\n- Build DEX-integrated wallets and apps with reliable, real-time market signals.\n- Identify and act on price trends immediately, with confidence the data won’t be invalidated by reorgs.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.txt"
        },
        "title": "Bitcoin - Market Price API",
        "version": "0.1.0"
    },
    "externalDocs": { "description": "", "url": "" },
    "paths": {
        "/btc/prices/batch": {
            "post": {
                "description": "Returns BTC-USD prices for the provided list of UTC timestamps. Timestamps are matched against minute-aligned entries in the database.",
                "operationId": "mkt-btc-prices-by-timestamps",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bitcoin_api.PricesByTimestampsParams"
                            }
                        }
                    },
                    "description": "Array of UTC timestamps",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/bitcoin_api.PricesByTimestampsResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "BTC prices by timestamp",
                "tags": ["Prices"]
            }
        },
        "/btc/prices/runes/batch": {
            "post": {
                "description": "Returns Rune prices in USD and satoshi for the provided list of Rune ID \u003c\u003e UTC timestamps pairs.",
                "operationId": "mkt-rune-prices-by-timestamps",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bitcoin_api.RunePricesParams"
                            }
                        }
                    },
                    "description": "Array of RuneID \u003c\u003e UTC timestamp pairs",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/bitcoin_api.RunePricesByTimestampsResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Rune prices by timestamp",
                "tags": ["Prices"]
            }
        },
        "/btc/prices/runes/{rune_id}/{timestamp}": {
            "get": {
                "description": "Returns Rune price in USD and satoshi for the provided UTC timestamp.",
                "operationId": "mkt-rune-price-by-timestamp",
                "parameters": [
                    {
                        "description": "Rune ID in the format \u003cetching_block\u003e:\u003cetching_tx\u003e",
                        "example": "BTC-840000:28",
                        "in": "path",
                        "name": "rune_id",
                        "required": true,
                        "schema": { "type": "string" }
                    },
                    {
                        "description": "Unix timestamp in seconds",
                        "example": 1746109820,
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "schema": { "type": "integer" }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": { "schema": { "type": "object" } }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/bitcoin_api.RunePriceResponse"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/bitcoin_api.APIError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/bitcoin_api.APIError"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Invalid timestamp"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Rune price by timestamp",
                "tags": ["Prices"]
            }
        },
        "/btc/prices/{timestamp}": {
            "get": {
                "description": "Returns BTC-USD price for the provided UTC timestamp.",
                "operationId": "mkt-btc-price-by-timestamp",
                "parameters": [
                    {
                        "description": "Unix timestamp in seconds",
                        "in": "path",
                        "name": "timestamp",
                        "required": true,
                        "schema": { "type": "integer" }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": { "schema": { "type": "object" } }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/bitcoin_api.PriceTimestamp"
                                    },
                                    "type": "array"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/bitcoin_api.APIError"
                                        },
                                        {
                                            "$ref": "#/components/schemas/bitcoin_api.APIError"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Invalid timestamp"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "BTC price by timestamp",
                "tags": ["Prices"]
            }
        },
        "/dexs": {
            "get": {
                "description": "Retrieves a list of all decentralized exchanges (DEXs) currently indexed and supported by the API. This serves as the discovery endpoint for clients to programmatically identify valid DEX identifiers used in other endpoints like trades or OHLC queries.",
                "operationId": "mkt-dexs",
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.SupportedDexList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Supported DEXs",
                "tags": ["DEX"]
            }
        },
        "/dexs/ohlc/{dex}/{symbol}": {
            "get": {
                "description": "Returns candlestick-formatted market data (Open, High, Low, Close, Volume) for a specific DEX and Rune pair, segmented by time intervals. This is ideal for price charting, trend analysis, and historical performance. Data is sourced from both confirmed blocks and optionally from the mempool, depending on configuration.",
                "operationId": "mkt-dex-ohlc",
                "parameters": [
                    {
                        "description": "Name of the DEX",
                        "example": "magiceden",
                        "in": "path",
                        "name": "dex",
                        "required": true,
                        "schema": { "default": "magiceden", "type": "string" }
                    },
                    {
                        "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
                        "example": "BTC-840000:28",
                        "in": "path",
                        "name": "symbol",
                        "required": true,
                        "schema": {
                            "default": "BTC-840000:28",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Mempool mode",
                        "example": "included",
                        "in": "query",
                        "name": "mempool",
                        "schema": {
                            "default": "excluded",
                            "enum": ["included", "excluded", "only"],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Time resolution (1m, 5m, 15m, 30m, 1h, 4h, 1d, 1w, 1M)",
                        "example": "1h",
                        "in": "query",
                        "name": "resolution",
                        "required": true,
                        "schema": {
                            "default": "1h",
                            "enum": [
                                "1m",
                                "5m",
                                "15m",
                                "30m",
                                "1h",
                                "4h",
                                "1d",
                                "1w",
                                "1M"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start timestamp in Unix",
                        "example": "1735689600",
                        "in": "query",
                        "name": "from",
                        "schema": { "default": "1735689600", "type": "string" }
                    },
                    {
                        "description": "End timestamp in Unix",
                        "example": "1742428800",
                        "in": "query",
                        "name": "to",
                        "schema": { "default": "1742428800", "type": "string" }
                    },
                    {
                        "description": "Limit number of Runes returned (min: 1, max: 50000)",
                        "example": 10000,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "default": 5000,
                            "maximum": 50000,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Sort by descending (desc) or ascending (asc)",
                        "example": "asc",
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "default": "desc",
                            "enum": ["asc", "desc"],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Fill candles with no trades with synthetic data (OHLC filled with previous closing price, volume=0)",
                        "example": false,
                        "in": "query",
                        "name": "carry",
                        "schema": { "default": false, "type": "boolean" }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.CandleList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Rune OHLC data",
                "tags": ["DEX"]
            }
        },
        "/dexs/trades/{dex}/{symbol}": {
            "get": {
                "description": "Provides a time-series list of individual trades for a specified Rune pair on a given DEX, including granular data such as trade price (in satoshis), volume, block height, and buy/sell direction. Especially useful for high-frequency strategies or price feed services.",
                "operationId": "mkt-dex-trades",
                "parameters": [
                    {
                        "description": "Name of the DEX",
                        "example": "magiceden",
                        "in": "path",
                        "name": "dex",
                        "required": true,
                        "schema": { "default": "magiceden", "type": "string" }
                    },
                    {
                        "description": "Symbol of the Rune asset trading pair (BTC-Rune ID)",
                        "example": "BTC-840000:28",
                        "in": "path",
                        "name": "symbol",
                        "required": true,
                        "schema": {
                            "default": "BTC-840000:28",
                            "type": "string"
                        }
                    },
                    {
                        "description": "Mempool mode",
                        "example": "included",
                        "in": "query",
                        "name": "mempool",
                        "schema": {
                            "default": "excluded",
                            "enum": ["included", "excluded", "only"],
                            "type": "string"
                        }
                    },
                    {
                        "description": "Start timestamp in Unix",
                        "example": "1735689600",
                        "in": "query",
                        "name": "from",
                        "schema": { "default": "1735689600", "type": "string" }
                    },
                    {
                        "description": "End timestamp in Unix",
                        "example": "1742428800",
                        "in": "query",
                        "name": "to",
                        "schema": { "default": "1742428800", "type": "string" }
                    },
                    {
                        "description": "Limit number of Runes returned (min: 1, max: 50000)",
                        "example": 10000,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "default": 5000,
                            "maximum": 50000,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Sort by descending (desc) or ascending (asc)",
                        "example": "desc",
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "default": "desc",
                            "enum": ["asc", "desc"],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.TradeList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Rune Trades for DEX",
                "tags": ["DEX"]
            }
        },
        "/runes": {
            "get": {
                "description": "Returns metadata for Rune assets registered and etched into the Bitcoin blockchain. This includes human-readable name, symbol, divisibility (decimals), and genesis transaction. Filtering by `rune_id` narrows the query to a specific asset.",
                "operationId": "mkt-dex",
                "parameters": [
                    {
                        "description": "Bitcoin Rune ID",
                        "example": "840000:28",
                        "in": "query",
                        "name": "rune_id",
                        "schema": {
                            "default": "840000:28",
                            "maxLength": 16,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Limit number of Runes returned (min: 1, max: 50000)",
                        "example": 10000,
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "default": 5000,
                            "maximum": 50000,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Sort by descending (desc) or ascending (asc)",
                        "example": "desc",
                        "in": "query",
                        "name": "sort",
                        "schema": {
                            "default": "desc",
                            "enum": ["asc", "desc"],
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/models.RuneRegistryList"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bitcoin_api.APIError"
                                }
                            }
                        },
                        "description": "Server Error"
                    }
                },
                "summary": "Rune Registry",
                "tags": ["DEX"]
            }
        }
    },
    "openapi": "3.1.0",
    "servers": [{ "url": "https://xbt-mainnet.gomaestro-api.org/v0/markets" }]
}
