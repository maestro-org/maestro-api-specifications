{
    "openapi": "3.0.3",
    "info": {
        "title": "Bitcoin - Wallet API",
        "description": "Maestro's Bitcoin Wallet API delivers detailed transaction activity data at the address level, spanning native Bitcoin (satoshis) and metaprotocol layers like inscriptions and runes. This API enables deep visibility into balance changes, token movements, and asset-specific behaviors. Useful for powering explorers, wallets, or dashboards with granular insight into address-level history and asset interactions.\n\n#### Key Features:\n- **Satoshi Activity Tracking:** Track and analyze satoshi-level balance changes—including increases, decreases, and self-transfers—with timestamped precision. Historical balances are itemized by either block height or timestamp, enabling accurate auditing, time-based analysis, and USD-denominated valuation over time.\n- **Inscription Insight:** Monitor Ordinals transactions, filtered by inscription ID, activity type (send/receive), or self-transfer logic to reduce noise from spam or internal moves.\n- **Rune Transaction Logging:** Track rune minting, transfers, etchings, and balance changes for a given address, including support for filtering by specific rune.\n- **Unified Metaprotocol View:** Fetch combined activity across satoshis, inscriptions, and runes in a single request to power holistic user or address histories.\n\n#### Key Benefits for Developers: \nDevelopers gain the ability to surface address-level insights without having to manually parse raw blockchain data. The Wallet API simplifies historical activity analysis, enables protocol-specific filtering, and lets developers build UX-enhancing features like transaction history views, asset trackers, and real-time alerts for wallet activity without managing indexing infrastructure.",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.txt"
        },
        "version": "v0.2.0"
    },
    "servers": [
        {
            "url": "https://xbt-mainnet.gomaestro-api.org/v0",
            "description": "Bitcoin Mainnet"
        },
        {
            "url": "https://xbt-testnet.gomaestro-api.org/v0",
            "description": "Bitcoin Testnet"
        }
    ],
    "paths": {
        "/wallet/addresses/{address}/activity": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Wallet Satoshi Activity by Address (Mempool-aware)",
                "description": "Returns all transactions for a given address or script pubkey, allowing insight into when the balance increased, decreased, or remained the same. Mempool data is included by default. This endpoint supports customization to narrow results by time, transaction type, or ordering, enabling tailored historical views.",
                "operationId": "wallet_satoshi_activity_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only transactions included on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only transactions included on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "activity_kind",
                        "in": "query",
                        "description": "Only return transactions of a specific activity kind. Supported values: \"increase\" for transactions where satoshi balance increases, \"decrease\" for decrease, and \"self_transfer\" for transactions where satoshi balance remained the same.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/ActivityKindByAddress"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "exclude_self_transfers",
                        "in": "query",
                        "description": "Do not return self-transfer transactions - transactions in which satoshi balance did not increase or decrease.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "mempool",
                        "in": "query",
                        "description": "Include mempool data. Default: true.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolWalletPaginatedActivityByAddress"
                                },
                                "example": "{\n    \"data\": [{\n        \"height\": 901937,\n        \"confirmations\": 1,\n        \"mempool\": false,\n        \"tx_hash\": \"7032180634bc691471b92099250b9370e07a0c8c8ca1420e518806404c7b6cf3\",\n        \"sat_activity\": {\n            \"kind\": \"increase\",\n            \"amount\": \"603733\",\n            \"usd_amount\": \"629.17\"\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000001ae26ce7b25ef2bd13f4c0069b634a233b1472f0c0a17\",\n            \"block_height\": 901937\n        },\n        \"mempool_timestamp\": \"2025-06-19 19:57:37\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901938,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 99\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/wallet/addresses/{address}/activity/metaprotocols": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Metaprotocol Activity by Address",
                "description": "Return all transactions where the specified address has satoshi and/or metaprotocols activity. Supported metaprotocols: runes, inscriptions.",
                "operationId": "wallet_metaprotocol_activity_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only UTxOs created on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only UTxOs created on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "mempool",
                        "in": "query",
                        "description": "Include mempool data. Default: true.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolWalletPaginatedActivityByAddressWithMetaprotocols"
                                },
                                "example": "{\n    \"data\": [{\n        \"height\": 902042,\n        \"confirmations\": 11,\n        \"mempool\": false,\n        \"tx_hash\": \"fc3038613cf290a7a015f0aa1d09ebac83309f2311a56ec27e36f6252bc2c691\",\n        \"sat_activity\": {\n            \"kind\": \"increase\",\n            \"amount\": \"24609392\",\n            \"usd_amount\": \"26087.92\"\n        },\n        \"inscription_activity\": null,\n        \"rune_activity\": null\n    }, {\n        \"height\": 902046,\n        \"confirmations\": 7,\n        \"mempool\": false,\n        \"tx_hash\": \"c61f87fb686dde38a7b002a2cf1577d9ae652e95580ee586a2c8cfac67201351\",\n        \"sat_activity\": {\n            \"kind\": \"decrease\",\n            \"amount\": \"24609392\",\n            \"usd_amount\": \"26109.83\"\n        },\n        \"inscription_activity\": null,\n        \"rune_activity\": null\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000001e6fd78ccfda2ab7a9d5a67558714b982e735c3eed525\",\n            \"block_height\": 902052\n        },\n        \"mempool_timestamp\": \"2025-06-20 13:41:40\",\n        \"estimated_blocks\": [{\n            \"block_height\": 902053,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 3,\n                \"max\": 40\n            }\n        }]\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/wallet/addresses/{address}/balance/historical": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Historical Satoshi Balance by Address",
                "description": "Returns the historical satoshi balances, itemized by block and including USD price.",
                "operationId": "wallet_historical_satoshi_balance_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tb1qphcdyah2e4vtpxn56hsz3p6kapg90pl4x525kc"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only blocks included on or after a specific height or timestamps. If this parameter is not provided, the starting point will be the first block where the address has seen its balance increase or decrease.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only blocks included on or before a specific height or timestamp",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "height_params",
                        "in": "query",
                        "description": "Whether the from and to integer query params should be read as timestamps or as block heights. True (the default) means from and to params should be read as block heights.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHistoricalSatBalanceByAddress"
                                },
                                "example": "{\n    \"data\": [{\n        \"height\": 899903,\n        \"confirmations\": 932,\n        \"unix_timestamp\": 1749126863,\n        \"timestamp\": \"2025-06-05 12:34:23\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899904,\n        \"confirmations\": 931,\n        \"unix_timestamp\": 1749126892,\n        \"timestamp\": \"2025-06-05 12:34:52\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.59\"\n    }, {\n        \"height\": 899905,\n        \"confirmations\": 930,\n        \"unix_timestamp\": 1749126924,\n        \"timestamp\": \"2025-06-05 12:35:24\",\n        \"sat_balance\": \"155191\",\n        \"usd_balance\": \"163.56\"\n    }],\n    \"last_updated\": {\n        \"block_hash\": \"000000000000000000014ba9b2d30d9c737423c753c5b6a27989815ed50afe04\",\n        \"block_height\": 900834\n    },\n    \"next_cursor\": null\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "404": {
                        "description": "Requested entity not found on-chain"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/wallet/addresses/{address}/inscriptions/activity": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Inscription Activity by Address (Mempool-aware)",
                "description": "Returns all inscription-related transactions involving a specific address. Can be filtered by activity type (send, receive, self-transfer), narrowed to a specific inscription, and sorted chronologically. Mempool data is included by default. Useful for building dashboards, tracking user behavior, or filtering unwanted spam activity.",
                "operationId": "wallet_inscription_activity_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only transactions created on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only transactions created on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "inscription_id",
                        "in": "query",
                        "description": "Return only transactions containing a specific inscription, specified by an inscription ID. In presence of activity_kind, it relates to this specific inscription. In presence of exclude_self_transfers, it is this specific inscription that should be sent or received but not self-transferred.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "example": "6fb976ab49dcec017f1e201e84395983204ae1a7c2abf7ced0a85d692e442799i0"
                    },
                    {
                        "name": "activity_kind",
                        "in": "query",
                        "description": "Filter txs by presence of specific activity kind. Supported values: send, receive, self_transfer. In presence of inscription filter, the activity kind relates to that specific inscription. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/InscriptionActivityKindByAddress"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "exclude_self_transfers",
                        "in": "query",
                        "description": "Exclude txs only containing inscriptions self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of inscription filter, that specific inscription should be sent or received, not self-transferred.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "mempool",
                        "in": "query",
                        "description": "Include mempool data. Default: true.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolWalletPaginatedInscriptionActivityByAddress"
                                },
                                "example": "{\n    \"data\": [{\n        \"height\": 901787,\n        \"confirmations\": 0,\n        \"mempool\": true,\n        \"tx_hash\": \"cf5caab63c40314fdd2f421b19541f9b25926d2a6318845ad8bc3266b4b8a8be\",\n        \"inscription_activity\": {\n            \"self_transferred\": [],\n            \"sent\": [],\n            \"received\": [{\n                \"inscription_id\": \"1e6f91f13fe9a4359e1b9d6e7723cacb815d250337dab921f7b90fca62913e73i577\",\n                \"from\": {\n                    \"address\": \"bc1q8jtuypcd0p9v7eu8zq9uhd42tvy6gwh89zuchh\",\n                    \"script_pubkey\": \"00143c97c2070d784acf6787100bcbb6aa5b09a43ae7\",\n                    \"input_index\": 0,\n                    \"sat_offset\": 0\n                },\n                \"to\": {\n                    \"address\": \"bc1pck742mdgmrd473upp553jj5x2w62q6mzd3enxjdegrxx2sc7rcmqnndp86\",\n                    \"script_pubkey\": \"5120c5bd556da8d8db5f47810d29194a8653b4a06b626c733349b940cc65431e1e36\",\n                    \"output_vout\": 0,\n                    \"sat_offset\": 0,\n                    \"output_txid\": \"cf5caab63c40314fdd2f421b19541f9b25926d2a6318845ad8bc3266b4b8a8be\"\n                }\n            }]\n        }\n    }, {\n        \"height\": 901780,\n        \"confirmations\": 7,\n        \"mempool\": false,\n        \"tx_hash\": \"09b6730e0f11f87c31f8d4977785292e9c741b16834d59a0b2f352ee01a43e91\",\n        \"inscription_activity\": {\n            \"self_transferred\": [],\n            \"sent\": [],\n            \"received\": [{\n                \"inscription_id\": \"a8a3f114d24e0e270a4d66457ff1ca1d11eb21d4daa02ffcd1b643a1c6731a2ci1388\",\n                \"from\": {\n                    \"address\": \"bc1p7jwyezderr5qxepw57fepw9dmdetn9pqkj2e3m7ufffthspdj5aqdxsdw5\",\n                    \"script_pubkey\": \"5120f49c4c89b918e803642ea79390b8addb72b99420b49598efdc4a52bbc02d953a\",\n                    \"input_index\": 0,\n                    \"sat_offset\": 0\n                },\n                \"to\": {\n                    \"address\": \"bc1pck742mdgmrd473upp553jj5x2w62q6mzd3enxjdegrxx2sc7rcmqnndp86\",\n                    \"script_pubkey\": \"5120c5bd556da8d8db5f47810d29194a8653b4a06b626c733349b940cc65431e1e36\",\n                    \"output_vout\": 0,\n                    \"sat_offset\": 0,\n                    \"output_txid\": \"09b6730e0f11f87c31f8d4977785292e9c741b16834d59a0b2f352ee01a43e91\"\n                }\n            }]\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000d7398966d32c809e5acad484574547150c97d39eea91\",\n            \"block_height\": 901786\n        },\n        \"mempool_timestamp\": \"2025-06-18 16:28:43\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901787,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 5,\n                \"max\": 991\n            }\n        }]\n    },\n    \"next_cursor\": \"Aw3ClAEBkT6kAe5S87KgWU2DFht0nC4phXeX1PgxfPgRDw5ztgk\"\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/wallet/addresses/{address}/runes/activity": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Rune Activity by Address (Mempool-aware)",
                "description": "Return all transactions where the specified address has rune activity, with the option to filter by a specific rune kind. Mempool data is included by default.",
                "operationId": "wallet_rune_activity_by_address",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bc1p27j3fa2mr3d50m3uaavr0ntyzr0v2a27n48lc9gxpkzd4xye6dgs2tzx6p"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which the results are sorted. Supported values: asc, desc",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "string",
                                    "default": "asc",
                                    "enum": ["asc", "desc"]
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "The max number of results per page",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "type": "integer",
                                    "default": 100,
                                    "minimum": 0
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Return only transactions created on or after a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Return only transactions created on or before a specific height",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": true,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Pagination cursor string, use the cursor included in a page of results to fetch the next page",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "rune",
                        "in": "query",
                        "description": "Return only transactions containing a specific rune, specified either by the rune ID (etching block number and transaction index) or name (spaced or un-spaced). In presence of activity_kind, it relates to this specific rune. In presence of exclude_self_transfers, it is this specific rune that the queried address should see increase or decrease in balance in the tx, not just being self-transferred.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "nullable": true
                        },
                        "example": "840000:3"
                    },
                    {
                        "name": "activity_kind",
                        "in": "query",
                        "description": "Filter txs by presence specific activity kind. Supported values: increased, decreased, self_transfer. In presence of rune filter, the activity kind relates to that specific rune. In presence of exclude_self_transfers, this activity kind cannot be self_transfer.",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/RuneActivityKindByAddress"
                                }
                            ],
                            "nullable": true
                        }
                    },
                    {
                        "name": "exclude_self_transfers",
                        "in": "query",
                        "description": "Exclude txs only containing runes self-transfers. In presence of activity_kind, it cannot be self_transfer. In presence of rune filter, that specific rune should be sent or received, not self-transferred.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    },
                    {
                        "name": "mempool",
                        "in": "query",
                        "description": "Include mempool data. Default: true.",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolWalletPaginatedRuneActivityByAddress"
                                },
                                "example": "{\n    \"data\": [{\n        \"height\": 901674,\n        \"confirmations\": 0,\n        \"mempool\": true,\n        \"tx_hash\": \"2264aa2f8ec653067a98f35c7e762cff248410dbb13408629ce0ed4ca6444dd1\",\n        \"rune_activity\": {\n            \"etched_rune\": null,\n            \"minted\": null,\n            \"self_transfers\": [],\n            \"increased_balances\": [],\n            \"decreased_balances\": [{\n                \"rune_id\": \"845764:84\",\n                \"amount\": \"20000\"\n            }]\n        }\n    }],\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000a30d9d5025c11b17b2c44b176de0e284c84f59dacebb\",\n            \"block_height\": 901673\n        },\n        \"mempool_timestamp\": \"2025-06-17 21:38:09\",\n        \"estimated_blocks\": [{\n            \"block_height\": 901674,\n            \"sats_per_vb\": {\n                \"min\": 1,\n                \"median\": 4,\n                \"max\": 300\n            }\n        }]\n    },\n    \"next_cursor\": \"Aw3CKgEl0U1Epkzt4JxiCDSx2xCEJP8sdn5c85h6BlPGji-qZCI\"\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/wallet/addresses/{address}/statistics": {
            "get": {
                "tags": ["Addresses"],
                "summary": "Address Statistics (Mempool-aware)",
                "description": "Returns all current statistics of the address: total txs the address was involved in, total unspent outputs controlled by the address, current satoshi, control of any runes and inscription balance, distinguishing between confirmed and pending (still in the mempool) data.",
                "operationId": "wallet_address_statistics",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Bitcoin address or hex encoded script pubkey",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolWalletTimestampedAddressStatistics"
                                },
                                "example": "{\n    \"data\": {\n        \"total_txs\": 1,\n        \"total_utxos\": 1,\n        \"runes\": false,\n        \"total_inscriptions\": 0,\n        \"sat_balance\": \"1881005\",\n        \"usd_balance\": \"1931.60\",\n        \"pending\": {\n            \"txs\": 1,\n            \"utxos\": 0,\n            \"sat_balance\": \"-97099\",\n            \"usd_balance\": \"-99.71\"\n        }\n    },\n    \"indexer_info\": {\n        \"chain_tip\": {\n            \"block_hash\": \"00000000000000000000470ac91070a0b8f710552c62901d14ca8735140f45fc\",\n            \"block_height\": 902075\n        },\n        \"mempool_timestamp\": \"2025-06-20 17:47:30\",\n        \"estimated_blocks\": [{\n            \"block_height\": 902076,\n            \"sats_per_vb\": {\n              \"min\": 1,\n              \"median\": 4,\n              \"max\": 199\n            }\n        }]\n    }\n}"
                            }
                        }
                    },
                    "400": {
                        "description": "Malformed query parameters"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityKindByAddress": {
                "type": "string",
                "enum": ["self_transfer", "increase", "decrease"]
            },
            "BlockSatsPerVb": {
                "type": "object",
                "description": "For transactions within a block, these are the lowest, median and highest\nsatoshis per virtual-byte values.",
                "required": ["min", "median", "max"],
                "properties": {
                    "max": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Highest sat/vB value of the transactions within the block",
                        "example": 255,
                        "minimum": 0
                    },
                    "median": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Median sat/vB value of the transactions within the block",
                        "example": 15,
                        "minimum": 0
                    },
                    "min": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Lowest sat/vB value of the transactions within the block",
                        "example": 11,
                        "minimum": 0
                    }
                }
            },
            "ChainTip": {
                "type": "object",
                "required": ["block_hash", "block_height"],
                "properties": {
                    "block_hash": {
                        "type": "string",
                        "description": "The hash of the block",
                        "example": "0000000000000000000a7f3b7b6b6e1d9a18db65a3b4a3f4f3bcb2e1f1b2d3e7"
                    },
                    "block_height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "The height of the block in the blockchain",
                        "example": 707000,
                        "minimum": 0
                    }
                }
            },
            "EstimatedBlock": {
                "type": "object",
                "required": ["block_height", "sats_per_vb"],
                "properties": {
                    "block_height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of the estimated block",
                        "example": "707001",
                        "minimum": 0
                    },
                    "sats_per_vb": {
                        "$ref": "#/components/schemas/BlockSatsPerVb"
                    }
                }
            },
            "EtchAndPremine": {
                "type": "object",
                "required": ["rune_id"],
                "properties": {
                    "premined_amount": {
                        "type": "string",
                        "description": "Amount of premined runes.",
                        "nullable": true
                    },
                    "rune_id": {
                        "type": "string",
                        "description": "Rune ID."
                    }
                }
            },
            "FromInscriptionLocation": {
                "type": "object",
                "required": ["script_pubkey", "input_index", "sat_offset"],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address-encoding of the script pubkey at which the input containing the inscription resides.",
                        "nullable": true
                    },
                    "input_index": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Index of the input containing the inscription.",
                        "minimum": 0
                    },
                    "sat_offset": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Offset of the inscribed satoshi within the input.",
                        "minimum": 0
                    },
                    "script_pubkey": {
                        "type": "string",
                        "description": "Script pubkey at which the input containing the inscription resides."
                    }
                }
            },
            "HistoricalSatBalanceByAddress": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "unix_timestamp",
                    "timestamp",
                    "sat_balance",
                    "usd_balance"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Block height.",
                        "minimum": 0
                    },
                    "sat_balance": {
                        "type": "string",
                        "description": "Satoshi balance of the address at the end of this block."
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "The timestamp of the block, as claimed by the miner, in UTC format."
                    },
                    "unix_timestamp": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The timestamp of the block, as claimed by the miner, in UNIX format.",
                        "minimum": 0
                    },
                    "usd_balance": {
                        "type": "string",
                        "description": "USD balance if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block was mined."
                    }
                }
            },
            "InscriptionActivity": {
                "type": "object",
                "required": ["self_transferred", "sent", "received"],
                "properties": {
                    "received": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionActivityByTx"
                        },
                        "description": "List of inscriptions which the script gained control over."
                    },
                    "self_transferred": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionActivityByTx"
                        },
                        "description": "List of inscriptions that were self-transferred in the transaction."
                    },
                    "sent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InscriptionActivityByTx"
                        },
                        "description": "List of inscriptions which the script lost control of."
                    }
                }
            },
            "InscriptionActivityByAddress": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "tx_hash",
                    "inscription_activity"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of block containing the inscription activity.",
                        "minimum": 0
                    },
                    "inscription_activity": {
                        "$ref": "#/components/schemas/InscriptionActivity"
                    },
                    "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction containing the inscription activity."
                    }
                }
            },
            "InscriptionActivityByTx": {
                "type": "object",
                "required": ["inscription_id", "to"],
                "properties": {
                    "from": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FromInscriptionLocation"
                            }
                        ],
                        "nullable": true
                    },
                    "inscription_id": {
                        "type": "string",
                        "description": "String representation of the inscription ID, whose first coordinate is the reveal transaction hash, and the second coordinate is the index of inscription in the reveal transaction."
                    },
                    "to": {
                        "$ref": "#/components/schemas/ToInscriptionLocation"
                    }
                }
            },
            "InscriptionActivityKindByAddress": {
                "type": "string",
                "enum": ["self_transfer", "send", "receive"]
            },
            "InscriptionAndOffset": {
                "type": "object",
                "required": ["offset", "inscription_id"],
                "properties": {
                    "inscription_id": {
                        "type": "string"
                    },
                    "offset": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                    }
                }
            },
            "MempoolLastUpdated": {
                "type": "object",
                "required": ["chain_tip", "estimated_blocks"],
                "properties": {
                    "chain_tip": {
                        "$ref": "#/components/schemas/ChainTip"
                    },
                    "estimated_blocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EstimatedBlock"
                        },
                        "description": "Information about any estimated blocks from the mempool that were indexed in addition to the mainchain"
                    },
                    "mempool_timestamp": {
                        "type": "string",
                        "description": "Timestamp of the indexed mempool snapshot, if any estimated blocks from the mempool have been indexed",
                        "nullable": true
                    }
                }
            },
            "MempoolWalletPaginatedActivityByAddress": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletActivityByAddress"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolWalletPaginatedActivityByAddressWithMetaprotocols": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletActivityByAddressWithMetaprotocols"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolWalletPaginatedInscriptionActivityByAddress": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletInscriptionActivityByAddress"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolWalletPaginatedRuneActivityByAddress": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WalletRuneActivityByAddress"
                        }
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "MempoolWalletTimestampedAddressStatistics": {
                "type": "object",
                "required": ["data", "indexer_info"],
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/WalletAddressStatistics"
                    },
                    "indexer_info": {
                        "$ref": "#/components/schemas/MempoolLastUpdated"
                    }
                }
            },
            "PaginatedHistoricalSatBalanceByAddress": {
                "type": "object",
                "required": ["data", "last_updated"],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HistoricalSatBalanceByAddress"
                        }
                    },
                    "last_updated": {
                        "$ref": "#/components/schemas/ChainTip"
                    },
                    "next_cursor": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PendingAddressStatistics": {
                "type": "object",
                "required": ["txs", "utxos", "sat_balance", "usd_balance"],
                "properties": {
                    "sat_balance": {
                        "type": "string",
                        "description": "Estimated difference in sat balance between mempool and confirmed data."
                    },
                    "txs": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Estimated number of new txs from the mempool where the address controls at least an input or an output.",
                        "minimum": 0
                    },
                    "usd_balance": {
                        "type": "string",
                        "description": "Estimated USD balance difference if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
                    },
                    "utxos": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Estimated difference in number of UTxOs between mempool and confirmed data."
                    }
                }
            },
            "RuneActivity": {
                "type": "object",
                "required": [
                    "self_transfers",
                    "increased_balances",
                    "decreased_balances"
                ],
                "properties": {
                    "decreased_balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        },
                        "description": "List of runes and amounts, corresponding to decreased balances for this address."
                    },
                    "etched_rune": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EtchAndPremine"
                            }
                        ],
                        "nullable": true
                    },
                    "increased_balances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        },
                        "description": "List of runes and amounts, corresponding to increased balances for this address."
                    },
                    "minted": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RuneAndAmount"
                            }
                        ],
                        "nullable": true
                    },
                    "self_transfers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RuneAndAmount"
                        },
                        "description": "List of runes that were self-transferred."
                    }
                }
            },
            "RuneActivityKindByAddress": {
                "type": "string",
                "enum": ["self_transfer", "increase", "decrease"]
            },
            "RuneAndAmount": {
                "type": "object",
                "required": ["rune_id", "amount"],
                "properties": {
                    "amount": {
                        "type": "string"
                    },
                    "rune_id": {
                        "type": "string"
                    }
                }
            },
            "ToInscriptionLocation": {
                "type": "object",
                "required": [
                    "script_pubkey",
                    "output_vout",
                    "sat_offset",
                    "output_txid"
                ],
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address-encoding of the script pubkey at which the output containing the inscription resides.",
                        "nullable": true
                    },
                    "output_txid": {
                        "type": "string",
                        "description": "Hash of tx producing the output containing the inscription. If this is the hash of the coinbase tx of the block, then the inscription was spent as fee in a tx in the block and therefore sent to the output of the coinbase tx controlled by the block miner."
                    },
                    "output_vout": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Index of the output containing the inscription.",
                        "minimum": 0
                    },
                    "sat_offset": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Offset of the inscribed satoshi within the output.",
                        "minimum": 0
                    },
                    "script_pubkey": {
                        "type": "string",
                        "description": "Script pubkey at which the output containing the inscription resides."
                    }
                }
            },
            "WalletActivityByAddress": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "mempool",
                    "tx_hash",
                    "sat_activity"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of block containing the satoshi activity.",
                        "minimum": 0
                    },
                    "mempool": {
                        "type": "boolean",
                        "description": "Whether the data is pending (true) or confirmed (false)."
                    },
                    "sat_activity": {
                        "$ref": "#/components/schemas/WalletSatActivity"
                    },
                    "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction containing the satoshi activity."
                    }
                }
            },
            "WalletActivityByAddressWithMetaprotocols": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "mempool",
                    "tx_hash",
                    "sat_activity"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of block containing the satoshi activity.",
                        "minimum": 0
                    },
                    "inscription_activity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InscriptionActivity"
                            }
                        ],
                        "nullable": true
                    },
                    "mempool": {
                        "type": "boolean",
                        "description": "Whether the data is pending (true) or confirmed (false)."
                    },
                    "rune_activity": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RuneActivity"
                            }
                        ],
                        "nullable": true
                    },
                    "sat_activity": {
                        "$ref": "#/components/schemas/WalletSatActivity"
                    },
                    "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction containing the satoshi activity."
                    }
                }
            },
            "WalletAddressStatistics": {
                "type": "object",
                "required": [
                    "total_txs",
                    "total_utxos",
                    "runes",
                    "total_inscriptions",
                    "sat_balance",
                    "usd_balance",
                    "pending"
                ],
                "properties": {
                    "pending": {
                        "$ref": "#/components/schemas/PendingAddressStatistics"
                    },
                    "runes": {
                        "type": "boolean",
                        "description": "Existence of runes controlled by the address."
                    },
                    "sat_balance": {
                        "type": "string",
                        "description": "Current satoshi balance controlled by the address."
                    },
                    "total_inscriptions": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of inscriptions currently controlled by the address.",
                        "minimum": 0
                    },
                    "total_txs": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of transactions where the address controlled at least an input or an output.",
                        "minimum": 0
                    },
                    "total_utxos": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total number of UTxOs (unspent outputs) controlled by the address.",
                        "minimum": 0
                    },
                    "usd_balance": {
                        "type": "string",
                        "description": "USD balance if sat balance was exchanged. The exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
                    }
                }
            },
            "WalletInscriptionActivityByAddress": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "mempool",
                    "tx_hash",
                    "inscription_activity"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of block containing the inscription activity.",
                        "minimum": 0
                    },
                    "inscription_activity": {
                        "$ref": "#/components/schemas/InscriptionActivity"
                    },
                    "mempool": {
                        "type": "boolean",
                        "description": "Whether the data is pending (true) or confirmed (false)."
                    },
                    "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction containing the inscription activity."
                    }
                }
            },
            "WalletRuneActivityByAddress": {
                "type": "object",
                "required": [
                    "height",
                    "confirmations",
                    "mempool",
                    "tx_hash",
                    "rune_activity"
                ],
                "properties": {
                    "confirmations": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Number of confirmation blocks.",
                        "minimum": 0
                    },
                    "height": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Height of block containing the rune activity.",
                        "minimum": 0
                    },
                    "mempool": {
                        "type": "boolean",
                        "description": "Whether the data is pending (true) or confirmed (false)."
                    },
                    "rune_activity": {
                        "$ref": "#/components/schemas/RuneActivity"
                    },
                    "tx_hash": {
                        "type": "string",
                        "description": "Hash of transaction containing the rune activity."
                    }
                }
            },
            "WalletSatActivity": {
                "type": "object",
                "required": ["kind", "amount", "usd_amount"],
                "properties": {
                    "amount": {
                        "type": "string",
                        "description": "Amount of satoshis involved in the activity."
                    },
                    "kind": {
                        "$ref": "#/components/schemas/ActivityKindByAddress"
                    },
                    "usd_amount": {
                        "type": "string",
                        "description": "USD amount if sat amount was exchanged to USD. If the block is confirmed, the exchange rate is that between USD and BTC at the time the block was mined. If the block is pending (mempool transaction), then the exchange rate is that between USD and BTC at the time the block at the tip of the chain was mined."
                    }
                }
            }
        },
        "securitySchemes": {
            "api-key": {
                "type": "apiKey",
                "in": "header",
                "name": "api-key",
                "description": "Project API Key"
            }
        }
    },
    "security": [
        {
            "api-key": []
        }
    ]
}
