{
    "openapi": "3.0.3",
    "info": {
        "title": "Bitcoin - Esplora API",
        "version": "1.0.0",
        "description": "OpenAPI spec for core Esplora endpoints: blocks, transactions, addresses, mempool, fees, UTXO data and more.\n"
    },
    "servers": [
        {
            "url": "https://xbt-mainnet.gomaestro-api.org/v0/esplora"
        },
        {
            "url": "https://xbt-testnet.gomaestro-api.org/v0/esplora"
        }
    ],
    "paths": {
        "/address/{address}": {
            "get": {
                "summary": "Address",
                "description": "Returns details about an address. Available fields: address, chain_stats, and mempool_stats. chain_stats and mempool_stats each contain an object with tx_count, funded_txo_count, funded_txo_sum, spent_txo_count, and spent_txo_sum.",
                "operationId": "esplora_address_details",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                        },
                        "description": "Bitcoin address to query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address information returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressInfo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "tags": ["Addresses"]
            }
        },
        "/address/{address}/txs": {
            "get": {
                "summary": "Address Transactions",
                "description": "Get transaction history for the specified address/scripthash, sorted with newest first. Returns up to 50 mempool transactions plus the first 25 confirmed transactions. You can request more confirmed transactions using an after_txid query parameter.",
                "operationId": "esplora_address_transactions",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                        },
                        "description": "The Bitcoin address to query."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of transactions related to the address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "tags": ["Addresses"]
            }
        },
        "/address/{address}/txs/chain": {
            "get": {
                "summary": "Address Transactions Chain",
                "description": "Get confirmed transaction history for the specified address/scripthash, sorted with newest first. Returns 25 transactions per page. More can be requested by specifying the last txid seen by the previous query.",
                "operationId": "esplora_address_transactions_chain",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The Bitcoin address to query.",
                        "schema": {
                            "type": "string",
                            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A paginated list of confirmed transactions for the given address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address or txid"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "tags": ["Addresses"]
            }
        },
        "/address/{address}/txs/mempool": {
            "get": {
                "summary": "Address Transactions Mempool",
                "description": "Get unconfirmed transaction history for the specified address/scripthash. Returns up to 50 transactions (no paging).",
                "operationId": "esplora_address_transactions_mempool",
                "tags": ["Addresses"],
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                        },
                        "description": "The Bitcoin address whose unconfirmed transactions should be retrieved."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of mempool transactions associated with the address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address format."
                    },
                    "404": {
                        "description": "Address not found or no unconfirmed transactions."
                    }
                }
            }
        },
        "/address/{address}/utxo": {
            "get": {
                "summary": "Address UTXOs",
                "description": "Get the list of unspent transaction outputs associated with the address/scripthash. Available fields: txid, vout, value, and status (with the status of the funding tx).",
                "operationId": "esplora_address_utxos",
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "required": true,
                        "description": "The Bitcoin address to query.",
                        "schema": {
                            "type": "string",
                            "example": "bc1qcx7ys0ahvtfqcc63sfn6axls0qrhkadnslpd94"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of UTXOs for the address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Utxo"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid address"
                    },
                    "404": {
                        "description": "Address not found"
                    }
                },
                "tags": ["Addresses"]
            }
        },
        "/block/{hash}": {
            "get": {
                "summary": "Block",
                "description": "Returns details about a block.",
                "operationId": "esplora_block_details",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        },
                        "description": "The block hash to retrieve information for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Block"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/header": {
            "get": {
                "summary": "Block Header",
                "description": "Returns the hex-encoded block header.",
                "operationId": "esplora_block_header",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        },
                        "description": "The hash of the block to retrieve the header for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Raw block header as hex",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockHeader",
                                    "type": "string",
                                    "example": "00000020e91f...2d1e4dbb65"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block hash"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/status": {
            "get": {
                "summary": "Block Status",
                "description": "Returns the confirmation status of a block. Available fields: in_best_chain (boolean, false for orphaned blocks), next_best (the hash of the next block, only available for blocks in the best chain).",
                "operationId": "esplora_block_status",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "The block hash to query",
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block status response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockStatus"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block hash"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/txs/{start_index}": {
            "get": {
                "summary": "Get block transactions",
                "description": "Returns a list of transactions in the block (up to 25 transactions beginning at start_index). Transactions returned here do not have the status field, since all the transactions share the same block and confirmation status.",
                "operationId": "esplora_block_transactions",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "The block hash.",
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        }
                    },
                    {
                        "name": "start_index",
                        "in": "path",
                        "required": true,
                        "description": "Index to start fetching transactions from (pagination).",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of transactions in the block.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Transaction"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/txids": {
            "get": {
                "summary": "Block Transaction IDs",
                "description": "Returns a list of all txids in the block.",
                "operationId": "esplora_block_txids",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        },
                        "description": "The hash of the block to query."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of transaction IDs in the block.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockTxids"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block hash."
                    },
                    "404": {
                        "description": "Block not found."
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/txid/{index}": {
            "get": {
                "summary": "Block Transaction ID",
                "description": "Returns the transaction at index :index within the specified block.",
                "operationId": "esplora_block_txid_by_index",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "The block hash.",
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        }
                    },
                    {
                        "name": "index",
                        "in": "path",
                        "required": true,
                        "description": "The transaction index within the block.",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction ID at the specified index",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block hash or index"
                    },
                    "404": {
                        "description": "Block or transaction not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block/{hash}/raw": {
            "get": {
                "summary": "Block Raw",
                "description": "Returns the raw block representation in binary.",
                "operationId": "esplora_block_raw",
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "description": "The hash of the block",
                        "schema": {
                            "type": "string",
                            "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Raw block data in binary format",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block hash"
                    },
                    "404": {
                        "description": "Block not found"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/blocks/{start_height}": {
            "get": {
                "summary": "Blocks",
                "description": "Returns details on the past 10 blocks. If :startHeight is specified, the 10 blocks before (and including) :startHeight are returned.",
                "operationId": "esplora_blocks",
                "parameters": [
                    {
                        "name": "start_height",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The block height to start from."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of 10 blocks starting from the given height",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Block"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block height"
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/block-height/{height}": {
            "get": {
                "summary": "Block Height",
                "description": "Returns the hash of the block currently at :height.",
                "operationId": "esplora_block_hash_by_height",
                "parameters": [
                    {
                        "name": "height",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 804000
                        },
                        "description": "The height of the block."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Block hash as plain text.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "00000000000000000001b9dca5d168a8e959df258814beec486572e843fddee5"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid block height supplied."
                    },
                    "404": {
                        "description": "Block not found for the given height."
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/blocks/tip/height": {
            "get": {
                "summary": "Block Tip Height",
                "description": "Returns the height of the last block.",
                "operationId": "esplora_block_tip_height",
                "responses": {
                    "200": {
                        "description": "Block height of the latest block",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockHeight"
                                }
                            }
                        }
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/blocks/tip/hash": {
            "get": {
                "summary": "Block Tip Hash",
                "description": "Returns the hash of the last block.",
                "operationId": "esplora_block_tip_hash",
                "responses": {
                    "200": {
                        "description": "Block hash string of the latest block",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlockHash"
                                }
                            }
                        }
                    }
                },
                "tags": ["Blocks"]
            }
        },
        "/mempool": {
            "get": {
                "summary": "Mempool",
                "description": "Returns current mempool backlog statistics.",
                "operationId": "esplora_mempool_stats",
                "responses": {
                    "200": {
                        "description": "Aggregated mempool data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolStats"
                                },
                                "examples": {
                                    "example": {
                                        "value": {
                                            "count": 8134,
                                            "vsize": 3444604,
                                            "total_fee": 29204625,
                                            "fee_histogram": [
                                                [53.01, 102131],
                                                [38.56, 110990],
                                                [34.12, 138976],
                                                [24.34, 112619],
                                                [3.16, 246346],
                                                [2.92, 239701],
                                                [1.1, 775272]
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Mempool"]
            }
        },
        "/mempool/txids": {
            "get": {
                "summary": "Mempool Transaction IDs",
                "description": "Get the full list of txids in the mempool as an array. The order of the txids is arbitrary and does not match bitcoind.",
                "operationId": "esplora_mempool_txids",
                "responses": {
                    "200": {
                        "description": "List of transaction IDs currently in the mempool.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MempoolTxids"
                                },
                                "examples": {
                                    "example": {
                                        "value": [
                                            "4d3c8f5b2378c9c1eaa228d594d2c693fae3e9f2b3e6b18344f973f1e5a3e13a",
                                            "5a76bcb30e10a7d5f6a8f37d7df12a89f4e171cf0ecfe5bd5d22b53f5cc9f6cf"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Mempool"]
            }
        },
        "/mempool/recent": {
            "get": {
                "summary": "Mempool Recent",
                "description": "Get a list of the last 10 transactions to enter the mempool. Each transaction object contains simplified overview data, with the following fields: txid, fee, vsize, and value.",
                "operationId": "esplora_mempool_recent",
                "responses": {
                    "200": {
                        "description": "A list of recent mempool transactions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/MempoolRecentTx"
                                    }
                                },
                                "examples": {
                                    "example": {
                                        "value": [
                                            {
                                                "txid": "f3c21f...",
                                                "fee": 426,
                                                "vsize": 141,
                                                "value": 12500
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": ["Mempool"]
            }
        },
        "/tx/{txid}": {
            "get": {
                "summary": "Transaction",
                "description": "Returns details about a transaction. Available fields: txid, version, locktime, size, weight, fee, vin, vout, and status.",
                "operationId": "esplora_transaction_details",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "The transaction ID to look up."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Transaction"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/hex": {
            "get": {
                "summary": "Transaction Hex",
                "description": "Returns a transaction serialized as hex.",
                "operationId": "esplora_transaction_hex",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "description": "Transaction ID of the transaction to fetch.",
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Raw transaction hex string.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionHex"
                                },
                                "example": "02000000000101ad0c...00000000"
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/merkleblock-proof": {
            "get": {
                "summary": "Transaction Merkleblock Proof",
                "description": "Returns a merkle inclusion proof for the transaction using bitcoind's merkleblock format.",
                "operationId": "esplora_transaction_merkleblock_proof",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "The transaction ID to retrieve the merkleblock proof for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merkleblock proof in binary format (as raw hex string)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary",
                                    "description": "Raw merkleblock proof binary data"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid txid format"
                    },
                    "404": {
                        "description": "Transaction not found or not confirmed"
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/merkle-proof": {
            "get": {
                "summary": "Transaction Merkle Proof",
                "description": "Returns a merkle inclusion proof for the transaction using Electrum's blockchain.transaction.get_merkle format.",
                "operationId": "esplora_transaction_merkle_proof",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "The transaction ID to get the merkle proof for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merkle inclusion proof data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MerkleProof"
                                },
                                "examples": {
                                    "example": {
                                        "value": {
                                            "block_height": 776302,
                                            "merkle": [
                                                "4a5e1e4b...",
                                                "b5b4e9f0..."
                                            ],
                                            "pos": 142
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found or not confirmed."
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/outspend/{vout}": {
            "get": {
                "summary": "Transaction Outspend",
                "description": "Returns the spending status of a transaction output. Available fields: spent (boolean), txid (optional), vin (optional), and status (optional, the status of the spending tx).",
                "operationId": "esplora_transaction_outspend",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "Transaction ID of the parent transaction."
                    },
                    {
                        "name": "vout",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        },
                        "description": "The output index within the transaction."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending status of the transaction output.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TxOutspend"
                                },
                                "examples": {
                                    "spent": {
                                        "value": {
                                            "spent": true,
                                            "txid": "abcdef123456...",
                                            "vin": 1,
                                            "status": {
                                                "confirmed": true,
                                                "block_height": 786000,
                                                "block_hash": "0000000000000000000abc...",
                                                "block_time": 1700000000
                                            }
                                        }
                                    },
                                    "unspent": {
                                        "value": {
                                            "spent": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction or output not found."
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/outspends": {
            "get": {
                "summary": "Transaction Outspends",
                "description": "Returns the spending status of all transaction outputs.",
                "operationId": "esplora_transaction_outspends",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "description": "The transaction ID (txid) to query.",
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spending status for each output in the transaction.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Outspend"
                                    }
                                },
                                "examples": {
                                    "example": {
                                        "value": [
                                            {
                                                "spent": true,
                                                "txid": "1a2b3c...",
                                                "vin": 0,
                                                "status": {
                                                    "confirmed": true,
                                                    "block_height": 776300,
                                                    "block_hash": "0000000000000000000b4d0a...",
                                                    "block_time": 1686300000
                                                }
                                            },
                                            {
                                                "spent": false
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found."
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/raw": {
            "get": {
                "summary": "Transaction Raw",
                "description": "Returns a transaction as binary data.",
                "operationId": "esplora_transaction_raw",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "The transaction ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Raw transaction hex string.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "example": "0200000000010124..."
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx/{txid}/rbf": {
            "get": {
                "summary": "Transaction RBF Timeline",
                "description": "Returns the RBF tree timeline of a transaction.",
                "operationId": "esplora_transaction_rbf_timeline",
                "tags": ["Transactions"],
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        },
                        "description": "The transaction ID to trace RBF replacements for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RBF replacement timeline for the transaction.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RbfReplacementRoot"
                                },
                                "examples": {
                                    "example": {
                                        "value": {
                                            "replacements": {
                                                "tx": {
                                                    "txid": "2e95ff9094df9f3650e3f2abc189250760162be89a88f9f2f23301c7cb14b8b4",
                                                    "fee": 1668,
                                                    "vsize": 276.75,
                                                    "value": 14849,
                                                    "rate": 4.8242,
                                                    "rbf": false,
                                                    "fullRbf": true
                                                },
                                                "time": 1703240261,
                                                "fullRbf": true,
                                                "replaces": []
                                            },
                                            "replaces": [
                                                "3f4670463daadffed07d7a1060071b07f7e81a2566eca21d78bb513cbf21c82a",
                                                "92f9b4f719d0ffc9035d3a9767d80c940cecbc656df2243bafd33f52b583ee92"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found or no RBF history available"
                    }
                }
            }
        },
        "/tx/{txid}/status": {
            "get": {
                "summary": "Transaction Status",
                "description": "Returns the confirmation status of a transaction. Available fields: confirmed (boolean), block_height (optional), and block_hash (optional).",
                "operationId": "esplora_transaction_status",
                "parameters": [
                    {
                        "name": "txid",
                        "in": "path",
                        "required": true,
                        "description": "Transaction ID to query.",
                        "schema": {
                            "type": "string",
                            "example": "d78b1139140848e646cfd7eb95868d2e01c600c3922de88038c591d2fb55cf96"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction confirmation status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TransactionStatus"
                                },
                                "examples": {
                                    "confirmed": {
                                        "value": {
                                            "confirmed": true,
                                            "block_height": 776402,
                                            "block_hash": "000000000000000000015fc7f9e5caa8b2e7cbfc7c8075c23f8c86f1aaed18e6"
                                        }
                                    },
                                    "unconfirmed": {
                                        "value": {
                                            "confirmed": false
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found"
                    }
                },
                "tags": ["Transactions"]
            }
        },
        "/tx": {
            "post": {
                "summary": "Transaction",
                "description": "Broadcast a raw transaction to the network. The transaction should be provided as hex in the request body. The txid will be returned on success.",
                "operationId": "esplora_broadcast_transaction",
                "requestBody": {
                    "description": "Hex-encoded raw transaction data.",
                    "required": true,
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string",
                                "example": "02000000000101c3..."
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns the transaction ID (txid) if successfully broadcast.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BroadcastResponse"
                                },
                                "examples": {
                                    "success": {
                                        "value": {
                                            "txid": "4d1b9a...."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid transaction format or missing body."
                    },
                    "500": {
                        "description": "Internal server error while processing the transaction."
                    }
                },
                "tags": ["Transactions"]
            }
        }
    },
    "components": {
        "schemas": {
            "AddressInfo": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "chain_stats": {
                        "$ref": "#/components/schemas/AddressStats"
                    },
                    "mempool_stats": {
                        "$ref": "#/components/schemas/AddressStats"
                    }
                },
                "required": ["address", "chain_stats", "mempool_stats"]
            },
            "AddressStats": {
                "type": "object",
                "properties": {
                    "tx_count": {
                        "type": "integer"
                    },
                    "funded_txo_count": {
                        "type": "integer"
                    },
                    "funded_txo_sum": {
                        "type": "integer"
                    },
                    "spent_txo_count": {
                        "type": "integer"
                    },
                    "spent_txo_sum": {
                        "type": "integer"
                    }
                },
                "required": [
                    "tx_count",
                    "funded_txo_count",
                    "funded_txo_sum",
                    "spent_txo_count",
                    "spent_txo_sum"
                ]
            },
            "AddressValidation": {
                "type": "object",
                "properties": {
                    "isvalid": { "type": "boolean" },
                    "address": { "type": "string" },
                    "scriptPubKey": { "type": "string" },
                    "isscript": { "type": "boolean" },
                    "iswitness": { "type": "boolean" },
                    "type": { "type": "string" }
                },
                "required": ["isvalid"]
            },
            "Block": {
                "type": "object",
                "properties": {
                    "id": { "type": "string", "description": "Block hash" },
                    "height": { "type": "integer" },
                    "version": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "mediantime": { "type": "integer" },
                    "bits": { "type": "integer" },
                    "nonce": { "type": "integer" },
                    "difficulty": { "type": "number" },
                    "merkle_root": { "type": "string" },
                    "tx_count": { "type": "integer" },
                    "size": { "type": "integer" },
                    "weight": { "type": "integer" },
                    "previousblockhash": { "type": "string" },
                    "extras": {
                        "type": "object",
                        "description": "Optional explorer-specific metadata"
                    }
                },
                "required": [
                    "id",
                    "height",
                    "version",
                    "timestamp",
                    "bits",
                    "nonce",
                    "merkle_root",
                    "tx_count",
                    "size",
                    "weight",
                    "previousblockhash"
                ]
            },
            "BlockV1": {
                "type": "object",
                "properties": {
                    "id": { "type": "string" },
                    "height": { "type": "integer" },
                    "version": { "type": "integer" },
                    "timestamp": { "type": "integer" },
                    "mediantime": { "type": "integer" },
                    "bits": { "type": "integer" },
                    "nonce": { "type": "integer" },
                    "difficulty": { "type": "number" },
                    "merkle_root": { "type": "string" },
                    "tx_count": { "type": "integer" },
                    "size": { "type": "integer" },
                    "weight": { "type": "integer" },
                    "previousblockhash": { "type": "string" },
                    "extras": {
                        "type": "object",
                        "properties": {
                            "pool": {
                                "type": "object",
                                "properties": {
                                    "name": { "type": "string" },
                                    "url": { "type": "string" }
                                }
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "height",
                    "timestamp",
                    "bits",
                    "nonce",
                    "tx_count",
                    "size",
                    "weight",
                    "previousblockhash"
                ]
            },
            "BlockHash": {
                "type": "string",
                "description": "SHA-256 hash of the latest block"
            },
            "BlockHeader": {
                "type": "string",
                "description": "Hex-encoded string representing the block header (80 bytes, 160 hex characters)"
            },
            "BlockHeight": {
                "type": "integer",
                "example": 850302,
                "description": "Height of the latest block on the best blockchain tip"
            },
            "BlockStatus": {
                "type": "object",
                "properties": {
                    "in_best_chain": {
                        "type": "boolean",
                        "description": "Whether the block is part of the best (main) chain"
                    },
                    "next_best": {
                        "type": "string",
                        "description": "Hash of the next block, if available"
                    }
                },
                "required": ["in_best_chain"]
            },
            "BlockTxids": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "A transaction ID (txid)"
                },
                "example": [
                    "5a7a9fe2c911c482c89a7ea1dbf35a7c9b68892ec5b2d92e93858a9f4a85b08e",
                    "b1fea5241d34b276c3f8a5a934ae9e5e2bb23ecad1c7426ec1dfde3e07aa55a9"
                ]
            },
            "RbfTransaction": {
                "type": "object",
                "properties": {
                    "txid": { "type": "string" },
                    "fee": { "type": "integer" },
                    "vsize": { "type": "number" },
                    "value": { "type": "integer" },
                    "rate": { "type": "number" },
                    "rbf": { "type": "boolean" },
                    "fullRbf": { "type": "boolean" }
                },
                "required": ["txid", "fee", "vsize", "value", "rate", "rbf"]
            },
            "RbfReplacedTx": {
                "type": "object",
                "properties": {
                    "tx": { "$ref": "#/components/schemas/RbfTransaction" },
                    "time": { "type": "integer" },
                    "interval": { "type": "integer" },
                    "fullRbf": { "type": "boolean" },
                    "replaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RbfReplacedTx"
                        }
                    }
                },
                "required": ["tx", "time", "fullRbf", "replaces"]
            },
            "RbfReplacementRoot": {
                "type": "object",
                "properties": {
                    "replacements": {
                        "type": "object",
                        "properties": {
                            "tx": {
                                "$ref": "#/components/schemas/RbfTransaction"
                            },
                            "time": { "type": "integer" },
                            "fullRbf": { "type": "boolean" },
                            "replaces": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RbfReplacedTx"
                                }
                            }
                        },
                        "required": ["tx", "time", "fullRbf", "replaces"]
                    },
                    "replaces": {
                        "type": "array",
                        "items": { "type": "string" }
                    }
                },
                "required": ["replacements", "replaces"]
            },
            "FullRbfStats": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "description": "Total number of transactions in the mempool."
                    },
                    "fullRBF": {
                        "type": "integer",
                        "description": "Number of transactions marked as full-RBF."
                    },
                    "optInRBF": {
                        "type": "integer",
                        "description": "Number of transactions marked as opt-in RBF (BIP125)."
                    },
                    "nonRBF": {
                        "type": "integer",
                        "description": "Number of transactions that are not RBF."
                    }
                },
                "required": ["total", "fullRBF", "optInRBF", "nonRBF"]
            },
            "CpfpRecommendation": {
                "type": "object",
                "properties": {
                    "vsize": {
                        "type": "integer",
                        "description": "Virtual size of the child transaction in vbytes."
                    },
                    "fee": {
                        "type": "integer",
                        "description": "Required fee for the child transaction in satoshis."
                    },
                    "totalVsize": {
                        "type": "integer",
                        "description": "Total virtual size of parent + child transaction."
                    },
                    "totalFee": {
                        "type": "integer",
                        "description": "Total required fee for parent + child."
                    },
                    "rate": {
                        "type": "number",
                        "description": "Effective fee rate (sat/vB) for parent + child."
                    },
                    "minRelayFee": {
                        "type": "integer",
                        "description": "Minimum relay fee required for the transaction to be accepted into the mempool."
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if CPFP recommendation could not be provided."
                    }
                },
                "required": [
                    "vsize",
                    "fee",
                    "totalVsize",
                    "totalFee",
                    "rate",
                    "minRelayFee",
                    "error"
                ]
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "txid": { "type": "string" },
                    "version": { "type": "integer" },
                    "locktime": { "type": "integer" },
                    "size": { "type": "integer" },
                    "weight": { "type": "integer" },
                    "fee": { "type": "integer" },
                    "vin": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "txid": { "type": "string" },
                                "vout": { "type": "integer" },
                                "is_coinbase": { "type": "boolean" },
                                "scriptsig": { "type": "string" },
                                "scriptsig_asm": { "type": "string" },
                                "sequence": { "type": "integer" },
                                "witness": {
                                    "type": "array",
                                    "items": { "type": "string" }
                                },
                                "prevout": {
                                    "type": "object",
                                    "properties": {
                                        "scriptpubkey": {
                                            "type": "string"
                                        },
                                        "scriptpubkey_asm": {
                                            "type": "string"
                                        },
                                        "scriptpubkey_type": {
                                            "type": "string"
                                        },
                                        "scriptpubkey_address": {
                                            "type": "string"
                                        },
                                        "value": { "type": "integer" }
                                    }
                                }
                            }
                        }
                    },
                    "vout": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "scriptpubkey": { "type": "string" },
                                "scriptpubkey_asm": { "type": "string" },
                                "scriptpubkey_type": { "type": "string" },
                                "scriptpubkey_address": {
                                    "type": "string"
                                },
                                "value": { "type": "integer" }
                            }
                        }
                    },
                    "status": {
                        "type": "object",
                        "properties": {
                            "confirmed": { "type": "boolean" },
                            "block_height": { "type": "integer" },
                            "block_hash": { "type": "string" },
                            "block_time": { "type": "integer" }
                        }
                    }
                },
                "required": ["txid", "vin", "vout", "status"]
            },
            "TransactionHex": {
                "type": "string",
                "description": "Raw hexadecimal representation of the Bitcoin transaction."
            },
            "TransactionStatus": {
                "type": "object",
                "properties": {
                    "confirmed": {
                        "type": "boolean"
                    },
                    "block_height": {
                        "type": "integer"
                    },
                    "block_hash": {
                        "type": "string"
                    }
                }
            },
            "TransactionId": {
                "type": "string",
                "description": "A Bitcoin transaction ID (txid)"
            },
            "MempoolStats": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "Number of transactions in the mempool"
                    },
                    "vsize": {
                        "type": "integer",
                        "description": "Total size of mempool transactions in virtual bytes"
                    },
                    "total_fee": {
                        "type": "integer",
                        "description": "Total fees paid by mempool transactions in satoshis"
                    },
                    "fee_histogram": {
                        "type": "array",
                        "description": "Mempool fee-rate distribution histogram as (feerate, vsize) tuples",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    }
                },
                "required": ["count", "vsize", "total_fee", "fee_histogram"]
            },
            "MempoolTxids": {
                "type": "array",
                "items": {
                    "type": "string",
                    "description": "Transaction ID (txid)"
                },
                "description": "Array of transaction IDs currently in the mempool"
            },
            "MempoolRecentTx": {
                "type": "object",
                "properties": {
                    "txid": {
                        "type": "string",
                        "description": "Transaction ID"
                    },
                    "fee": {
                        "type": "integer",
                        "description": "Total fee paid in satoshis"
                    },
                    "vsize": {
                        "type": "integer",
                        "description": "Virtual size of the transaction in vbytes"
                    },
                    "value": {
                        "type": "integer",
                        "description": "Total value transferred in satoshis"
                    }
                },
                "required": ["txid", "fee", "vsize", "value"]
            },
            "MerkleProof": {
                "type": "object",
                "properties": {
                    "block_height": {
                        "type": "integer",
                        "description": "Block height where the transaction was included."
                    },
                    "merkle": {
                        "type": "array",
                        "description": "Merkle branch hashes proving the inclusion of the transaction.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pos": {
                        "type": "integer",
                        "description": "Position of the transaction in the block's merkle tree."
                    }
                },
                "required": ["block_height", "merkle", "pos"]
            },
            "TxOutspend": {
                "type": "object",
                "properties": {
                    "spent": {
                        "type": "boolean",
                        "description": "Whether the output has been spent."
                    },
                    "txid": {
                        "type": "string",
                        "description": "Transaction ID of the spending transaction.",
                        "nullable": true
                    },
                    "vin": {
                        "type": "integer",
                        "description": "Index of the input in the spending transaction.",
                        "nullable": true
                    },
                    "status": {
                        "type": "object",
                        "description": "Confirmation status of the spending transaction.",
                        "nullable": true,
                        "properties": {
                            "confirmed": { "type": "boolean" },
                            "block_height": { "type": "integer" },
                            "block_hash": { "type": "string" },
                            "block_time": { "type": "integer" }
                        }
                    }
                },
                "required": ["spent"]
            },
            "Outspend": {
                "type": "object",
                "properties": {
                    "spent": {
                        "type": "boolean",
                        "description": "Indicates whether this output has been spent."
                    },
                    "txid": {
                        "type": "string",
                        "nullable": true,
                        "description": "The transaction ID that spent this output, if any."
                    },
                    "vin": {
                        "type": "integer",
                        "nullable": true,
                        "description": "The input index in the spending transaction."
                    },
                    "status": {
                        "type": "object",
                        "nullable": true,
                        "description": "Status of the spending transaction.",
                        "properties": {
                            "confirmed": { "type": "boolean" },
                            "block_height": { "type": "integer" },
                            "block_hash": { "type": "string" },
                            "block_time": { "type": "integer" }
                        }
                    }
                },
                "required": ["spent"]
            },
            "TransactionTimes": {
                "type": "object",
                "properties": {
                    "firstSeen": {
                        "type": "integer",
                        "description": "Unix timestamp when the transaction was first observed"
                    },
                    "addedToMempool": {
                        "type": "integer",
                        "description": "Unix timestamp when the transaction entered the mempool"
                    },
                    "blockTime": {
                        "type": "integer",
                        "description": "Unix timestamp when the transaction was confirmed in a block (null if unconfirmed)"
                    }
                },
                "required": ["firstSeen", "addedToMempool"]
            },
            "TxStatus": {
                "type": "object",
                "properties": {
                    "confirmed": {
                        "type": "boolean",
                        "description": "Whether the transaction is confirmed"
                    },
                    "block_height": {
                        "type": "integer",
                        "description": "Height of the block containing the transaction (if confirmed)"
                    },
                    "block_hash": {
                        "type": "string",
                        "description": "Hash of the block containing the transaction (if confirmed)"
                    }
                },
                "required": ["confirmed"]
            },
            "BroadcastResponse": {
                "type": "object",
                "properties": {
                    "txid": {
                        "type": "string",
                        "description": "Transaction ID of the broadcast transaction."
                    }
                },
                "required": ["txid"]
            },
            "Utxo": {
                "type": "object",
                "properties": {
                    "txid": {
                        "type": "string",
                        "description": "Transaction ID where the UTXO originates."
                    },
                    "vout": {
                        "type": "integer",
                        "description": "Index of the output in the transaction."
                    },
                    "value": {
                        "type": "integer",
                        "description": "Value of the UTXO in satoshis."
                    },
                    "status": {
                        "type": "object",
                        "properties": {
                            "confirmed": { "type": "boolean" },
                            "block_height": { "type": "integer" },
                            "block_hash": { "type": "string" },
                            "block_time": { "type": "integer" }
                        },
                        "required": ["confirmed"]
                    }
                },
                "required": ["txid", "vout", "value", "status"]
            }
        },
        "securitySchemes": {
            "api-key": {
                "type": "apiKey",
                "in": "header",
                "name": "api-key",
                "description": "Project API Key"
            }
        }
    },
    "security": [
        {
            "api-key": []
        }
    ]
}
